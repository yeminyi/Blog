2018-08-25 11:27:16.737 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 11:27:16.765 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 11:27:16.768 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 11:27:16.768 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 11:27:16.768 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 11:27:16.768 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:05:40.254 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:05:40.289 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:05:40.292 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:05:40.292 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:05:40.294 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:05:40.294 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:05:57.398 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:05:57.431 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:05:57.434 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:05:57.434 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:05:57.434 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:05:57.434 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:06:08.088 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 17:06:08.302 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 17:06:08.303 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 17:06:08.308 +08:00 [DBG] Start discovery request
2018-08-25 17:06:16.422 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 17:06:16.424 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 17:06:16.426 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 17:06:16.427 +08:00 [DBG] Start discovery request
2018-08-25 17:45:45.445 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:45:45.479 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:45:45.482 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:45:45.483 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:45:45.483 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:45:45.484 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:45:59.333 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 17:45:59.435 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 17:45:59.437 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 17:45:59.442 +08:00 [DBG] Start discovery request
2018-08-25 17:45:59.644 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 17:45:59.649 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 17:45:59.651 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 17:45:59.657 +08:00 [DBG] Start key discovery request
2018-08-25 17:45:59.811 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 17:45:59.819 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 17:45:59.820 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 17:45:59.825 +08:00 [DBG] Start authorize request
2018-08-25 17:45:59.838 +08:00 [DBG] No user present in authorize request
2018-08-25 17:45:59.844 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:45:59.858 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:45:59.873 +08:00 [ERR] Invalid redirect_uri: https://localhost:7001/signin-oidc
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "AllowedRedirectUris": [
    "http://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707871597298240.OTMzMDEwNjctZGMxZi00MWE0LThjMWUtOGI2MDYyY2I5ODkwZDk2NDE0MzEtNTA0OS00ZGEwLWI0ZTItNjNhODM3NDBmNjI5",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjuKVA4SbxmU6arivH7spDX-XbV51qlbmAG-kni4EJEmrWENWEGE_odTJGUBizDr6jQh56IGPVLnb-wdzJ6gRqDehlqBTWea9IpkmUY-dH9NaseSUEBVtBrIKnAFR8CahXKIywY3tDTv1Yjwv48QyQUXXONewsmJK53WRNQFX2gVZP_u2IWE36zdiqGQ3Qa8pbAfHGK5zhrjmi9a_xICNtISaafty3UTLX_xfB6JY8w1UCDNeVUxPv_jIInAtmZzu_1wOttoHVYTdwQsEzdp4BdcqtBoxFsXODXlgx1PqTUKnQ",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:45:59.879 +08:00 [ERR] Request validation failed
2018-08-25 17:45:59.880 +08:00 [INF] {
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "AllowedRedirectUris": [
    "http://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707871597298240.OTMzMDEwNjctZGMxZi00MWE0LThjMWUtOGI2MDYyY2I5ODkwZDk2NDE0MzEtNTA0OS00ZGEwLWI0ZTItNjNhODM3NDBmNjI5",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjuKVA4SbxmU6arivH7spDX-XbV51qlbmAG-kni4EJEmrWENWEGE_odTJGUBizDr6jQh56IGPVLnb-wdzJ6gRqDehlqBTWea9IpkmUY-dH9NaseSUEBVtBrIKnAFR8CahXKIywY3tDTv1Yjwv48QyQUXXONewsmJK53WRNQFX2gVZP_u2IWE36zdiqGQ3Qa8pbAfHGK5zhrjmi9a_xICNtISaafty3UTLX_xfB6JY8w1UCDNeVUxPv_jIInAtmZzu_1wOttoHVYTdwQsEzdp4BdcqtBoxFsXODXlgx1PqTUKnQ",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:45:59.903 +08:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "Endpoint": "Authorize",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLGADU7TLG68:00000001",
  "TimeStamp": "2018-08-25T09:45:59Z",
  "ProcessId": 19844,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:46:51.637 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:46:51.669 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:46:51.673 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:46:51.673 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:46:51.673 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:46:51.674 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:47:06.070 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:47:06.102 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:47:06.104 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:47:06.105 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:47:06.105 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:47:06.106 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:47:19.280 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 17:47:29.644 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 17:47:29.645 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 17:47:29.649 +08:00 [DBG] Start discovery request
2018-08-25 17:47:29.788 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 17:47:29.790 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 17:47:29.791 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 17:47:29.795 +08:00 [DBG] Start key discovery request
2018-08-25 17:47:29.895 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 17:47:29.901 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 17:47:29.902 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 17:47:29.907 +08:00 [DBG] Start authorize request
2018-08-25 17:47:29.918 +08:00 [DBG] No user present in authorize request
2018-08-25 17:47:29.923 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:47:29.935 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:47:29.941 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:47:29.942 +08:00 [DBG] No PKCE used.
2018-08-25 17:47:29.967 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:47:29.978 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
  "Nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:47:29.989 +08:00 [INF] Showing login: User is not authenticated
2018-08-25 17:47:30.128 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:47:30.128 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:47:30.130 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:47:30.131 +08:00 [DBG] No PKCE used.
2018-08-25 17:47:30.132 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:47:30.135 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:26.281 +08:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 17:48:26.864 +08:00 [DBG] Augmenting SignInContext
2018-08-25 17:48:26.866 +08:00 [DBG] Adding idp claim with value: local
2018-08-25 17:48:26.867 +08:00 [DBG] Adding amr claim with value: pwd
2018-08-25 17:48:26.867 +08:00 [DBG] Adding auth_time claim with value: 1535190506
2018-08-25 17:48:26.878 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 17:48:26.896 +08:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLGADUVLJFDB:00000003",
  "TimeStamp": "2018-08-25T09:48:26Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:48:26.905 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 17:48:26.907 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 17:48:26.909 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 17:48:26.915 +08:00 [DBG] Start authorize callback request
2018-08-25 17:48:26.918 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:48:26.919 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:48:26.921 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:26.922 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:48:26.923 +08:00 [DBG] No PKCE used.
2018-08-25 17:48:26.923 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:48:26.924 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
  "Nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
  "SessionId": "0819f2560ae7f0dbcc7dc333db3bfe01",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:48:26.960 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 17:48:26.961 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 17:48:26.961 +08:00 [INF] Showing consent: User has not yet consented
2018-08-25 17:48:26.981 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:48:26.982 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:26.985 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:48:26.986 +08:00 [DBG] No PKCE used.
2018-08-25 17:48:26.987 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:48:26.987 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:36.685 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 17:48:36.712 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:48:36.712 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:36.713 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:48:36.714 +08:00 [DBG] No PKCE used.
2018-08-25 17:48:36.715 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:48:36.735 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 17:48:36.736 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 17:48:36.738 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 17:48:36.739 +08:00 [DBG] Start authorize callback request
2018-08-25 17:48:36.743 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:48:36.743 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:48:36.744 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:36.745 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:48:36.747 +08:00 [DBG] No PKCE used.
2018-08-25 17:48:36.748 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:48:36.749 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
  "Nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
  "SessionId": "0819f2560ae7f0dbcc7dc333db3bfe01",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707872498454020.NGE5OTBmODktNGFmMS00ZmM4LWFiZmQtNmI0NTBmMjA3YWE4NTE4YzliNWUtYWNmOS00MWNmLTlkNDctOWM2ZWQ0NzlhYzQ0",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:48:36.757 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 17:48:36.759 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 17:48:36.765 +08:00 [INF] User consented to scopes: ["openid"]
2018-08-25 17:48:36.781 +08:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:48:36.792 +08:00 [DBG] Creating Hybrid Flow response.
2018-08-25 17:48:36.815 +08:00 [DBG] Creating Implicit Flow response.
2018-08-25 17:48:36.826 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 17:48:36.828 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 17:48:36.889 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aBEg"
    },
    {
      "TokenType": "code",
      "TokenValue": "****9db9"
    }
  ],
  "ActivityId": "0HLGADUVLJFDB:00000008",
  "TimeStamp": "2018-08-25T09:48:36Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:48:36.896 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjt00gr8V0kJsCPyeG7A_0CNU3IFMIXlITKsw_MN-wK8KM5OglKGs7f3W956P1szKol18JuV3Wx0B2mwEvNpPozyjPF2LLoYOBb2lPsu906-_he1PNsRQ2_v53hlK3OsqJogmBhV3flFe5W6BKfQkBOhORe5bnXNXRewHrHP9-NCb2sRBfG5wW8ehEUV28ds163Jnbf_S3HZymUR7uW9S50-zxESps8dp3nFS4Ikxa9fIgrFgoqAWOrQE9s0lGcBkUF_zQcJihMIL6PBY8pnBCYVh1nrJ0am3BOKWPV926DN7w",
  "Scope": "openid"
}
2018-08-25 17:48:36.917 +08:00 [DBG] Augmenting SignInContext
2018-08-25 17:48:36.918 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 17:48:37.059 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2018-08-25 17:48:37.066 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2018-08-25 17:48:37.067 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2018-08-25 17:48:37.077 +08:00 [DBG] Start token request.
2018-08-25 17:48:37.083 +08:00 [DBG] Start client validation
2018-08-25 17:48:37.090 +08:00 [DBG] Start parsing Basic Authentication secret
2018-08-25 17:48:37.095 +08:00 [DBG] Start parsing for secret in post body
2018-08-25 17:48:37.096 +08:00 [DBG] Parser found secret: PostBodySecretParser
2018-08-25 17:48:37.096 +08:00 [DBG] Secret id found: mvcclient
2018-08-25 17:48:37.097 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:37.111 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2018-08-25 17:48:37.111 +08:00 [DBG] Client validation success
2018-08-25 17:48:37.116 +08:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLGADUVLJFDA:00000003",
  "TimeStamp": "2018-08-25T09:48:37Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:48:37.126 +08:00 [DBG] Start token request validation
2018-08-25 17:48:37.140 +08:00 [DBG] Start validation of authorization code token request
2018-08-25 17:48:37.153 +08:00 [DBG] Validation of authorization code token request success
2018-08-25 17:48:37.158 +08:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "GrantType": "authorization_code",
  "AuthorizationCode": "67c7b77e9223d4b036b28789b8f01989418b993c5d9b219a8b2d8f2528109db9",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "67c7b77e9223d4b036b28789b8f01989418b993c5d9b219a8b2d8f2528109db9",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2018-08-25 17:48:37.174 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:37.186 +08:00 [DBG] Getting claims for access token for client: mvcclient
2018-08-25 17:48:37.186 +08:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:48:37.199 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:37.200 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 17:48:37.202 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 17:48:37.207 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "Endpoint": "Token",
  "Scopes": "openid",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****sznQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7WdQ"
    }
  ],
  "ActivityId": "0HLGADUVLJFDA:00000003",
  "TimeStamp": "2018-08-25T09:48:37Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:48:37.209 +08:00 [DBG] Token request success.
2018-08-25 17:48:37.222 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-08-25 17:48:37.224 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-08-25 17:48:37.225 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-08-25 17:48:37.232 +08:00 [DBG] Start userinfo request
2018-08-25 17:48:37.236 +08:00 [DBG] Bearer token found in header
2018-08-25 17:48:37.307 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:37.311 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:48:37.314 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-08-25 17:48:37.318 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1535190517,
    "exp": 1535194117,
    "iss": "https://localhost:5001",
    "aud": "https://localhost:5001/resources",
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1535190506,
    "idp": "local",
    "scope": "openid",
    "amr": "pwd"
  }
}
2018-08-25 17:48:37.325 +08:00 [DBG] Creating userinfo response
2018-08-25 17:48:37.329 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:48:37.332 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:48:37.335 +08:00 [DBG] Requested claim types: sub
2018-08-25 17:48:37.335 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:48:37.340 +08:00 [INF] Profile service returned to the following claim types: sub
2018-08-25 17:48:37.341 +08:00 [DBG] End userinfo request
2018-08-25 17:54:04.149 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 17:54:04.151 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 17:54:04.152 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 17:54:04.153 +08:00 [DBG] Start discovery request
2018-08-25 17:54:04.273 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 17:54:04.274 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 17:54:04.275 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 17:54:04.276 +08:00 [DBG] Start key discovery request
2018-08-25 17:54:04.352 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 17:54:04.354 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 17:54:04.354 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 17:54:04.355 +08:00 [DBG] Start authorize request
2018-08-25 17:54:04.355 +08:00 [DBG] No user present in authorize request
2018-08-25 17:54:04.355 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:04.356 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:04.356 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:04.357 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:04.357 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:04.358 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
  "Nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:54:04.361 +08:00 [INF] Showing login: User is not authenticated
2018-08-25 17:54:04.365 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:04.365 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:04.366 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:04.367 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:04.367 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:04.368 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:13.686 +08:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 17:54:13.704 +08:00 [DBG] Augmenting SignInContext
2018-08-25 17:54:13.705 +08:00 [DBG] Adding idp claim with value: local
2018-08-25 17:54:13.706 +08:00 [DBG] Adding amr claim with value: pwd
2018-08-25 17:54:13.707 +08:00 [DBG] Adding auth_time claim with value: 1535190853
2018-08-25 17:54:13.708 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 17:54:13.710 +08:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLGADUVLJFDF:00000003",
  "TimeStamp": "2018-08-25T09:54:13Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:54:13.716 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 17:54:13.718 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 17:54:13.721 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 17:54:13.722 +08:00 [DBG] Start authorize callback request
2018-08-25 17:54:13.723 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:54:13.724 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:13.726 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:13.726 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:13.727 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:13.730 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:13.730 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
  "Nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
  "SessionId": "a6831ab186e309b1e3ab26fb2bfe146a",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:54:13.736 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 17:54:13.737 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 17:54:13.738 +08:00 [INF] Showing consent: User has not yet consented
2018-08-25 17:54:13.741 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:13.742 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:13.743 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:13.743 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:13.744 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:13.744 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.458 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 17:54:15.461 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:15.461 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.462 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:15.463 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:15.463 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:15.468 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 17:54:15.470 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 17:54:15.471 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 17:54:15.472 +08:00 [DBG] Start authorize callback request
2018-08-25 17:54:15.473 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:54:15.474 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 17:54:15.475 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.476 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 17:54:15.477 +08:00 [DBG] No PKCE used.
2018-08-25 17:54:15.479 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 17:54:15.481 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
  "Nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
  "SessionId": "a6831ab186e309b1e3ab26fb2bfe146a",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "636707876443068994.NDgwZDIzYjYtMTRlNC00YjY3LWE4MmItMmUxYTRiMThjMTU3ZGRkNTQzMjUtZWNhOC00NDMzLWExOTQtNzYxYzUxODIwMThm",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 17:54:15.486 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 17:54:15.486 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 17:54:15.487 +08:00 [INF] User consented to scopes: ["openid"]
2018-08-25 17:54:15.487 +08:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:54:15.488 +08:00 [DBG] Creating Hybrid Flow response.
2018-08-25 17:54:15.498 +08:00 [DBG] Creating Implicit Flow response.
2018-08-25 17:54:15.500 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 17:54:15.502 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 17:54:15.505 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7Ecw"
    },
    {
      "TokenType": "code",
      "TokenValue": "****4cfb"
    }
  ],
  "ActivityId": "0HLGADUVLJFDF:00000007",
  "TimeStamp": "2018-08-25T09:54:15Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:54:15.508 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtphgquoSJH9zkJjhp4lrThsm0vqoVsqyXcYtu4cuQZMN5e899eCH1aeEUb2zSi2zarDjdrgFbYwlE5dnFdMhjrARZV3L6dni3WB7P1ESBObor6U2hPrgCdznjRcEWEDWzRAKxwVuFieF_f8w6Tp-myX1R-_dbPgZasmDV7hDCCqmGHm_uACzFl3VQmmNkri4ZZRzIEkeXLHZq7j4pYO0oBeGX9zQ99dXXzvmm14xnamlM-fAFN5jRcjG5OZ3H6lB2sCudZOybfAZdg-ZgUW0J-GkY7bNuhas5z7ws-xjrFLg",
  "Scope": "openid"
}
2018-08-25 17:54:15.509 +08:00 [DBG] Augmenting SignInContext
2018-08-25 17:54:15.510 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 17:54:15.619 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2018-08-25 17:54:15.621 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2018-08-25 17:54:15.621 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2018-08-25 17:54:15.623 +08:00 [DBG] Start token request.
2018-08-25 17:54:15.624 +08:00 [DBG] Start client validation
2018-08-25 17:54:15.624 +08:00 [DBG] Start parsing Basic Authentication secret
2018-08-25 17:54:15.625 +08:00 [DBG] Start parsing for secret in post body
2018-08-25 17:54:15.625 +08:00 [DBG] Parser found secret: PostBodySecretParser
2018-08-25 17:54:15.626 +08:00 [DBG] Secret id found: mvcclient
2018-08-25 17:54:15.626 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.627 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2018-08-25 17:54:15.628 +08:00 [DBG] Client validation success
2018-08-25 17:54:15.628 +08:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLGADUVLJFDE:00000003",
  "TimeStamp": "2018-08-25T09:54:15Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:54:15.633 +08:00 [DBG] Start token request validation
2018-08-25 17:54:15.633 +08:00 [DBG] Start validation of authorization code token request
2018-08-25 17:54:15.646 +08:00 [DBG] Validation of authorization code token request success
2018-08-25 17:54:15.647 +08:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "GrantType": "authorization_code",
  "AuthorizationCode": "3c4483dddab78a832f3637b818a45647a46627b4362dcdc430584df6cfcc4cfb",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "3c4483dddab78a832f3637b818a45647a46627b4362dcdc430584df6cfcc4cfb",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2018-08-25 17:54:15.649 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.650 +08:00 [DBG] Getting claims for access token for client: mvcclient
2018-08-25 17:54:15.650 +08:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 17:54:15.656 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.657 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 17:54:15.658 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 17:54:15.661 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "Endpoint": "Token",
  "Scopes": "openid",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TKgw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****To0g"
    }
  ],
  "ActivityId": "0HLGADUVLJFDE:00000003",
  "TimeStamp": "2018-08-25T09:54:15Z",
  "ProcessId": 16116,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 17:54:15.666 +08:00 [DBG] Token request success.
2018-08-25 17:54:15.678 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-08-25 17:54:15.679 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-08-25 17:54:15.680 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-08-25 17:54:15.681 +08:00 [DBG] Start userinfo request
2018-08-25 17:54:15.681 +08:00 [DBG] Bearer token found in header
2018-08-25 17:54:15.684 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.685 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 17:54:15.689 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-08-25 17:54:15.690 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1535190855,
    "exp": 1535194455,
    "iss": "https://localhost:5001",
    "aud": "https://localhost:5001/resources",
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1535190853,
    "idp": "local",
    "scope": "openid",
    "amr": "pwd"
  }
}
2018-08-25 17:54:15.691 +08:00 [DBG] Creating userinfo response
2018-08-25 17:54:15.692 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:54:15.692 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:54:15.693 +08:00 [DBG] Requested claim types: sub
2018-08-25 17:54:15.693 +08:00 [DBG] Scopes in access token: openid
2018-08-25 17:54:15.697 +08:00 [INF] Profile service returned to the following claim types: sub
2018-08-25 17:54:15.698 +08:00 [DBG] End userinfo request
2018-08-25 17:58:10.987 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:58:11.023 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:58:11.026 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:58:11.026 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:58:11.027 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:58:11.028 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 17:58:34.378 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 17:58:34.415 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 17:58:34.417 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 17:58:34.418 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 17:58:34.419 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 17:58:34.420 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 18:00:06.948 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 18:00:07.017 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 18:00:07.018 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 18:00:07.022 +08:00 [DBG] Start discovery request
2018-08-25 18:00:07.173 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 18:00:07.176 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 18:00:07.176 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 18:00:07.181 +08:00 [DBG] Start key discovery request
2018-08-25 18:00:07.284 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 18:00:07.302 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 18:00:07.303 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 18:00:07.309 +08:00 [DBG] Start authorize request
2018-08-25 18:00:07.319 +08:00 [DBG] No user present in authorize request
2018-08-25 18:00:07.324 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:00:07.335 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:00:07.341 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:00:07.342 +08:00 [DBG] No PKCE used.
2018-08-25 18:00:07.361 +08:00 [ERR] Invalid scope: email
2018-08-25 18:00:07.364 +08:00 [ERR] Request validation failed
2018-08-25 18:00:07.374 +08:00 [INF] {
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjtv5Hif6x215nXoEVIIJhPXXxyoSRuFmQdOhzsMKSBcqYaxvg6STwdwTSTOQZzszDnhPRZIB73eUaHtkxh4QESLIyIv5S7Rot043HBT9l3kb_1Mj2v0OXLbK89MRVqFccnsDta4DiAU8tuiupvbMOuQFNNbxKv1j5mZBYkmqWkT4amETTEfuxY6YZALLGi64ZJADpecy-JE-4WW7AfTptol7Mc48NMLlMK9aBr0TAekDJtNqIcuCNTTFMzTbTYKuz6PCTtkfVZjpQQunmNJK09HiMBUBQXNcMOyQ-nBElRtpg",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707880072309238.YmFjYzE3OTUtZGZiYS00Zjg1LThhM2YtNzgzZjQxMjRlNjZmMmNlZDZmODEtNDQxOC00M2E0LTgzNzYtMzk0MzQ1Y2NjNTNm",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9Rhsfjtv5Hif6x215nXoEVIIJhPXXxyoSRuFmQdOhzsMKSBcqYaxvg6STwdwTSTOQZzszDnhPRZIB73eUaHtkxh4QESLIyIv5S7Rot043HBT9l3kb_1Mj2v0OXLbK89MRVqFccnsDta4DiAU8tuiupvbMOuQFNNbxKv1j5mZBYkmqWkT4amETTEfuxY6YZALLGi64ZJADpecy-JE-4WW7AfTptol7Mc48NMLlMK9aBr0TAekDJtNqIcuCNTTFMzTbTYKuz6PCTtkfVZjpQQunmNJK09HiMBUBQXNcMOyQ-nBElRtpg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:00:07.393 +08:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "Scopes": "openid profile email restapi",
  "GrantType": "hybrid",
  "Error": "invalid_scope",
  "ActivityId": "0HLGAE64HRVCR:00000001",
  "TimeStamp": "2018-08-25T10:00:07Z",
  "ProcessId": 12348,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:01:19.193 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-08-25 18:01:19.239 +08:00 [DBG] Using Identity.Application as default scheme for authentication
2018-08-25 18:01:19.243 +08:00 [DBG] Using Identity.External as default scheme for sign-in
2018-08-25 18:01:19.243 +08:00 [DBG] Using Identity.External as default scheme for sign-out
2018-08-25 18:01:19.244 +08:00 [DBG] Using Identity.Application as default scheme for challenge
2018-08-25 18:01:19.245 +08:00 [DBG] Using Identity.Application as default scheme for forbid
2018-08-25 18:01:21.604 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 18:01:21.679 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 18:01:21.680 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 18:01:21.684 +08:00 [DBG] Start discovery request
2018-08-25 18:01:21.825 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 18:01:21.828 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 18:01:21.828 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 18:01:21.833 +08:00 [DBG] Start key discovery request
2018-08-25 18:01:21.930 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 18:01:21.936 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 18:01:21.936 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 18:01:21.941 +08:00 [DBG] Start authorize request
2018-08-25 18:01:21.954 +08:00 [DBG] No user present in authorize request
2018-08-25 18:01:21.961 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:21.973 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:21.979 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:21.981 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:22.010 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:22.021 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
  "Nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:01:22.031 +08:00 [INF] Showing login: User is not authenticated
2018-08-25 18:01:22.171 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:22.171 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:22.173 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:22.174 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:22.175 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:22.178 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:32.819 +08:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 18:01:33.357 +08:00 [DBG] Augmenting SignInContext
2018-08-25 18:01:33.360 +08:00 [DBG] Adding idp claim with value: local
2018-08-25 18:01:33.361 +08:00 [DBG] Adding amr claim with value: pwd
2018-08-25 18:01:33.363 +08:00 [DBG] Adding auth_time claim with value: 1535191293
2018-08-25 18:01:33.374 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 18:01:33.391 +08:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLGAE6QQ0AES:00000003",
  "TimeStamp": "2018-08-25T10:01:33Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:01:33.405 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 18:01:33.406 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 18:01:33.407 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 18:01:33.413 +08:00 [DBG] Start authorize callback request
2018-08-25 18:01:33.417 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:01:33.418 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:33.419 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:33.419 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:33.420 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:33.420 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:33.421 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
  "Nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
  "SessionId": "e32a662c39937379c4762c524509ac01",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:01:33.461 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 18:01:33.462 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 18:01:33.463 +08:00 [INF] Showing consent: User has not yet consented
2018-08-25 18:01:33.484 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:33.484 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:33.486 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:33.486 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:33.487 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:33.487 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:46.984 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 18:01:47.007 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:47.007 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.010 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:47.010 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:47.011 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:47.030 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 18:01:47.032 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 18:01:47.033 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 18:01:47.033 +08:00 [DBG] Start authorize callback request
2018-08-25 18:01:47.037 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:01:47.038 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:01:47.039 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.040 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:01:47.043 +08:00 [DBG] No PKCE used.
2018-08-25 18:01:47.043 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:01:47.044 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
  "Nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
  "SessionId": "e32a662c39937379c4762c524509ac01",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707880818785111.MDg3OTFlNTMtOGNhNy00OWQ1LTlhNjAtZjJkZTlhYjhjZjdmMmZjODExZDAtMWFhYS00NjFkLWE4MWYtY2RlYTUwMGI5NzRl",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:01:47.050 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 18:01:47.053 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 18:01:47.064 +08:00 [INF] User consented to scopes: ["openid","profile","email","restapi"]
2018-08-25 18:01:47.080 +08:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:01:47.088 +08:00 [DBG] Creating Hybrid Flow response.
2018-08-25 18:01:47.114 +08:00 [DBG] Creating Implicit Flow response.
2018-08-25 18:01:47.122 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 18:01:47.127 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 18:01:47.191 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zhRA"
    },
    {
      "TokenType": "code",
      "TokenValue": "****d75d"
    }
  ],
  "ActivityId": "0HLGAE6QQ0AES:00000007",
  "TimeStamp": "2018-08-25T10:01:47Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:01:47.198 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjtrJUFT4IBYpss3qvxDAJE8PzQrvXC6Om3ii3qmYAulXPkB2ExdVB1IjkKMVeolTJHg-se4Mfyd2f0qRzNB5Nzk3N41eIJ4FKF2IXlKsmdkWDdQV1XqFsVf3je1RN2mq6P0mcQodvRAdiNk5fHX-C50ay58Fk-b48e2xVhoD7yd6u87jg-_G4CgSnP_v2M_tuQIAHjX6TdXROFwEtqZDORUqs7TtJ2Z9rYWu2b45SKSCJqUZ8YKGloZN6J_dSM5OEQUGX-LeadLnNMIyfoJzJ3S9KQERx3MQj-1LL66yfMlwA",
  "Scope": "openid profile email restapi"
}
2018-08-25 18:01:47.218 +08:00 [DBG] Augmenting SignInContext
2018-08-25 18:01:47.218 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 18:01:47.333 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2018-08-25 18:01:47.339 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2018-08-25 18:01:47.340 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2018-08-25 18:01:47.349 +08:00 [DBG] Start token request.
2018-08-25 18:01:47.355 +08:00 [DBG] Start client validation
2018-08-25 18:01:47.362 +08:00 [DBG] Start parsing Basic Authentication secret
2018-08-25 18:01:47.365 +08:00 [DBG] Start parsing for secret in post body
2018-08-25 18:01:47.366 +08:00 [DBG] Parser found secret: PostBodySecretParser
2018-08-25 18:01:47.367 +08:00 [DBG] Secret id found: mvcclient
2018-08-25 18:01:47.369 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.378 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2018-08-25 18:01:47.379 +08:00 [DBG] Client validation success
2018-08-25 18:01:47.385 +08:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLGAE6QQ0AER:00000003",
  "TimeStamp": "2018-08-25T10:01:47Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:01:47.392 +08:00 [DBG] Start token request validation
2018-08-25 18:01:47.402 +08:00 [DBG] Start validation of authorization code token request
2018-08-25 18:01:47.418 +08:00 [DBG] Validation of authorization code token request success
2018-08-25 18:01:47.422 +08:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b7262d867bf10d16374b466d455cfff09d8387b10f8879d29c3a123f78cbd75d",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "b7262d867bf10d16374b466d455cfff09d8387b10f8879d29c3a123f78cbd75d",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2018-08-25 18:01:47.440 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.454 +08:00 [DBG] Getting claims for access token for client: mvcclient
2018-08-25 18:01:47.455 +08:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:01:47.470 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.471 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 18:01:47.472 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 18:01:47.479 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "Endpoint": "Token",
  "Scopes": "openid profile email restapi",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****PEiA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****iEOQ"
    }
  ],
  "ActivityId": "0HLGAE6QQ0AER:00000003",
  "TimeStamp": "2018-08-25T10:01:47Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:01:47.484 +08:00 [DBG] Token request success.
2018-08-25 18:01:47.496 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-08-25 18:01:47.498 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-08-25 18:01:47.500 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-08-25 18:01:47.507 +08:00 [DBG] Start userinfo request
2018-08-25 18:01:47.510 +08:00 [DBG] Bearer token found in header
2018-08-25 18:01:47.576 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.581 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:01:47.585 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-08-25 18:01:47.590 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1535191307,
    "exp": 1535194907,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1535191293,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2018-08-25 18:01:47.599 +08:00 [DBG] Creating userinfo response
2018-08-25 18:01:47.603 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:01:47.606 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:01:47.609 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2018-08-25 18:01:47.609 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:01:47.613 +08:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2018-08-25 18:01:47.614 +08:00 [DBG] End userinfo request
2018-08-25 18:09:01.482 +08:00 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Authentication failed because the remote party has closed the transport stream.
   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)
   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)
--- End of stack trace from previous location where exception was thrown ---
   at System.Net.Security.SslState.ThrowIfExceptional()
   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)
   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)
   at System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)
   at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_1(IAsyncResult iar)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context)
2018-08-25 18:17:13.829 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 18:17:13.831 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 18:17:13.832 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 18:17:13.834 +08:00 [DBG] Start discovery request
2018-08-25 18:17:13.936 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 18:17:13.937 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 18:17:13.939 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 18:17:13.941 +08:00 [DBG] Start key discovery request
2018-08-25 18:17:14.024 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-08-25 18:17:14.026 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-08-25 18:17:14.027 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-08-25 18:17:14.028 +08:00 [DBG] Start authorize request
2018-08-25 18:17:14.029 +08:00 [DBG] No user present in authorize request
2018-08-25 18:17:14.029 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:14.031 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:14.032 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:14.033 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:14.033 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:14.035 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
  "Nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:17:14.042 +08:00 [INF] Showing login: User is not authenticated
2018-08-25 18:17:14.046 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:14.046 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:14.047 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:14.050 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:14.051 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:14.052 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:24.166 +08:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 18:17:24.186 +08:00 [DBG] Augmenting SignInContext
2018-08-25 18:17:24.187 +08:00 [DBG] Adding idp claim with value: local
2018-08-25 18:17:24.188 +08:00 [DBG] Adding amr claim with value: pwd
2018-08-25 18:17:24.190 +08:00 [DBG] Adding auth_time claim with value: 1535192244
2018-08-25 18:17:24.191 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 18:17:24.193 +08:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLGAE6QQ0AF5:00000003",
  "TimeStamp": "2018-08-25T10:17:24Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:17:24.199 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 18:17:24.202 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 18:17:24.203 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 18:17:24.204 +08:00 [DBG] Start authorize callback request
2018-08-25 18:17:24.204 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:17:24.205 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:24.205 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:24.206 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:24.207 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:24.207 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:24.208 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
  "Nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
  "SessionId": "83f193150d65e34fd784ab64fcce8a42",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:17:24.216 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 18:17:24.217 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 18:17:24.217 +08:00 [INF] Showing consent: User has not yet consented
2018-08-25 18:17:24.222 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:24.224 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:24.225 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:24.227 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:24.227 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:24.228 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.402 +08:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-08-25 18:17:28.406 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:28.407 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.407 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:28.408 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:28.409 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:28.413 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-08-25 18:17:28.417 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-08-25 18:17:28.418 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-08-25 18:17:28.418 +08:00 [DBG] Start authorize callback request
2018-08-25 18:17:28.419 +08:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:17:28.420 +08:00 [DBG] Start authorize request protocol validation
2018-08-25 18:17:28.420 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.421 +08:00 [DBG] Checking for PKCE parameters
2018-08-25 18:17:28.421 +08:00 [DBG] No PKCE used.
2018-08-25 18:17:28.422 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-08-25 18:17:28.424 +08:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
  "Nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
  "SessionId": "83f193150d65e34fd784ab64fcce8a42",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "636707890339775182.NWQ1OGE3NTAtOThlMS00MWJiLWIwNmEtNjUzZmZmNDU0MzEwM2U0ZTllZTgtM2RlNy00NmQyLThiMGEtOTNmZjBiNzI3NjVi",
    "state": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2018-08-25 18:17:28.431 +08:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2018-08-25 18:17:28.432 +08:00 [DBG] Found no prior consent from consent store, consent is required
2018-08-25 18:17:28.432 +08:00 [INF] User consented to scopes: ["openid","profile","email","restapi"]
2018-08-25 18:17:28.433 +08:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:17:28.436 +08:00 [DBG] Creating Hybrid Flow response.
2018-08-25 18:17:28.443 +08:00 [DBG] Creating Implicit Flow response.
2018-08-25 18:17:28.444 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 18:17:28.445 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 18:17:28.455 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****mzoA"
    },
    {
      "TokenType": "code",
      "TokenValue": "****179e"
    }
  ],
  "ActivityId": "0HLGAE6QQ0AF5:00000007",
  "TimeStamp": "2018-08-25T10:17:28Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:17:28.457 +08:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8Cb5YVUw-HpOmhyk9RhsfjunlsBmSMpDfBVT5JY9iXIgFhPKV-FRSsd1SqOYkk0-qmyb7U3NEC79fkf0JifS_2zzmsEkeh1J-qlg7_-zBejv4icLv3BP11N_d1ws5JqKsrGbAJw2070aR8aYQnNrW6ShsWLDW0IJ-65sL9iS_MqPUF6WqKIPXExbGfyUxdGvvVg2B6B1VvpTCaxAwa4m2AanFvDYxUM-ZOhwNQi4rYVMpBHva1UI9qw7FCyGkrGAO93Z6ccwKPVxwYF8o9W-iJH0Y1em76-EhA6pch6eW9VZ2qRrQDiWHeUzJkZSTXcr_A",
  "Scope": "openid profile email restapi"
}
2018-08-25 18:17:28.458 +08:00 [DBG] Augmenting SignInContext
2018-08-25 18:17:28.459 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2018-08-25 18:17:28.578 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2018-08-25 18:17:28.580 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2018-08-25 18:17:28.581 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2018-08-25 18:17:28.582 +08:00 [DBG] Start token request.
2018-08-25 18:17:28.583 +08:00 [DBG] Start client validation
2018-08-25 18:17:28.584 +08:00 [DBG] Start parsing Basic Authentication secret
2018-08-25 18:17:28.584 +08:00 [DBG] Start parsing for secret in post body
2018-08-25 18:17:28.585 +08:00 [DBG] Parser found secret: PostBodySecretParser
2018-08-25 18:17:28.585 +08:00 [DBG] Secret id found: mvcclient
2018-08-25 18:17:28.585 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.586 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2018-08-25 18:17:28.587 +08:00 [DBG] Client validation success
2018-08-25 18:17:28.588 +08:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLGAE6QQ0AF4:00000003",
  "TimeStamp": "2018-08-25T10:17:28Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:17:28.593 +08:00 [DBG] Start token request validation
2018-08-25 18:17:28.594 +08:00 [DBG] Start validation of authorization code token request
2018-08-25 18:17:28.610 +08:00 [DBG] Validation of authorization code token request success
2018-08-25 18:17:28.610 +08:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "GrantType": "authorization_code",
  "AuthorizationCode": "1b2924edee78cd504aa6579797c9306d6f3418967646da00d48c43dae967179e",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "1b2924edee78cd504aa6579797c9306d6f3418967646da00d48c43dae967179e",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2018-08-25 18:17:28.614 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.615 +08:00 [DBG] Getting claims for access token for client: mvcclient
2018-08-25 18:17:28.616 +08:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2018-08-25 18:17:28.621 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.623 +08:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2018-08-25 18:17:28.623 +08:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-08-25 18:17:28.628 +08:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "Endpoint": "Token",
  "Scopes": "openid profile email restapi",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****1rcg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RYXQ"
    }
  ],
  "ActivityId": "0HLGAE6QQ0AF4:00000003",
  "TimeStamp": "2018-08-25T10:17:28Z",
  "ProcessId": 7584,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2018-08-25 18:17:28.630 +08:00 [DBG] Token request success.
2018-08-25 18:17:28.642 +08:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-08-25 18:17:28.644 +08:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-08-25 18:17:28.645 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-08-25 18:17:28.646 +08:00 [DBG] Start userinfo request
2018-08-25 18:17:28.646 +08:00 [DBG] Bearer token found in header
2018-08-25 18:17:28.650 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.651 +08:00 [DBG] client configuration validation for client mvcclient succeeded.
2018-08-25 18:17:28.654 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-08-25 18:17:28.655 +08:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1535192248,
    "exp": 1535195848,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1535192244,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2018-08-25 18:17:28.656 +08:00 [DBG] Creating userinfo response
2018-08-25 18:17:28.656 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:17:28.657 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:17:28.658 +08:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2018-08-25 18:17:28.659 +08:00 [DBG] Scopes in access token: openid profile email restapi
2018-08-25 18:17:28.661 +08:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2018-08-25 18:17:28.662 +08:00 [DBG] End userinfo request
2018-08-25 18:17:33.705 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-08-25 18:17:33.707 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-08-25 18:17:33.708 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-08-25 18:17:33.710 +08:00 [DBG] Start discovery request
2018-08-25 18:17:33.793 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-08-25 18:17:33.795 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-08-25 18:17:33.796 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-08-25 18:17:33.797 +08:00 [DBG] Start key discovery request
2020-07-05 00:09:46.967 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-05 00:09:47.002 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-05 00:09:47.005 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-05 00:09:47.005 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-05 00:09:47.005 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-05 00:09:47.005 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-05 00:10:41.520 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-05 00:10:42.406 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-05 00:10:42.411 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-05 00:10:42.438 +10:00 [DBG] Start discovery request
2020-07-05 00:10:42.722 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-05 00:10:42.727 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-05 00:10:42.728 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-05 00:10:42.732 +10:00 [DBG] Start key discovery request
2020-07-05 00:10:42.884 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-05 00:10:42.888 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-05 00:10:42.889 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-05 00:10:42.896 +10:00 [DBG] Start authorize request
2020-07-05 00:10:42.945 +10:00 [DBG] No user present in authorize request
2020-07-05 00:10:42.963 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 00:10:42.975 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 00:10:42.980 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 00:10:42.981 +10:00 [DBG] No PKCE used.
2020-07-05 00:10:43.008 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 00:10:43.038 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMz4yXg2sqd3GN_PmWLdPNYe04TBm15uPUZOyucvGtI3PNfAuc4wMBwrG3XjU_JAdcUBd4n7jWMRMvKp30PSDt31bJ3VHalZrQ_iwAOOl4MgCJMlHfsOKuLOOt_zFaj286mNYcxXqjzNuiup-4hOVjQ_mur-G5lYHjrfeydSehdWTxfVDaQVhrTbMiKm_41TT01fseCb8ut3Obxz9eLmSKqJNb4Q_dFW6ijwDzkiY2CMPQTgMgPYe9r6WPDDC4BSQr234TnYCXZmZ4o413V60oBLAdXEfXAmmBQM0_Khw1Lyjg",
  "Nonce": "637294686427981480.Y2RjNmRlZGUtMGExMy00MzhlLWI3NTMtZmNiZDA2N2JlNzU2YzIxNzBlMjgtNzA3MC00M2Q1LWJlMjUtZWMyNDA0N2QxYTBi",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "637294686427981480.Y2RjNmRlZGUtMGExMy00MzhlLWI3NTMtZmNiZDA2N2JlNzU2YzIxNzBlMjgtNzA3MC00M2Q1LWJlMjUtZWMyNDA0N2QxYTBi",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMz4yXg2sqd3GN_PmWLdPNYe04TBm15uPUZOyucvGtI3PNfAuc4wMBwrG3XjU_JAdcUBd4n7jWMRMvKp30PSDt31bJ3VHalZrQ_iwAOOl4MgCJMlHfsOKuLOOt_zFaj286mNYcxXqjzNuiup-4hOVjQ_mur-G5lYHjrfeydSehdWTxfVDaQVhrTbMiKm_41TT01fseCb8ut3Obxz9eLmSKqJNb4Q_dFW6ijwDzkiY2CMPQTgMgPYe9r6WPDDC4BSQr234TnYCXZmZ4o413V60oBLAdXEfXAmmBQM0_Khw1Lyjg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 00:10:43.051 +10:00 [INF] Showing login: User is not authenticated
2020-07-05 00:10:43.263 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 00:10:43.263 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 00:10:43.265 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 00:10:43.268 +10:00 [DBG] No PKCE used.
2020-07-05 00:10:43.268 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 00:10:43.271 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 00:11:09.995 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 00:11:11.827 +10:00 [DBG] Augmenting SignInContext
2020-07-05 00:11:11.830 +10:00 [DBG] Adding idp claim with value: local
2020-07-05 00:11:11.830 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-05 00:11:11.831 +10:00 [DBG] Adding auth_time claim with value: 1593871871
2020-07-05 00:11:11.880 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 00:11:11.907 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM104G4DV2TA:00000003",
  "TimeStamp": "2020-07-04T14:11:11Z",
  "ProcessId": 23988,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 00:11:11.918 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 00:11:11.920 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 00:11:11.921 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 00:11:11.927 +10:00 [DBG] Start authorize callback request
2020-07-05 00:11:11.930 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 00:11:11.931 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 00:11:11.932 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 00:11:11.933 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 00:11:11.933 +10:00 [DBG] No PKCE used.
2020-07-05 00:11:11.934 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 00:11:11.935 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC 客户端",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMz4yXg2sqd3GN_PmWLdPNYe04TBm15uPUZOyucvGtI3PNfAuc4wMBwrG3XjU_JAdcUBd4n7jWMRMvKp30PSDt31bJ3VHalZrQ_iwAOOl4MgCJMlHfsOKuLOOt_zFaj286mNYcxXqjzNuiup-4hOVjQ_mur-G5lYHjrfeydSehdWTxfVDaQVhrTbMiKm_41TT01fseCb8ut3Obxz9eLmSKqJNb4Q_dFW6ijwDzkiY2CMPQTgMgPYe9r6WPDDC4BSQr234TnYCXZmZ4o413V60oBLAdXEfXAmmBQM0_Khw1Lyjg",
  "Nonce": "637294686427981480.Y2RjNmRlZGUtMGExMy00MzhlLWI3NTMtZmNiZDA2N2JlNzU2YzIxNzBlMjgtNzA3MC00M2Q1LWJlMjUtZWMyNDA0N2QxYTBi",
  "SessionId": "b588b6bf252864291d60b698cbd0d424",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "637294686427981480.Y2RjNmRlZGUtMGExMy00MzhlLWI3NTMtZmNiZDA2N2JlNzU2YzIxNzBlMjgtNzA3MC00M2Q1LWJlMjUtZWMyNDA0N2QxYTBi",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMz4yXg2sqd3GN_PmWLdPNYe04TBm15uPUZOyucvGtI3PNfAuc4wMBwrG3XjU_JAdcUBd4n7jWMRMvKp30PSDt31bJ3VHalZrQ_iwAOOl4MgCJMlHfsOKuLOOt_zFaj286mNYcxXqjzNuiup-4hOVjQ_mur-G5lYHjrfeydSehdWTxfVDaQVhrTbMiKm_41TT01fseCb8ut3Obxz9eLmSKqJNb4Q_dFW6ijwDzkiY2CMPQTgMgPYe9r6WPDDC4BSQr234TnYCXZmZ4o413V60oBLAdXEfXAmmBQM0_Khw1Lyjg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 00:11:11.974 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 00:11:11.976 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 00:11:11.978 +10:00 [INF] Showing consent: User has not yet consented
2020-07-05 00:11:11.999 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 00:11:11.999 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 00:11:12.001 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 00:11:12.005 +10:00 [DBG] No PKCE used.
2020-07-05 00:11:12.006 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 00:11:12.007 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:52:17.873 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-05 17:52:17.962 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-05 17:52:17.965 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-05 17:52:17.965 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-05 17:52:17.965 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-05 17:52:17.965 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-05 17:54:02.005 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-05 17:54:02.041 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-05 17:54:02.044 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-05 17:54:02.044 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-05 17:54:02.047 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-05 17:54:02.047 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-05 17:55:33.686 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-05 17:55:34.618 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-05 17:55:34.619 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-05 17:55:34.622 +10:00 [DBG] Start discovery request
2020-07-05 17:55:34.991 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-05 17:55:34.994 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-05 17:55:34.997 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-05 17:55:35.001 +10:00 [DBG] Start key discovery request
2020-07-05 17:55:35.158 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-05 17:55:35.163 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-05 17:55:35.168 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-05 17:55:35.174 +10:00 [DBG] Start authorize request
2020-07-05 17:55:35.292 +10:00 [DBG] No user present in authorize request
2020-07-05 17:55:35.297 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:55:35.392 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:55:35.400 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:55:35.401 +10:00 [DBG] No PKCE used.
2020-07-05 17:55:35.429 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:55:35.509 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
  "Nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 17:55:35.536 +10:00 [INF] Showing login: User is not authenticated
2020-07-05 17:55:36.308 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:55:36.309 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:55:36.311 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:55:36.315 +10:00 [DBG] No PKCE used.
2020-07-05 17:55:36.316 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:55:36.320 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:55:57.931 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 17:55:59.460 +10:00 [WRN] Invalid password for user c9c9178e-4b33-484e-acac-ffcdb05299db.
2020-07-05 17:55:59.463 +10:00 [WRN] User c9c9178e-4b33-484e-acac-ffcdb05299db failed to provide the correct password.
2020-07-05 17:55:59.650 +10:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "alice",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HM10N35JO4EG:00000004",
  "TimeStamp": "2020-07-05T07:55:59Z",
  "ProcessId": 9556,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 17:55:59.654 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:55:59.656 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:55:59.657 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:55:59.658 +10:00 [DBG] No PKCE used.
2020-07-05 17:55:59.660 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:55:59.664 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:16.679 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 17:56:16.974 +10:00 [DBG] Augmenting SignInContext
2020-07-05 17:56:16.976 +10:00 [DBG] Adding idp claim with value: local
2020-07-05 17:56:16.977 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-05 17:56:16.977 +10:00 [DBG] Adding auth_time claim with value: 1593935776
2020-07-05 17:56:17.039 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 17:56:17.046 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM10N35JO4EG:00000005",
  "TimeStamp": "2020-07-05T07:56:17Z",
  "ProcessId": 9556,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 17:56:17.072 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 17:56:17.074 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 17:56:17.075 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 17:56:17.086 +10:00 [DBG] Start authorize callback request
2020-07-05 17:56:17.090 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 17:56:17.090 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:56:17.091 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:17.092 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:56:17.092 +10:00 [DBG] No PKCE used.
2020-07-05 17:56:17.093 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:56:17.094 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
  "Nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
  "SessionId": "97b9db06ef6995f063adc63d96385169",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 17:56:17.126 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 17:56:17.128 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 17:56:17.129 +10:00 [INF] Showing consent: User has not yet consented
2020-07-05 17:56:17.156 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:56:17.157 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:17.161 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:56:17.162 +10:00 [DBG] No PKCE used.
2020-07-05 17:56:17.162 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:56:17.163 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:21.430 +10:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 17:56:21.447 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:56:21.448 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:21.453 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:56:21.458 +10:00 [DBG] No PKCE used.
2020-07-05 17:56:21.459 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:56:21.476 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 17:56:21.479 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 17:56:21.485 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 17:56:21.486 +10:00 [DBG] Start authorize callback request
2020-07-05 17:56:21.491 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 17:56:21.492 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 17:56:21.493 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:21.494 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 17:56:21.494 +10:00 [DBG] No PKCE used.
2020-07-05 17:56:21.495 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 17:56:21.496 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
  "Nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
  "SessionId": "97b9db06ef6995f063adc63d96385169",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid",
    "response_mode": "form_post",
    "nonce": "637295325351038569.NDM0YWUyNDctZjg4Ni00OGE5LWI3N2QtMTc0NmUxY2Y4YTIyMGQwZTFiMzktNzFlYS00ODdmLTg3M2YtZDVjMWFmZGEwZTQ1",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 17:56:21.507 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 17:56:21.508 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 17:56:21.516 +10:00 [INF] User consented to scopes: ["openid"]
2020-07-05 17:56:21.530 +10:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 17:56:21.539 +10:00 [DBG] Creating Hybrid Flow response.
2020-07-05 17:56:21.561 +10:00 [DBG] Creating Implicit Flow response.
2020-07-05 17:56:21.569 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 17:56:21.574 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 17:56:21.711 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3Ywg"
    },
    {
      "TokenType": "code",
      "TokenValue": "****ca96"
    }
  ],
  "ActivityId": "0HM10N35JO4EG:00000009",
  "TimeStamp": "2020-07-05T07:56:21Z",
  "ProcessId": 9556,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 17:56:21.720 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwHtzX7jFGAxcBDgnk66eWiEShLUQY0rBuhf3VWPKEzsd71gwbJCoJ0Aleu-HZ47CAdAfz3CUON7P6SZm_OfK2TAm9ItgOVBUuHQMdcYaXMWbsuEAoHOvXkNCTW7h4gBIMunB5omej7ubUYaC-jtimnz7xzsMGp21GX0tydADpwaEirRufrnBXiCWiyQAI9S7qwATzt6yCGZa1v87MnSlew9603VU6B5o9Zvk_IAuUunmHSYoRhCBTGjfAFwL-5dd8oX5NyKCnqAjEQED6Q_cfSTfvS7Ofp22U_5Lpo-oYM9w",
  "Scope": "openid"
}
2020-07-05 17:56:21.741 +10:00 [DBG] Augmenting SignInContext
2020-07-05 17:56:21.742 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 17:56:21.956 +10:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-07-05 17:56:21.960 +10:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-07-05 17:56:21.962 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-07-05 17:56:21.969 +10:00 [DBG] Start token request.
2020-07-05 17:56:21.975 +10:00 [DBG] Start client validation
2020-07-05 17:56:21.980 +10:00 [DBG] Start parsing Basic Authentication secret
2020-07-05 17:56:21.984 +10:00 [DBG] Start parsing for secret in post body
2020-07-05 17:56:21.985 +10:00 [DBG] Parser found secret: PostBodySecretParser
2020-07-05 17:56:21.986 +10:00 [DBG] Secret id found: mvcclient
2020-07-05 17:56:21.989 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:22.001 +10:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-07-05 17:56:22.002 +10:00 [DBG] Client validation success
2020-07-05 17:56:22.007 +10:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HM10N35JO4EF:00000003",
  "TimeStamp": "2020-07-05T07:56:22Z",
  "ProcessId": 9556,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 17:56:22.017 +10:00 [DBG] Start token request validation
2020-07-05 17:56:22.031 +10:00 [DBG] Start validation of authorization code token request
2020-07-05 17:56:22.045 +10:00 [DBG] Validation of authorization code token request success
2020-07-05 17:56:22.050 +10:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "GrantType": "authorization_code",
  "AuthorizationCode": "66f0b975c57598788b827aa21b78bc405ef5ea961f1a437f813f2030502fca96",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "66f0b975c57598788b827aa21b78bc405ef5ea961f1a437f813f2030502fca96",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2020-07-05 17:56:22.068 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:22.080 +10:00 [DBG] Getting claims for access token for client: mvcclient
2020-07-05 17:56:22.081 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 17:56:22.102 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:22.109 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 17:56:22.110 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 17:56:22.116 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "Endpoint": "Token",
  "Scopes": "openid",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****en3g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****aMpA"
    }
  ],
  "ActivityId": "0HM10N35JO4EF:00000003",
  "TimeStamp": "2020-07-05T07:56:22Z",
  "ProcessId": 9556,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 17:56:22.120 +10:00 [DBG] Token request success.
2020-07-05 17:56:22.133 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-05 17:56:22.135 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-05 17:56:22.139 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-05 17:56:22.147 +10:00 [DBG] Start userinfo request
2020-07-05 17:56:22.150 +10:00 [DBG] Bearer token found in header
2020-07-05 17:56:22.201 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:22.206 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 17:56:22.210 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-05 17:56:22.214 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1593935782,
    "exp": 1593939382,
    "iss": "https://localhost:5001",
    "aud": "https://localhost:5001/resources",
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1593935776,
    "idp": "local",
    "scope": "openid",
    "amr": "pwd"
  }
}
2020-07-05 17:56:22.223 +10:00 [DBG] Creating userinfo response
2020-07-05 17:56:22.227 +10:00 [DBG] Scopes in access token: openid
2020-07-05 17:56:22.229 +10:00 [DBG] Scopes in access token: openid
2020-07-05 17:56:22.232 +10:00 [DBG] Requested claim types: sub
2020-07-05 17:56:22.232 +10:00 [DBG] Scopes in access token: openid
2020-07-05 17:56:22.237 +10:00 [INF] Profile service returned to the following claim types: sub
2020-07-05 17:56:22.239 +10:00 [DBG] End userinfo request
2020-07-05 18:04:14.811 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-05 18:04:14.848 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-05 18:04:14.852 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-05 18:04:14.852 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-05 18:04:14.852 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-05 18:04:14.852 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-05 18:04:24.228 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-05 18:04:24.292 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-05 18:04:24.293 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-05 18:04:24.299 +10:00 [DBG] Start discovery request
2020-07-05 18:04:24.445 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-05 18:04:24.448 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-05 18:04:24.450 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-05 18:04:24.456 +10:00 [DBG] Start key discovery request
2020-07-05 18:04:24.559 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-05 18:04:24.565 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-05 18:04:24.566 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-05 18:04:24.572 +10:00 [DBG] Start authorize request
2020-07-05 18:04:24.581 +10:00 [DBG] No user present in authorize request
2020-07-05 18:04:24.587 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:24.599 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:24.606 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:24.608 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:24.638 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:24.649 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
  "Nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:04:24.665 +10:00 [INF] Showing login: User is not authenticated
2020-07-05 18:04:24.806 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:24.807 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:24.808 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:24.811 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:24.812 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:24.815 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:40.904 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 18:04:41.323 +10:00 [DBG] Augmenting SignInContext
2020-07-05 18:04:41.325 +10:00 [DBG] Adding idp claim with value: local
2020-07-05 18:04:41.325 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-05 18:04:41.326 +10:00 [DBG] Adding auth_time claim with value: 1593936281
2020-07-05 18:04:41.338 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 18:04:41.357 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM10N83T59T1:00000003",
  "TimeStamp": "2020-07-05T08:04:41Z",
  "ProcessId": 17472,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:04:41.369 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 18:04:41.370 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 18:04:41.372 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 18:04:41.378 +10:00 [DBG] Start authorize callback request
2020-07-05 18:04:41.381 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:04:41.382 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:41.383 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:41.384 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:41.384 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:41.385 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:41.386 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
  "Nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
  "SessionId": "c14e703e2faab81080e149af79447813",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:04:41.419 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 18:04:41.421 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 18:04:41.422 +10:00 [INF] Showing consent: User has not yet consented
2020-07-05 18:04:41.441 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:41.442 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:41.447 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:41.448 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:41.448 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:41.449 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.274 +10:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 18:04:49.296 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:49.297 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.305 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:49.307 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:49.308 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:49.337 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 18:04:49.339 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 18:04:49.342 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 18:04:49.343 +10:00 [DBG] Start authorize callback request
2020-07-05 18:04:49.346 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:04:49.347 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:04:49.350 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.352 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:04:49.353 +10:00 [DBG] No PKCE used.
2020-07-05 18:04:49.353 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:04:49.354 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
  "Nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
  "SessionId": "c14e703e2faab81080e149af79447813",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295330645070963.YTZlNWVlOTQtMjNkNi00MjAxLWIxMDQtZGMzM2Y0ZTk1MzZhM2U1ZTcwYWYtMThhNi00YTU0LTlmZjItOTQ1OGMzZTc1NDM0",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:04:49.360 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 18:04:49.361 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 18:04:49.371 +10:00 [INF] User consented to scopes: ["openid","profile","email","restapi"]
2020-07-05 18:04:49.385 +10:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:04:49.393 +10:00 [DBG] Creating Hybrid Flow response.
2020-07-05 18:04:49.415 +10:00 [DBG] Creating Implicit Flow response.
2020-07-05 18:04:49.423 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 18:04:49.426 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 18:04:49.483 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****4byw"
    },
    {
      "TokenType": "code",
      "TokenValue": "****aa45"
    }
  ],
  "ActivityId": "0HM10N83T59T1:00000007",
  "TimeStamp": "2020-07-05T08:04:49Z",
  "ProcessId": 17472,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:04:49.490 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMx8vmg5lvyaMbuJjgwYrc_G4OEcMZANzMc3zjVZm8QZJHg3yOndReprLqNLFBDD0HTyf0JHZVl5aZ0ejOUveeMUPEDQZ7O0lyBeEKuB1K2XfaoBcsBQQyLYAxvfSOapyXgWjDPn5cNUNDQ5y9AxU5GFBEkmXVECQzuAbt6CT8Nagn2a8liLtdC9WgLEir2eYM4F6-4haKhKSD_SD4vlkQe0FlYXzH7fqNyCKW1ZJQpwOSbzxCpIdIo2cJaSJY4MgJ5NC0YPbqGMEzIxCJPAiVkVQFPyUws8Tp356dSquu46bg",
  "Scope": "openid profile email restapi"
}
2020-07-05 18:04:49.507 +10:00 [DBG] Augmenting SignInContext
2020-07-05 18:04:49.507 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 18:04:49.614 +10:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-07-05 18:04:49.619 +10:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-07-05 18:04:49.620 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-07-05 18:04:49.627 +10:00 [DBG] Start token request.
2020-07-05 18:04:49.633 +10:00 [DBG] Start client validation
2020-07-05 18:04:49.638 +10:00 [DBG] Start parsing Basic Authentication secret
2020-07-05 18:04:49.641 +10:00 [DBG] Start parsing for secret in post body
2020-07-05 18:04:49.642 +10:00 [DBG] Parser found secret: PostBodySecretParser
2020-07-05 18:04:49.642 +10:00 [DBG] Secret id found: mvcclient
2020-07-05 18:04:49.642 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.651 +10:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-07-05 18:04:49.652 +10:00 [DBG] Client validation success
2020-07-05 18:04:49.655 +10:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HM10N83T59T0:00000003",
  "TimeStamp": "2020-07-05T08:04:49Z",
  "ProcessId": 17472,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:04:49.672 +10:00 [DBG] Start token request validation
2020-07-05 18:04:49.684 +10:00 [DBG] Start validation of authorization code token request
2020-07-05 18:04:49.696 +10:00 [DBG] Validation of authorization code token request success
2020-07-05 18:04:49.701 +10:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b6f560606b8a6d8307c627b9a3f30fe583e1d16dcf36fa692e289a43c5d9aa45",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "b6f560606b8a6d8307c627b9a3f30fe583e1d16dcf36fa692e289a43c5d9aa45",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2020-07-05 18:04:49.712 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.722 +10:00 [DBG] Getting claims for access token for client: mvcclient
2020-07-05 18:04:49.723 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:04:49.737 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.738 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 18:04:49.739 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 18:04:49.744 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "Endpoint": "Token",
  "Scopes": "openid profile email restapi",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TaIQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ew7A"
    }
  ],
  "ActivityId": "0HM10N83T59T0:00000003",
  "TimeStamp": "2020-07-05T08:04:49Z",
  "ProcessId": 17472,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:04:49.750 +10:00 [DBG] Token request success.
2020-07-05 18:04:49.767 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-05 18:04:49.769 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-05 18:04:49.771 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-05 18:04:49.777 +10:00 [DBG] Start userinfo request
2020-07-05 18:04:49.780 +10:00 [DBG] Bearer token found in header
2020-07-05 18:04:49.835 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.839 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:04:49.842 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-05 18:04:49.846 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1593936289,
    "exp": 1593939889,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1593936281,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-05 18:04:49.854 +10:00 [DBG] Creating userinfo response
2020-07-05 18:04:49.857 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:04:49.860 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:04:49.863 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-05 18:04:49.864 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:04:49.869 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-05 18:04:49.870 +10:00 [DBG] End userinfo request
2020-07-05 18:29:09.875 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-05 18:29:09.925 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-05 18:29:09.928 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-05 18:29:09.928 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-05 18:29:09.929 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-05 18:29:09.929 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-05 18:29:15.027 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-05 18:29:15.094 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-05 18:29:15.096 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-05 18:29:15.103 +10:00 [DBG] Start discovery request
2020-07-05 18:29:15.250 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-05 18:29:15.254 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-05 18:29:15.255 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-05 18:29:15.263 +10:00 [DBG] Start key discovery request
2020-07-05 18:29:15.364 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-05 18:29:15.369 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-05 18:29:15.369 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-05 18:29:15.374 +10:00 [DBG] Start authorize request
2020-07-05 18:29:15.384 +10:00 [DBG] No user present in authorize request
2020-07-05 18:29:15.388 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:15.400 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:15.406 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:15.407 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:15.448 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:15.461 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
  "Nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:29:15.477 +10:00 [INF] Showing login: User is not authenticated
2020-07-05 18:29:15.627 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:15.627 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:15.629 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:15.631 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:15.632 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:15.635 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:29.589 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 18:29:29.998 +10:00 [DBG] Augmenting SignInContext
2020-07-05 18:29:30.001 +10:00 [DBG] Adding idp claim with value: local
2020-07-05 18:29:30.001 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-05 18:29:30.002 +10:00 [DBG] Adding auth_time claim with value: 1593937769
2020-07-05 18:29:30.012 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 18:29:30.028 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM10NM06AUL5:00000003",
  "TimeStamp": "2020-07-05T08:29:30Z",
  "ProcessId": 14028,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:29:30.073 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 18:29:30.075 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 18:29:30.079 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 18:29:30.085 +10:00 [DBG] Start authorize callback request
2020-07-05 18:29:30.089 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:29:30.089 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:30.090 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:30.091 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:30.091 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:30.092 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:30.093 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
  "Nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
  "SessionId": "b4fe0b3eaad42f3ce3089d2a366d960f",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:29:30.127 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 18:29:30.130 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 18:29:30.130 +10:00 [INF] Showing consent: User has not yet consented
2020-07-05 18:29:30.153 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:30.153 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:30.155 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:30.157 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:30.158 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:30.159 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.156 +10:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-05 18:29:35.178 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:35.178 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.181 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:35.183 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:35.184 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:35.211 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-05 18:29:35.213 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-05 18:29:35.216 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-05 18:29:35.217 +10:00 [DBG] Start authorize callback request
2020-07-05 18:29:35.220 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:29:35.221 +10:00 [DBG] Start authorize request protocol validation
2020-07-05 18:29:35.223 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.225 +10:00 [DBG] Checking for PKCE parameters
2020-07-05 18:29:35.226 +10:00 [DBG] No PKCE used.
2020-07-05 18:29:35.226 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-05 18:29:35.227 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "AllowedRedirectUris": [
    "https://localhost:7001/signin-oidc"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "code id_token",
  "ResponseMode": "form_post",
  "GrantType": "hybrid",
  "RequestedScopes": "openid profile email restapi",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
  "Nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
  "SessionId": "b4fe0b3eaad42f3ce3089d2a366d960f",
  "Raw": {
    "client_id": "mvcclient",
    "redirect_uri": "https://localhost:7001/signin-oidc",
    "response_type": "code id_token",
    "scope": "openid profile email restapi",
    "response_mode": "form_post",
    "nonce": "637295345553091375.Mzc0NmE5MjYtYWExZC00MTI4LTgxZDUtMzU0ZGVkYjBlMDc2NDNiNDAyZmQtYzk0Yi00MzQ3LWExYTctOTgwYjljYjc1Nzcy",
    "state": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
    "x-client-SKU": "ID_NETSTANDARD1_4",
    "x-client-ver": "5.2.0.0"
  }
}
2020-07-05 18:29:35.234 +10:00 [DBG] user_consent grant with value: mvcclient|c9c9178e-4b33-484e-acac-ffcdb05299db not found in store.
2020-07-05 18:29:35.236 +10:00 [DBG] Found no prior consent from consent store, consent is required
2020-07-05 18:29:35.245 +10:00 [INF] User consented to scopes: ["openid","profile","email","restapi"]
2020-07-05 18:29:35.259 +10:00 [DBG] Client allows remembering consent, and no scopes provided. Removing consent from consent store for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:29:35.266 +10:00 [DBG] Creating Hybrid Flow response.
2020-07-05 18:29:35.289 +10:00 [DBG] Creating Implicit Flow response.
2020-07-05 18:29:35.297 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 18:29:35.300 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 18:29:35.359 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "hybrid",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****dWLQ"
    },
    {
      "TokenType": "code",
      "TokenValue": "****6b08"
    }
  ],
  "ActivityId": "0HM10NM06AUL5:00000007",
  "TimeStamp": "2020-07-05T08:29:35Z",
  "ProcessId": 14028,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:29:35.369 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "mvcclient",
  "RedirectUri": "https://localhost:7001/signin-oidc",
  "State": "CfDJ8OiqZ8j5CPZGqkaerdk9xMwAyorZzOhG5scZgYrDZ8QaS6CoAI4oZyDvLAALkh_dF1qk5Cxs8eyGVWhN612owfjUk5rr5-Mi0wQ5Eh9AQjIjcSQnRmNW3mgk2hrgy0MuHiSWFqiXK-DVErb6Gx9m2JfyHoEjqq1HEYW67xyi8f14wiOI9wqFXDWbH2VJgAltfbjIIuUe2ZHHHz19qSL_a5TwHnGvPhb0S3RLd1nZgKaRhA2sXCZ6NNqneZtuX4QCO5IOfAZG7b8ixaCm7Ti7u-8G0da7CrzYKhXrXJWj08cOQ91DDGGpzJBKXNE8y0fdCg",
  "Scope": "openid profile email restapi"
}
2020-07-05 18:29:35.392 +10:00 [DBG] Augmenting SignInContext
2020-07-05 18:29:35.392 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-05 18:29:35.512 +10:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-07-05 18:29:35.516 +10:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-07-05 18:29:35.518 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-07-05 18:29:35.525 +10:00 [DBG] Start token request.
2020-07-05 18:29:35.530 +10:00 [DBG] Start client validation
2020-07-05 18:29:35.535 +10:00 [DBG] Start parsing Basic Authentication secret
2020-07-05 18:29:35.539 +10:00 [DBG] Start parsing for secret in post body
2020-07-05 18:29:35.539 +10:00 [DBG] Parser found secret: PostBodySecretParser
2020-07-05 18:29:35.539 +10:00 [DBG] Secret id found: mvcclient
2020-07-05 18:29:35.540 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.548 +10:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-07-05 18:29:35.549 +10:00 [DBG] Client validation success
2020-07-05 18:29:35.553 +10:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "mvcclient",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HM10NM06AUL4:00000003",
  "TimeStamp": "2020-07-05T08:29:35Z",
  "ProcessId": 14028,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:29:35.560 +10:00 [DBG] Start token request validation
2020-07-05 18:29:35.569 +10:00 [DBG] Start validation of authorization code token request
2020-07-05 18:29:35.582 +10:00 [DBG] Validation of authorization code token request success
2020-07-05 18:29:35.586 +10:00 [INF] Token request validation success
{
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "GrantType": "authorization_code",
  "AuthorizationCode": "0897e7ca230dd4b3da96b8b5900120d979fdc76f8ccfec51107d80e7c5326b08",
  "Raw": {
    "client_id": "mvcclient",
    "client_secret": "***REDACTED***",
    "code": "0897e7ca230dd4b3da96b8b5900120d979fdc76f8ccfec51107d80e7c5326b08",
    "grant_type": "authorization_code",
    "redirect_uri": "https://localhost:7001/signin-oidc"
  }
}
2020-07-05 18:29:35.599 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.610 +10:00 [DBG] Getting claims for access token for client: mvcclient
2020-07-05 18:29:35.611 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-05 18:29:35.627 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.628 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: mvcclient
2020-07-05 18:29:35.628 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-05 18:29:35.633 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "mvcclient",
  "ClientName": "MVC Client",
  "Endpoint": "Token",
  "Scopes": "openid profile email restapi",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Ezvw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-z6w"
    }
  ],
  "ActivityId": "0HM10NM06AUL4:00000003",
  "TimeStamp": "2020-07-05T08:29:35Z",
  "ProcessId": 14028,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-05 18:29:35.638 +10:00 [DBG] Token request success.
2020-07-05 18:29:35.650 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-05 18:29:35.652 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-05 18:29:35.653 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-05 18:29:35.663 +10:00 [DBG] Start userinfo request
2020-07-05 18:29:35.666 +10:00 [DBG] Bearer token found in header
2020-07-05 18:29:35.717 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.722 +10:00 [DBG] client configuration validation for client mvcclient succeeded.
2020-07-05 18:29:35.725 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-05 18:29:35.729 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1593937775,
    "exp": 1593941375,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "mvcclient",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1593937769,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-05 18:29:35.737 +10:00 [DBG] Creating userinfo response
2020-07-05 18:29:35.740 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:29:35.743 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:29:35.746 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-05 18:29:35.747 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-05 18:29:35.752 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-05 18:29:35.754 +10:00 [DBG] End userinfo request
2020-07-05 18:31:30.260 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-05 18:31:30.263 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-05 18:31:30.265 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-05 18:31:30.266 +10:00 [DBG] Start discovery request
2020-07-05 18:31:30.343 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-05 18:31:30.346 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-05 18:31:30.348 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-05 18:31:30.349 +10:00 [DBG] Start key discovery request
2020-07-07 21:35:15.037 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-07 21:35:15.086 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-07 21:35:15.089 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-07 21:35:15.090 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-07 21:35:15.090 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-07 21:35:15.090 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-07 21:38:38.097 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:38:38.179 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:38:38.181 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:38:38.452 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:38:38.928 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:38:38.930 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:38:38.957 +10:00 [DBG] Start discovery request
2020-07-07 21:38:39.212 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:38:39.219 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:38:39.220 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:38:39.226 +10:00 [DBG] Start authorize request
2020-07-07 21:38:41.562 +10:00 [DBG] No user present in authorize request
2020-07-07 21:38:41.647 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:38:41.703 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:38:41.750 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:38:41.794 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "23c1f166deb04b2dac5f85126da03b84",
  "Nonce": "6285908f7a2a4d29b7eca8b2684891d5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "23c1f166deb04b2dac5f85126da03b84",
    "nonce": "6285908f7a2a4d29b7eca8b2684891d5"
  }
}
2020-07-07 21:38:41.810 +10:00 [INF] Showing login: User is not authenticated
2020-07-07 21:38:43.424 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:38:43.425 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:38:43.427 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:38:43.432 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:38:58.839 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-07 21:39:00.998 +10:00 [DBG] Augmenting SignInContext
2020-07-07 21:39:01.000 +10:00 [DBG] Adding idp claim with value: local
2020-07-07 21:39:01.001 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-07 21:39:01.002 +10:00 [DBG] Adding auth_time claim with value: 1594121940
2020-07-07 21:39:01.021 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-07 21:39:01.057 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM12D94PUIGR:00000003",
  "TimeStamp": "2020-07-07T11:39:01Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:39:01.101 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-07 21:39:01.105 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-07 21:39:01.107 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-07 21:39:01.116 +10:00 [DBG] Start authorize callback request
2020-07-07 21:39:01.120 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:39:01.121 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:39:01.123 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:01.126 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:39:01.126 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "23c1f166deb04b2dac5f85126da03b84",
  "Nonce": "6285908f7a2a4d29b7eca8b2684891d5",
  "SessionId": "46662b9e69e695aa0e83844cef962f59",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "23c1f166deb04b2dac5f85126da03b84",
    "nonce": "6285908f7a2a4d29b7eca8b2684891d5"
  }
}
2020-07-07 21:39:01.153 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:39:01.162 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:39:01.172 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 21:39:01.172 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:39:01.423 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:39:01.425 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 21:39:01.442 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3pVw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****xPtA"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:00000004",
  "TimeStamp": "2020-07-07T11:39:01Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:39:01.450 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "23c1f166deb04b2dac5f85126da03b84",
  "Scope": "openid profile email restapi"
}
2020-07-07 21:39:01.466 +10:00 [DBG] Augmenting SignInContext
2020-07-07 21:39:01.467 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-07 21:39:02.102 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:39:02.104 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:02.107 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:02.109 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:39:02.111 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:39:02.112 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:39:02.120 +10:00 [DBG] Start discovery request
2020-07-07 21:39:02.150 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-07 21:39:02.152 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:02.155 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:02.156 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-07 21:39:02.158 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-07 21:39:02.158 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-07 21:39:02.164 +10:00 [DBG] Start key discovery request
2020-07-07 21:39:02.202 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:39:02.202 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:02.204 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:02.288 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:39:02.290 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:02.293 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:02.294 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-07 21:39:02.297 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-07 21:39:02.298 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-07 21:39:02.310 +10:00 [DBG] Start userinfo request
2020-07-07 21:39:02.315 +10:00 [DBG] Bearer token found in header
2020-07-07 21:39:02.398 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:02.403 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:02.407 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-07 21:39:02.411 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594121941,
    "exp": 1594122121,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594121940,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-07 21:39:02.419 +10:00 [DBG] Creating userinfo response
2020-07-07 21:39:02.424 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:02.429 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:02.433 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-07 21:39:02.434 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:02.439 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-07 21:39:02.440 +10:00 [DBG] End userinfo request
2020-07-07 21:39:02.462 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:39:02.465 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:39:02.468 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:39:02.472 +10:00 [DBG] Rendering check session result
2020-07-07 21:39:47.764 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:39:47.766 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:47.769 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:47.770 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:39:47.772 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:39:47.773 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:39:47.774 +10:00 [DBG] Start discovery request
2020-07-07 21:39:47.781 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:39:47.783 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:47.784 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:47.786 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:39:47.787 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:39:47.790 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:39:47.793 +10:00 [DBG] Start discovery request
2020-07-07 21:39:47.823 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:39:47.825 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:39:47.827 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:39:47.829 +10:00 [DBG] Start authorize request
2020-07-07 21:39:47.830 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:39:47.831 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:39:47.833 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:47.837 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:39:47.838 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:39:47.839 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "d9611410a2504e00b4758ba7d7e53f00",
  "Nonce": "bc2874958cd24d77b9d7740227ec0842",
  "SessionId": "46662b9e69e695aa0e83844cef962f59",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "d9611410a2504e00b4758ba7d7e53f00",
    "nonce": "bc2874958cd24d77b9d7740227ec0842"
  }
}
2020-07-07 21:39:47.839 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:39:47.842 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:39:47.844 +10:00 [DBG] Rendering check session result
2020-07-07 21:39:47.844 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:39:47.848 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:39:47.849 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 21:39:47.850 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:39:47.858 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:39:47.859 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 21:39:47.865 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****-gCA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****r7SA"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:00000006",
  "TimeStamp": "2020-07-07T11:39:47Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:39:47.869 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "d9611410a2504e00b4758ba7d7e53f00",
  "Scope": "openid profile email restapi"
}
2020-07-07 21:39:48.282 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:39:48.284 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:48.287 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:48.287 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:39:48.288 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:39:48.289 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:39:48.289 +10:00 [DBG] Start discovery request
2020-07-07 21:39:48.296 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:39:48.297 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:48.298 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:48.299 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:39:48.301 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:39:48.303 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:39:48.304 +10:00 [DBG] Start discovery request
2020-07-07 21:39:48.326 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:39:48.328 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:39:48.328 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-07 21:39:48.331 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:39:48.331 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:48.332 +10:00 [DBG] Rendering check session result
2020-07-07 21:39:48.333 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:48.335 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-07 21:39:48.337 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-07 21:39:48.341 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-07 21:39:48.343 +10:00 [DBG] Start key discovery request
2020-07-07 21:39:48.371 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:39:48.374 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:48.377 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:48.382 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:39:48.385 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:39:48.387 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:39:48.388 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-07 21:39:48.390 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-07 21:39:48.391 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-07 21:39:48.392 +10:00 [DBG] Start userinfo request
2020-07-07 21:39:48.395 +10:00 [DBG] Bearer token found in header
2020-07-07 21:39:48.398 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:48.400 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:39:48.404 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-07 21:39:48.406 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594121987,
    "exp": 1594122167,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594121940,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-07 21:39:48.410 +10:00 [DBG] Creating userinfo response
2020-07-07 21:39:48.410 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:48.411 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:48.413 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-07 21:39:48.414 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:39:48.423 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-07 21:39:48.424 +10:00 [DBG] End userinfo request
2020-07-07 21:40:42.657 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:40:42.659 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:40:42.662 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:40:42.663 +10:00 [DBG] Rendering check session result
2020-07-07 21:40:44.883 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:40:44.883 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:40:44.887 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:40:44.888 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:04.781 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-07 21:41:04.799 +10:00 [DBG] Augmenting SignInContext
2020-07-07 21:41:04.800 +10:00 [DBG] Adding idp claim with value: local
2020-07-07 21:41:04.800 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-07 21:41:04.804 +10:00 [DBG] Adding auth_time claim with value: 1594122064
2020-07-07 21:41:04.806 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-07 21:41:04.809 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM12D94PUIGR:0000000A",
  "TimeStamp": "2020-07-07T11:41:04Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:41:04.815 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-07 21:41:04.816 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-07 21:41:04.817 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-07 21:41:04.819 +10:00 [DBG] Start authorize callback request
2020-07-07 21:41:04.819 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:04.820 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:41:04.821 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:04.823 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:41:04.826 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "23c1f166deb04b2dac5f85126da03b84",
  "Nonce": "6285908f7a2a4d29b7eca8b2684891d5",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "23c1f166deb04b2dac5f85126da03b84",
    "nonce": "6285908f7a2a4d29b7eca8b2684891d5"
  }
}
2020-07-07 21:41:04.832 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:41:04.832 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:41:04.833 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 21:41:04.834 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:04.843 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:41:04.844 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 21:41:04.850 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****9oJg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****HEaQ"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:0000000B",
  "TimeStamp": "2020-07-07T11:41:04Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:41:04.853 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "23c1f166deb04b2dac5f85126da03b84",
  "Scope": "openid profile email restapi"
}
2020-07-07 21:41:04.854 +10:00 [DBG] Augmenting SignInContext
2020-07-07 21:41:04.855 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-07 21:41:05.480 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:05.482 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:05.485 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:05.486 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:05.487 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:05.488 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:05.490 +10:00 [DBG] Start discovery request
2020-07-07 21:41:05.531 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:41:05.532 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:41:05.534 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:41:05.537 +10:00 [DBG] Rendering check session result
2020-07-07 21:41:05.701 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:41:05.702 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:41:05.705 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:41:05.708 +10:00 [DBG] Start authorize request
2020-07-07 21:41:05.708 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:05.709 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:41:05.710 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:05.711 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:41:05.714 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid",
  "State": "148f274351e849178d1b481e03af9281",
  "Nonce": "ba47ddcdcc784a83b4bcdcd5a67fc9b9",
  "PromptMode": "none",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token",
    "scope": "openid",
    "state": "148f274351e849178d1b481e03af9281",
    "nonce": "ba47ddcdcc784a83b4bcdcd5a67fc9b9",
    "prompt": "none"
  }
}
2020-07-07 21:41:05.720 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:41:05.720 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:41:05.721 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:41:05.730 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****yjhw"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:0000000D",
  "TimeStamp": "2020-07-07T11:41:05Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:41:05.732 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "148f274351e849178d1b481e03af9281",
  "Scope": "openid"
}
2020-07-07 21:41:06.183 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:06.185 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:06.188 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:06.190 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:06.192 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:06.197 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:06.199 +10:00 [DBG] Start discovery request
2020-07-07 21:41:06.208 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-07 21:41:06.209 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:06.212 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:06.212 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-07 21:41:06.214 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-07 21:41:06.215 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-07 21:41:06.216 +10:00 [DBG] Start key discovery request
2020-07-07 21:41:35.200 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:35.202 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.205 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.206 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:35.207 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:35.208 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:35.209 +10:00 [DBG] Start discovery request
2020-07-07 21:41:35.215 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:35.216 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.218 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.219 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:35.220 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:35.221 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:35.225 +10:00 [DBG] Start discovery request
2020-07-07 21:41:35.256 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:41:35.257 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:41:35.258 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:41:35.261 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:41:35.263 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:41:35.264 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:41:35.269 +10:00 [DBG] Start authorize request
2020-07-07 21:41:35.274 +10:00 [DBG] Rendering check session result
2020-07-07 21:41:35.274 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:35.276 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:41:35.277 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:35.279 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:41:35.280 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1fcabb1114324900884791bff1450326",
  "Nonce": "df6f8e9a9dfe45398c46c695a08ea743",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1fcabb1114324900884791bff1450326",
    "nonce": "df6f8e9a9dfe45398c46c695a08ea743"
  }
}
2020-07-07 21:41:35.290 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:41:35.290 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:41:35.291 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 21:41:35.292 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:35.304 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:41:35.305 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 21:41:35.314 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****XvmA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****FPbA"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:0000000E",
  "TimeStamp": "2020-07-07T11:41:35Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:41:35.319 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "1fcabb1114324900884791bff1450326",
  "Scope": "openid profile email restapi"
}
2020-07-07 21:41:35.655 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:35.657 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.660 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.661 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:35.662 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:35.662 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:35.664 +10:00 [DBG] Start discovery request
2020-07-07 21:41:35.671 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:35.672 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.673 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.674 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:35.675 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:35.678 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:35.681 +10:00 [DBG] Start discovery request
2020-07-07 21:41:35.715 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-07 21:41:35.717 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 21:41:35.718 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.721 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 21:41:35.722 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.723 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 21:41:35.724 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-07 21:41:35.726 +10:00 [DBG] Rendering check session result
2020-07-07 21:41:35.730 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-07 21:41:35.732 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-07 21:41:35.733 +10:00 [DBG] Start key discovery request
2020-07-07 21:41:35.770 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:41:35.772 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.775 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.778 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:41:35.779 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:35.781 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:35.783 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-07 21:41:35.786 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-07 21:41:35.787 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-07 21:41:35.788 +10:00 [DBG] Start userinfo request
2020-07-07 21:41:35.788 +10:00 [DBG] Bearer token found in header
2020-07-07 21:41:35.792 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:35.794 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:35.798 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-07 21:41:35.799 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594122095,
    "exp": 1594122275,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594122064,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-07 21:41:35.802 +10:00 [DBG] Creating userinfo response
2020-07-07 21:41:35.802 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:41:35.807 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:41:35.808 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-07 21:41:35.809 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:41:35.814 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-07 21:41:35.816 +10:00 [DBG] End userinfo request
2020-07-07 21:41:35.988 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:41:35.991 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:41:35.993 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:41:35.995 +10:00 [DBG] Start authorize request
2020-07-07 21:41:35.996 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:41:35.997 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:41:35.999 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:41:36.005 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:41:36.007 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid",
  "State": "217035a781dd445abac08e6cafad8713",
  "Nonce": "dbc09f595cb3453b81ff40539008f550",
  "PromptMode": "none",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token",
    "scope": "openid",
    "state": "217035a781dd445abac08e6cafad8713",
    "nonce": "dbc09f595cb3453b81ff40539008f550",
    "prompt": "none"
  }
}
2020-07-07 21:41:36.011 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:41:36.013 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:41:36.013 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:41:36.030 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****p8BQ"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:00000010",
  "TimeStamp": "2020-07-07T11:41:36Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:41:36.037 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "217035a781dd445abac08e6cafad8713",
  "Scope": "openid"
}
2020-07-07 21:41:36.297 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:41:36.299 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:41:36.303 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:41:36.304 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:41:36.306 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:41:36.307 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:41:36.312 +10:00 [DBG] Start discovery request
2020-07-07 21:43:35.858 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 21:43:35.860 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 21:43:35.863 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 21:43:35.864 +10:00 [DBG] Start authorize request
2020-07-07 21:43:35.865 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:43:35.865 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 21:43:35.866 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:43:35.867 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 21:43:35.870 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "02c80cf5c3cf430fb3332e6767eb0a2b",
  "Nonce": "ee9e92c894d04f748051bbc700030699",
  "PromptMode": "none",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "02c80cf5c3cf430fb3332e6767eb0a2b",
    "nonce": "ee9e92c894d04f748051bbc700030699",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxMjIwOTUsImV4cCI6MTU5NDEyMjM5NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJkZjZmOGU5YTlkZmU0NTM5OGM0NmM2OTVhMDhlYTc0MyIsImlhdCI6MTU5NDEyMjA5NSwiYXRfaGFzaCI6IldKMU9maWc5ZGVTbzRBZnVEQ016YUEiLCJzaWQiOiJkNDdmODNjOTQzZTIzNzEzY2Y3NWJlYjFiNWE5Y2RjNSIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDEyMjA2NCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.X-IzR8j23GbICriJL_rVBTXMUYWuc6mI1ixJ2lmJz3HWALdByCBrIODlRWnWndvOrVc22grRKcJJDx5zNkDwIoWnjr6ANsxopXkdkE5VvdMTE0l71sJrraLEhPycY9LSXPpmPBbAkyKT08w7_KoPZ4yFdVmmsWRJ2p6QfKO750WV_rnueXdpN5j0My3LWegln63Ioz67nBHart3zL2VuYYIZExu5ZkDGxUdmPbUsfIiiXSSRkmodLUeLfC3BuhobY76-_uF-9THzOcmfaCHAREhWr5rNXqEq_Mp2P9uDvt7YPRE6O-lZRURnL91tXM1fwHySRbcpc8svi2kDD3XvmA"
  }
}
2020-07-07 21:43:35.877 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 21:43:35.877 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 21:43:35.878 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 21:43:35.878 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 21:43:35.887 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 21:43:35.888 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 21:43:35.892 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****MuEA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RLKQ"
    }
  ],
  "ActivityId": "0HM12D94PUIGR:00000011",
  "TimeStamp": "2020-07-07T11:43:35Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 21:43:35.897 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "02c80cf5c3cf430fb3332e6767eb0a2b",
  "Scope": "openid profile email restapi"
}
2020-07-07 21:43:36.525 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 21:43:36.528 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:43:36.530 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:43:36.532 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 21:43:36.533 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 21:43:36.534 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 21:43:36.536 +10:00 [DBG] Start discovery request
2020-07-07 21:43:36.565 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:43:36.569 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:43:36.571 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:43:36.574 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 21:43:36.575 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 21:43:36.578 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 21:43:36.580 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-07 21:43:36.581 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-07 21:43:36.582 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-07 21:43:36.584 +10:00 [DBG] Start userinfo request
2020-07-07 21:43:36.585 +10:00 [DBG] Bearer token found in header
2020-07-07 21:43:36.588 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:43:36.590 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 21:43:36.594 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-07 21:43:36.595 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594122215,
    "exp": 1594122395,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594122064,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-07 21:43:36.600 +10:00 [DBG] Creating userinfo response
2020-07-07 21:43:36.601 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:43:36.602 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:43:36.604 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-07 21:43:36.606 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 21:43:36.612 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-07 21:43:36.614 +10:00 [DBG] End userinfo request
2020-07-07 23:04:06.105 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 23:04:06.108 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:06.111 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:06.112 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 23:04:06.115 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 23:04:06.116 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 23:04:06.121 +10:00 [DBG] Start discovery request
2020-07-07 23:04:06.128 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 23:04:06.130 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:06.133 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:06.134 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 23:04:06.135 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 23:04:06.137 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 23:04:06.141 +10:00 [DBG] Start discovery request
2020-07-07 23:04:06.410 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 23:04:06.410 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 23:04:06.411 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-07 23:04:06.413 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 23:04:06.415 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-07 23:04:06.417 +10:00 [DBG] Rendering check session result
2020-07-07 23:04:06.418 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-07 23:04:06.420 +10:00 [DBG] Start authorize request
2020-07-07 23:04:06.423 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 23:04:06.425 +10:00 [DBG] Start authorize request protocol validation
2020-07-07 23:04:06.425 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 23:04:06.428 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-07 23:04:06.429 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8fb56b8a3b2f459cbe05a3602ca88a82",
  "Nonce": "05febdbc61974230bd157b04cd2dee75",
  "SessionId": "d47f83c943e23713cf75beb1b5a9cdc5",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8fb56b8a3b2f459cbe05a3602ca88a82",
    "nonce": "05febdbc61974230bd157b04cd2dee75"
  }
}
2020-07-07 23:04:06.434 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-07 23:04:06.435 +10:00 [DBG] Creating Implicit Flow response.
2020-07-07 23:04:06.436 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-07 23:04:06.436 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-07 23:04:06.445 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-07 23:04:06.446 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-07 23:04:06.450 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****PeVA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****5Ffg"
    }
  ],
  "ActivityId": "0HM12D94PUIH1:00000001",
  "TimeStamp": "2020-07-07T13:04:06Z",
  "ProcessId": 13780,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-07 23:04:06.452 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "8fb56b8a3b2f459cbe05a3602ca88a82",
  "Scope": "openid profile email restapi"
}
2020-07-07 23:04:07.121 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 23:04:07.124 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:07.127 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:07.128 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 23:04:07.130 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 23:04:07.131 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 23:04:07.135 +10:00 [DBG] Start discovery request
2020-07-07 23:04:07.142 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-07 23:04:07.144 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:07.147 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:07.148 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-07 23:04:07.149 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-07 23:04:07.151 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-07 23:04:07.152 +10:00 [DBG] Start discovery request
2020-07-07 23:04:07.189 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-07 23:04:07.191 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-07 23:04:07.194 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-07 23:04:07.195 +10:00 [DBG] Rendering check session result
2020-07-07 23:04:07.212 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-07 23:04:07.214 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:07.217 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:07.217 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-07 23:04:07.219 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-07 23:04:07.220 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-07 23:04:07.222 +10:00 [DBG] Start key discovery request
2020-07-07 23:04:07.296 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 23:04:07.299 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:07.302 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:07.305 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-07 23:04:07.306 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-07 23:04:07.310 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-07 23:04:07.312 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-07 23:04:07.313 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-07 23:04:07.314 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-07 23:04:07.316 +10:00 [DBG] Start userinfo request
2020-07-07 23:04:07.317 +10:00 [DBG] Bearer token found in header
2020-07-07 23:04:07.321 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 23:04:07.323 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-07 23:04:07.326 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-07 23:04:07.327 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594127046,
    "exp": 1594127226,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594122064,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-07 23:04:07.330 +10:00 [DBG] Creating userinfo response
2020-07-07 23:04:07.334 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 23:04:07.336 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 23:04:07.338 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-07 23:04:07.339 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-07 23:04:07.345 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-07 23:04:07.346 +10:00 [DBG] End userinfo request
2020-07-08 15:28:51.472 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-08 15:28:51.554 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-08 15:28:51.558 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-08 15:28:51.558 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-08 15:28:51.558 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-08 15:28:51.559 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-08 15:47:24.875 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:47:24.899 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:47:24.901 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:47:25.110 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:47:25.837 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:47:25.839 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:47:25.845 +10:00 [DBG] Start discovery request
2020-07-08 15:47:26.054 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:47:26.062 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:47:26.063 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:47:26.070 +10:00 [DBG] Start authorize request
2020-07-08 15:47:26.105 +10:00 [DBG] No user present in authorize request
2020-07-08 15:47:26.128 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:47:26.145 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:26.197 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:47:26.227 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "e29307ab7a594727a9e7cf168f7e9c15",
  "Nonce": "2ae80d41276348d6b30950fc76c667f9",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "e29307ab7a594727a9e7cf168f7e9c15",
    "nonce": "2ae80d41276348d6b30950fc76c667f9"
  }
}
2020-07-08 15:47:26.239 +10:00 [INF] Showing login: User is not authenticated
2020-07-08 15:47:27.127 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:47:27.127 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:27.129 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:47:27.134 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:40.238 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 15:47:41.684 +10:00 [DBG] Augmenting SignInContext
2020-07-08 15:47:41.686 +10:00 [DBG] Adding idp claim with value: local
2020-07-08 15:47:41.687 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-08 15:47:41.688 +10:00 [DBG] Adding auth_time claim with value: 1594187261
2020-07-08 15:47:41.699 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 15:47:41.743 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HM1309HP56R8:00000003",
  "TimeStamp": "2020-07-08T05:47:41Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:47:41.758 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-08 15:47:41.759 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-08 15:47:41.761 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-08 15:47:41.768 +10:00 [DBG] Start authorize callback request
2020-07-08 15:47:41.774 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:47:41.774 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:47:41.777 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:41.779 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:47:41.783 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "e29307ab7a594727a9e7cf168f7e9c15",
  "Nonce": "2ae80d41276348d6b30950fc76c667f9",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "e29307ab7a594727a9e7cf168f7e9c15",
    "nonce": "2ae80d41276348d6b30950fc76c667f9"
  }
}
2020-07-08 15:47:41.811 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:47:41.819 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:47:41.830 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:47:41.831 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:47:42.060 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:47:42.061 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:47:42.082 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Y_ow"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****6RnA"
    }
  ],
  "ActivityId": "0HM1309HP56R8:00000004",
  "TimeStamp": "2020-07-08T05:47:42Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:47:42.090 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "e29307ab7a594727a9e7cf168f7e9c15",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:47:42.107 +10:00 [DBG] Augmenting SignInContext
2020-07-08 15:47:42.107 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 15:47:42.869 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:47:42.871 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:47:42.874 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:47:42.875 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:47:42.876 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:47:42.877 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:47:42.879 +10:00 [DBG] Start discovery request
2020-07-08 15:47:42.910 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 15:47:42.912 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:47:42.915 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:47:42.916 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 15:47:42.918 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 15:47:42.919 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 15:47:42.925 +10:00 [DBG] Start key discovery request
2020-07-08 15:47:42.981 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:47:42.983 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:47:42.986 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:47:42.988 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:47:42.989 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:47:42.990 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:47:42.991 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:47:42.993 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:47:42.995 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:47:43.002 +10:00 [DBG] Start userinfo request
2020-07-08 15:47:43.006 +10:00 [DBG] Bearer token found in header
2020-07-08 15:47:43.058 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:43.063 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:47:43.066 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:47:43.071 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187261,
    "exp": 1594187441,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:47:43.080 +10:00 [DBG] Creating userinfo response
2020-07-08 15:47:43.085 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:47:43.088 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:47:43.091 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:47:43.092 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:47:43.098 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:47:43.099 +10:00 [DBG] End userinfo request
2020-07-08 15:47:43.118 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 15:47:43.120 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 15:47:43.122 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 15:47:43.127 +10:00 [DBG] Rendering check session result
2020-07-08 15:49:43.129 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:49:43.132 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:49:43.134 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:49:43.136 +10:00 [DBG] Start authorize request
2020-07-08 15:49:43.137 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:49:43.138 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:49:43.138 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:49:43.139 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:49:43.143 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c6fd66618aea40ada68b8abebd129fac",
  "Nonce": "f1001215b89a4b55bd059aeb0d475d6b",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c6fd66618aea40ada68b8abebd129fac",
    "nonce": "f1001215b89a4b55bd059aeb0d475d6b",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODcyNjIsImV4cCI6MTU5NDE4NzU2MiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIyYWU4MGQ0MTI3NjM0OGQ2YjMwOTUwZmM3NmM2NjdmOSIsImlhdCI6MTU5NDE4NzI2MiwiYXRfaGFzaCI6IjVaaHg5dENTMV9QOWxEYl9YbnpTUVEiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MQr9g736WGbnSC4wN5Qjdnb3c2JIAmosliBa4OWPIhK3m1Jx1x1t0g2qjyHt-5kX9HNxjODmXFhS21cuxBH8nGMloSbD3O9mqbpYTYEfIpHpiriNq0oWkvJ9zXRuURMPb8aJ4-CyfHfOKb-eIIxYi1-kyG-CHnfXxfdhjhum0Vfr4My4ytIi8IvUzdn77jX_qeTaST4yYkPWcH9PJcyM-MpAbR7orY_xjAKJMgpyT1Indf5e89-B4eK2ov-Kkqb5_R_u9Dr2OYnVoZmTyXO6vPP-UlX9IY3v__8MMhClcilPOkTTXZUDDvWyx0Fh8L1H3Acg8HEl6BSw6KpQoRY_ow"
  }
}
2020-07-08 15:49:43.150 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:49:43.153 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:49:43.153 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:49:43.154 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:49:43.160 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:49:43.161 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:49:43.167 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****CAew"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****8QeA"
    }
  ],
  "ActivityId": "0HM1309HP56R8:00000006",
  "TimeStamp": "2020-07-08T05:49:43Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:49:43.170 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "c6fd66618aea40ada68b8abebd129fac",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:49:43.919 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:49:43.923 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:49:43.926 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:49:43.927 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:49:43.929 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:49:43.932 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:49:43.935 +10:00 [DBG] Start discovery request
2020-07-08 15:49:43.956 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:49:43.958 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:49:43.961 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:49:43.963 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:49:43.964 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:49:43.965 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:49:43.966 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:49:43.968 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:49:43.971 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:49:43.972 +10:00 [DBG] Start userinfo request
2020-07-08 15:49:43.973 +10:00 [DBG] Bearer token found in header
2020-07-08 15:49:43.976 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:49:43.977 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:49:43.981 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:49:43.983 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187383,
    "exp": 1594187563,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:49:43.985 +10:00 [DBG] Creating userinfo response
2020-07-08 15:49:43.986 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:49:43.989 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:49:43.990 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:49:43.994 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:49:43.999 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:49:44.000 +10:00 [DBG] End userinfo request
2020-07-08 15:51:44.026 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:51:44.028 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:51:44.031 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:51:44.032 +10:00 [DBG] Start authorize request
2020-07-08 15:51:44.033 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:51:44.033 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:51:44.034 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:51:44.035 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:51:44.036 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "10d2a2d19de744d284b69f83007e6b34",
  "Nonce": "86cd3b458d24487e92eddb499f5f2faa",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "10d2a2d19de744d284b69f83007e6b34",
    "nonce": "86cd3b458d24487e92eddb499f5f2faa",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODczODMsImV4cCI6MTU5NDE4NzY4MywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJmMTAwMTIxNWI4OWE0YjU1YmQwNTlhZWIwZDQ3NWQ2YiIsImlhdCI6MTU5NDE4NzM4MywiYXRfaGFzaCI6Ikg5TlR1Smh6LUFON3BtZ0lYVWkzeUEiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.llGLYduY46jM5rlJfCJGlsxOayyCnV3CYYTHWA7K07QAHhvm0Y4srYJdmeR-BPwPfrRq3FAQmbTQAh4VojscqME2hv8mXcspL18xYurbPQd_KeJrvweGm-MuXyRvxoAmfyjMc8j4OCOrJoc7UMXG9imF_0N31T0d758ESQSAZCEn9CpS5tUshvtnB7ouhqN_orvfn9Olo4FrO-WtBNO3YNAuZ1bQ0Vif6uKrO6fGqkdEIOl_NeTyAPLHMs2zl9d4Bzy56zYxRjOdovnN0NSE1GeB9r1GJtiLgUaf6TF105GOpO7ZAizc7VSVDWM8PiW2VYrwdI64InKyD05ID4CAew"
  }
}
2020-07-08 15:51:44.040 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:51:44.041 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:51:44.041 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:51:44.042 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:51:44.048 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:51:44.050 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:51:44.056 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****HjhA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****QvjQ"
    }
  ],
  "ActivityId": "0HM1309HP56RB:00000001",
  "TimeStamp": "2020-07-08T05:51:44Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:51:44.059 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "10d2a2d19de744d284b69f83007e6b34",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:51:44.662 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:51:44.664 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:51:44.667 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:51:44.668 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:51:44.669 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:51:44.671 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:51:44.672 +10:00 [DBG] Start discovery request
2020-07-08 15:51:44.692 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:51:44.693 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:51:44.694 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:51:44.697 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:51:44.698 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:51:44.700 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:51:44.701 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:51:44.703 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:51:44.704 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:51:44.705 +10:00 [DBG] Start userinfo request
2020-07-08 15:51:44.709 +10:00 [DBG] Bearer token found in header
2020-07-08 15:51:44.712 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:51:44.713 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:51:44.716 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:51:44.717 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187504,
    "exp": 1594187684,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:51:44.723 +10:00 [DBG] Creating userinfo response
2020-07-08 15:51:44.723 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:51:44.724 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:51:44.725 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:51:44.726 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:51:44.730 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:51:44.733 +10:00 [DBG] End userinfo request
2020-07-08 15:53:44.769 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:53:44.772 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:53:44.775 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:53:44.776 +10:00 [DBG] Start authorize request
2020-07-08 15:53:44.777 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:53:44.778 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:53:44.779 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:53:44.782 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:53:44.784 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c85838ab80eb43cbb34ef8bc25abc09e",
  "Nonce": "d80db837065843a59181627825c40d51",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c85838ab80eb43cbb34ef8bc25abc09e",
    "nonce": "d80db837065843a59181627825c40d51",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODc1MDQsImV4cCI6MTU5NDE4NzgwNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI4NmNkM2I0NThkMjQ0ODdlOTJlZGRiNDk5ZjVmMmZhYSIsImlhdCI6MTU5NDE4NzUwNCwiYXRfaGFzaCI6ImlIWDJxS0VyNmI4RzJVM2EwLTVKeEEiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.e-W25VLImnX0hI4PfbWbxKSeplTSryB4F4a3kppfvy6QlpqlE89I4C4bIcsSFdRRWCP58FpkthR4OcOgeqgCpvCurAl0tIG05t1SS-S6_CE-IDhNGTzbbibkC0jATOHsla19_q19lKBOl9-78bc31kIP3hOavjAxPt1x1GYpuph6JBCxB-NnmIoeKD1VcD7pBjX1lL5aefTorxIdWA7yf1gkMFYU_2uQ-sPuAWgiWuicmr8wsEulvIzA4iPjK1klbv_F1kYnJOkR5Q_l2zBoHMzyOvkjt3L1bo2kfyUypegxwJaDDveJW39wNng5pUnKrmci5N2hNK6Ir-Nb3pHjhA"
  }
}
2020-07-08 15:53:44.796 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:53:44.796 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:53:44.798 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:53:44.799 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:53:44.807 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:53:44.808 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:53:44.813 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****YacA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****yRpw"
    }
  ],
  "ActivityId": "0HM1309HP56RB:00000002",
  "TimeStamp": "2020-07-08T05:53:44Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:53:44.815 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "c85838ab80eb43cbb34ef8bc25abc09e",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:53:45.424 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:53:45.426 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:53:45.429 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:53:45.430 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:53:45.431 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:53:45.433 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:53:45.434 +10:00 [DBG] Start discovery request
2020-07-08 15:53:45.458 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:53:45.463 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:53:45.465 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:53:45.468 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:53:45.469 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:53:45.470 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:53:45.471 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:53:45.475 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:53:45.476 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:53:45.477 +10:00 [DBG] Start userinfo request
2020-07-08 15:53:45.478 +10:00 [DBG] Bearer token found in header
2020-07-08 15:53:45.480 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:53:45.481 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:53:45.486 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:53:45.488 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187624,
    "exp": 1594187804,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:53:45.490 +10:00 [DBG] Creating userinfo response
2020-07-08 15:53:45.491 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:53:45.492 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:53:45.493 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:53:45.496 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:53:45.500 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:53:45.501 +10:00 [DBG] End userinfo request
2020-07-08 15:55:45.525 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:55:45.527 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:55:45.530 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:55:45.531 +10:00 [DBG] Start authorize request
2020-07-08 15:55:45.532 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:55:45.533 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:55:45.534 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:55:45.535 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:55:45.540 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "87188e37e2c746948b624c751cd84bb8",
  "Nonce": "776e3621b7b6472ca5d672ff4073bf30",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "87188e37e2c746948b624c751cd84bb8",
    "nonce": "776e3621b7b6472ca5d672ff4073bf30",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODc2MjQsImV4cCI6MTU5NDE4NzkyNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJkODBkYjgzNzA2NTg0M2E1OTE4MTYyNzgyNWM0MGQ1MSIsImlhdCI6MTU5NDE4NzYyNCwiYXRfaGFzaCI6InE2VTM3cW9kZVZBUzgwSEZZUUhpMEEiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.DLQ26Dh8ykf8P7ZbKqp5-bYbiSuldjwJ7cHQFWovQulRbleo4iUtgnfnXF4Z0BugNKDtD9Bt7sqnpFi7s0jLq8IBq3RCrWs8iR51ew4YYF_DWwzx_Haz21gfxv6dsmaNU5v_uoqZkzGS-elaZ6STI2vr4AGA7FamKL0tc3SBzisOOVH6EoMe3QWKPrtz1tOGlVLYQE1MbTIoSg69EB4OntDoy8srDH_eWSO90k7luexX42hVgpRBQSjfEVcmN7chKgMDFrAUWWlYTclmOGQ0eaQyuACtmmWvFMoyRgosijSbi-J_oB6syndAntba7xrfhava9o_gaP8V82EVdEYacA"
  }
}
2020-07-08 15:55:45.554 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:55:45.554 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:55:45.555 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:55:45.555 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:55:45.566 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:55:45.567 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:55:45.572 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****BZOg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****6d2w"
    }
  ],
  "ActivityId": "0HM1309HP56RB:00000003",
  "TimeStamp": "2020-07-08T05:55:45Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:55:45.577 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "87188e37e2c746948b624c751cd84bb8",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:55:46.365 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:55:46.368 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:55:46.372 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:55:46.373 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:55:46.380 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:55:46.381 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:55:46.383 +10:00 [DBG] Start discovery request
2020-07-08 15:55:46.406 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:55:46.408 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:55:46.411 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:55:46.415 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:55:46.416 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:55:46.419 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:55:46.422 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:55:46.423 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:55:46.424 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:55:46.426 +10:00 [DBG] Start userinfo request
2020-07-08 15:55:46.426 +10:00 [DBG] Bearer token found in header
2020-07-08 15:55:46.432 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:55:46.434 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:55:46.438 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:55:46.440 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187745,
    "exp": 1594187925,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:55:46.445 +10:00 [DBG] Creating userinfo response
2020-07-08 15:55:46.445 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:55:46.447 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:55:46.448 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:55:46.450 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:55:46.456 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:55:46.458 +10:00 [DBG] End userinfo request
2020-07-08 15:57:46.484 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:57:46.486 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:57:46.490 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:57:46.491 +10:00 [DBG] Start authorize request
2020-07-08 15:57:46.491 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:57:46.492 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:57:46.493 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:57:46.497 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:57:46.498 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f2dff781195548bea1baea1ed014c115",
  "Nonce": "b5afc39174d84fd39f5364f1f38702b8",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f2dff781195548bea1baea1ed014c115",
    "nonce": "b5afc39174d84fd39f5364f1f38702b8",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODc3NDUsImV4cCI6MTU5NDE4ODA0NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3NzZlMzYyMWI3YjY0NzJjYTVkNjcyZmY0MDczYmYzMCIsImlhdCI6MTU5NDE4Nzc0NSwiYXRfaGFzaCI6IktXb3l5LWt6RGIzVWhuMDhHWkstaEEiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.cgMxQr874e9vh1Td7TojuT7z8xX_Fl1eathq62_Ul_cA2LqPt5tguEyeATuzXuy_ybZtUSyC9lPr1QJDK18bwxsicp1WqY88Xq-apUf8MsD1jnjI0s2mQ1mEcE7SCaCpKZJ6zzKR28RkcAfuOFfjJ2qrNUPoevuwmSDpgs8pfDZiODdrnqfF-mcnY3lHcsbK-9y-9XiB7z3vybwQ0SjoEv_liioPDxD5VOh-CGbedOrrdYarx4DPt9R_KOykj-19SLCQhPT2UCbpUDteoH3k74YEnk8lKjq2RSeBLtGXxy2UZxwxVrurUF_aFQO0TY8_L_1EUH6E3R1TgZ-aPsBZOg"
  }
}
2020-07-08 15:57:46.511 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:57:46.512 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:57:46.512 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:57:46.513 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:57:46.523 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:57:46.524 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:57:46.528 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Z1OQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dNcA"
    }
  ],
  "ActivityId": "0HM1309HP56RB:00000004",
  "TimeStamp": "2020-07-08T05:57:46Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:57:46.533 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "f2dff781195548bea1baea1ed014c115",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:57:47.311 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:57:47.314 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:57:47.318 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:57:47.319 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:57:47.321 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:57:47.324 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:57:47.327 +10:00 [DBG] Start discovery request
2020-07-08 15:57:47.347 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:57:47.352 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:57:47.353 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:57:47.356 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:57:47.359 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:57:47.362 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:57:47.363 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:57:47.364 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:57:47.366 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:57:47.370 +10:00 [DBG] Start userinfo request
2020-07-08 15:57:47.370 +10:00 [DBG] Bearer token found in header
2020-07-08 15:57:47.375 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:57:47.377 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:57:47.385 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:57:47.386 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187866,
    "exp": 1594188046,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:57:47.391 +10:00 [DBG] Creating userinfo response
2020-07-08 15:57:47.394 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:57:47.396 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:57:47.398 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:57:47.401 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:57:47.408 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:57:47.409 +10:00 [DBG] End userinfo request
2020-07-08 15:59:47.438 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 15:59:47.441 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 15:59:47.444 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 15:59:47.445 +10:00 [DBG] Start authorize request
2020-07-08 15:59:47.446 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:59:47.448 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 15:59:47.452 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:59:47.454 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 15:59:47.455 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "a6a955804e3d4b34bb10bc32ca6592e2",
  "Nonce": "e86ce9a30d8c40a495fe89c793d2c248",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "a6a955804e3d4b34bb10bc32ca6592e2",
    "nonce": "e86ce9a30d8c40a495fe89c793d2c248",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODc4NjYsImV4cCI6MTU5NDE4ODE2NiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJiNWFmYzM5MTc0ZDg0ZmQzOWY1MzY0ZjFmMzg3MDJiOCIsImlhdCI6MTU5NDE4Nzg2NiwiYXRfaGFzaCI6InY1NjEwQ2dHZV9NbXFndkpWT0IwUnciLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.OqTqmfkVWtH38cevIWxaEJ8aZVtyuM-eMZANdIxFAKx2LjBmPx11m0qQgk7hnkKCozkGWqU8OyrE7JhPfn8NoYTD7HhKvsfbrfC9aSgHkS9c9a4NYa7C6sqlbAVwEOTho6eOPnwtzOlYjzoexrCBDC1kAuAMtxofxp1Rl21gRLOukM_I0VvAsEpeExbWGXs9UbAFTRkZFEu5E7LXNfTr8UAVtPBvts8YGdZdkgQer4hVlRZuyRpS-dwvzBFYCJOdvNZ0O4a_IMo_k1DijqSfFpirq638EZPo9v3g3ruTRM8rUdwpLOHmBW2FlXjfSW2dHDmq9mbPewdGprLZScZ1OQ"
  }
}
2020-07-08 15:59:47.470 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 15:59:47.470 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 15:59:47.472 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 15:59:47.475 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 15:59:47.485 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 15:59:47.488 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 15:59:47.493 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****OVSw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****aigw"
    }
  ],
  "ActivityId": "0HM1309HP56RF:00000001",
  "TimeStamp": "2020-07-08T05:59:47Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 15:59:47.500 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "a6a955804e3d4b34bb10bc32ca6592e2",
  "Scope": "openid profile email restapi"
}
2020-07-08 15:59:48.330 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 15:59:48.333 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:59:48.336 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:59:48.338 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 15:59:48.341 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 15:59:48.346 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 15:59:48.349 +10:00 [DBG] Start discovery request
2020-07-08 15:59:48.376 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:59:48.379 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:59:48.382 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:59:48.385 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 15:59:48.387 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 15:59:48.391 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 15:59:48.393 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 15:59:48.395 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 15:59:48.397 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 15:59:48.401 +10:00 [DBG] Start userinfo request
2020-07-08 15:59:48.403 +10:00 [DBG] Bearer token found in header
2020-07-08 15:59:48.407 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:59:48.408 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 15:59:48.414 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 15:59:48.415 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594187987,
    "exp": 1594188167,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 15:59:48.418 +10:00 [DBG] Creating userinfo response
2020-07-08 15:59:48.419 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:59:48.420 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:59:48.426 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 15:59:48.428 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 15:59:48.434 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 15:59:48.436 +10:00 [DBG] End userinfo request
2020-07-08 16:01:48.460 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:01:48.462 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:01:48.465 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:01:48.466 +10:00 [DBG] Start authorize request
2020-07-08 16:01:48.467 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:01:48.468 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:01:48.469 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:01:48.471 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:01:48.474 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "4642901d10074cad9c4b23707ccfda01",
  "Nonce": "dcaf4379bca34c2283a6636a13d228e2",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "4642901d10074cad9c4b23707ccfda01",
    "nonce": "dcaf4379bca34c2283a6636a13d228e2",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODc5ODcsImV4cCI6MTU5NDE4ODI4NywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJlODZjZTlhMzBkOGM0MGE0OTVmZTg5Yzc5M2QyYzI0OCIsImlhdCI6MTU5NDE4Nzk4NywiYXRfaGFzaCI6ImFLVlBwNnl1VTRBMk5KTXhkeDRBV0EiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.mWSvEHGdDehyPj2onyxSTGluWuBKirS7CdyhU77ZaoSlPK4IbzNifiJOfBWn5R_PU3tR_vLSuz8nhQCpqV4yA_DY0bsAFohgYgfVkEhVPHTBPP8inegeXGNgIGZzU64WvqN3mY_5KX1m4q1k0OPtIhltn3eHjt-aHXosd6BT37-C8Fw-TuP_31-wh0btGx-9YTtOwxDYKIldECustSGx0ommU-vGXh_sUadAvyxFC3Yz9KVQ8V5lRVlkspIMl-xppuK7WJ8g5JmMWGqjdm3fo-xDUA9Qow5T-09lA3ITSY4kTW87U71SP8SWGLBowlSesZCSybAhJGmUqeSxC5OVSw"
  }
}
2020-07-08 16:01:48.482 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:01:48.483 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:01:48.484 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:01:48.484 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:01:48.492 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 16:01:48.494 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:01:48.499 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****gOdg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****QniA"
    }
  ],
  "ActivityId": "0HM1309HP56RF:00000002",
  "TimeStamp": "2020-07-08T06:01:48Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:01:48.505 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "4642901d10074cad9c4b23707ccfda01",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:01:49.271 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:01:49.276 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:01:49.278 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:01:49.279 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:01:49.280 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:01:49.282 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:01:49.286 +10:00 [DBG] Start discovery request
2020-07-08 16:01:49.321 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:01:49.325 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:01:49.327 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:01:49.329 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:01:49.330 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:01:49.333 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:01:49.336 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:01:49.339 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:01:49.340 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:01:49.341 +10:00 [DBG] Start userinfo request
2020-07-08 16:01:49.343 +10:00 [DBG] Bearer token found in header
2020-07-08 16:01:49.347 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:01:49.348 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:01:49.352 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:01:49.354 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594188108,
    "exp": 1594188288,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:01:49.359 +10:00 [DBG] Creating userinfo response
2020-07-08 16:01:49.360 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:01:49.362 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:01:49.364 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:01:49.366 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:01:49.374 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:01:49.375 +10:00 [DBG] End userinfo request
2020-07-08 16:14:21.012 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:14:21.015 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.017 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.018 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:14:21.020 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:14:21.021 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:14:21.022 +10:00 [DBG] Start discovery request
2020-07-08 16:14:21.026 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:14:21.027 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.028 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.029 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:14:21.030 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:14:21.032 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:14:21.033 +10:00 [DBG] Start discovery request
2020-07-08 16:14:21.099 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:14:21.102 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:14:21.105 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:14:21.107 +10:00 [DBG] Start authorize request
2020-07-08 16:14:21.107 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:14:21.108 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:14:21.109 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:14:21.114 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:14:21.116 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "448fd13145fb484bbe9903d78d5df99b",
  "Nonce": "a2a36696d24f4719b316fcdfe4139093",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "448fd13145fb484bbe9903d78d5df99b",
    "nonce": "a2a36696d24f4719b316fcdfe4139093"
  }
}
2020-07-08 16:14:21.119 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:14:21.121 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:14:21.123 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:14:21.125 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:14:21.126 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:14:21.127 +10:00 [DBG] Rendering check session result
2020-07-08 16:14:21.128 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:14:21.129 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:14:21.139 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 16:14:21.140 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:14:21.146 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TOuA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****IZAg"
    }
  ],
  "ActivityId": "0HM1309HP56RJ:00000001",
  "TimeStamp": "2020-07-08T06:14:21Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:14:21.150 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "448fd13145fb484bbe9903d78d5df99b",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:14:21.499 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:14:21.502 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.504 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.505 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:14:21.507 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:14:21.508 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:14:21.509 +10:00 [DBG] Start discovery request
2020-07-08 16:14:21.520 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:14:21.521 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.523 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.525 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:14:21.526 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:14:21.527 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:14:21.528 +10:00 [DBG] Start discovery request
2020-07-08 16:14:21.548 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:14:21.549 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:14:21.550 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.553 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:14:21.554 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.555 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:14:21.556 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:14:21.557 +10:00 [DBG] Rendering check session result
2020-07-08 16:14:21.561 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:14:21.563 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:14:21.566 +10:00 [DBG] Start key discovery request
2020-07-08 16:14:21.604 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:14:21.606 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.610 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.613 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:14:21.614 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:14:21.617 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:14:21.619 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:14:21.621 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:14:21.622 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:14:21.623 +10:00 [DBG] Start userinfo request
2020-07-08 16:14:21.623 +10:00 [DBG] Bearer token found in header
2020-07-08 16:14:21.627 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:14:21.629 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:14:21.633 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:14:21.634 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594188861,
    "exp": 1594189041,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:14:21.636 +10:00 [DBG] Creating userinfo response
2020-07-08 16:14:21.640 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:14:21.641 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:14:21.642 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:14:21.644 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:14:21.649 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:14:21.650 +10:00 [DBG] End userinfo request
2020-07-08 16:16:21.682 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:16:21.684 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:16:21.687 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:16:21.689 +10:00 [DBG] Start authorize request
2020-07-08 16:16:21.690 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:16:21.691 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:16:21.692 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:16:21.694 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:16:21.695 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "af834a88901a45dd9b3be957f404ba0c",
  "Nonce": "89285d1a59a840f6bc0494527fd12052",
  "PromptMode": "none",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "af834a88901a45dd9b3be957f404ba0c",
    "nonce": "89285d1a59a840f6bc0494527fd12052",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxODg4NjEsImV4cCI6MTU5NDE4OTE2MSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJhMmEzNjY5NmQyNGY0NzE5YjMxNmZjZGZlNDEzOTA5MyIsImlhdCI6MTU5NDE4ODg2MSwiYXRfaGFzaCI6Ikx2QnhsV2tLQUd6V1NMRmR6ZXJnR0EiLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.klZWaoCR8JwQXg9v8rL22EIB-U7UD8f227H4xydSMcArPPHWbPBAdbhmHNqDuZyJ6tyMPMZ0GD6N3wBi-Ax8b3sNYb9T3MxAlaTId2Od8JcDmtMxf9xmADz9HJ5XpDRmai8NON8CgTrBw9HoXPsQ6NJmm5OHduYNIObhae7pENWvKA9NRfuBlDcVe03h2vfd9rLDCtm2jPpGi8Chnymp9AysWJ1U-jEKxB-Wx1ppS2Cf-GgnlZWHlkQQEeD1FK1JeiiuYhYJgwhkFrJNDg4xqSmsdjakRIRJBRH3hFq1b5fAHASttAmgjQpisFPi_Wd7pO3b6km44SPeMjFesyTOuA"
  }
}
2020-07-08 16:16:21.702 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:16:21.703 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:16:21.704 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:16:21.705 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:16:21.711 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 16:16:21.714 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:16:21.719 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****F0gg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vDsw"
    }
  ],
  "ActivityId": "0HM1309HP56RJ:00000003",
  "TimeStamp": "2020-07-08T06:16:21Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:16:21.726 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "af834a88901a45dd9b3be957f404ba0c",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:46:44.449 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:46:44.451 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:44.454 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:44.455 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:46:44.457 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:46:44.458 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:46:44.459 +10:00 [DBG] Start discovery request
2020-07-08 16:46:44.466 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:46:44.468 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:44.469 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:44.470 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:46:44.474 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:46:44.478 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:46:44.488 +10:00 [DBG] Start discovery request
2020-07-08 16:46:44.603 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:46:44.603 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:46:44.605 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:46:44.607 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:46:44.609 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:46:44.610 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:46:44.612 +10:00 [DBG] Start authorize request
2020-07-08 16:46:44.620 +10:00 [DBG] Rendering check session result
2020-07-08 16:46:44.621 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:46:44.623 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:46:44.624 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:46:44.626 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:46:44.627 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "abf072ae90e749a3b2f62277c0ae73bb",
  "Nonce": "41e7d3704ce64885af807cfda7181d0d",
  "SessionId": "a6f31909c5a6f8442c5986de4ef4f381",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "abf072ae90e749a3b2f62277c0ae73bb",
    "nonce": "41e7d3704ce64885af807cfda7181d0d"
  }
}
2020-07-08 16:46:44.635 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:46:44.642 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:46:44.646 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:46:44.651 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:46:44.661 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 16:46:44.662 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:46:44.673 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****D2vw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****l6HQ"
    }
  ],
  "ActivityId": "0HM1309HP56RL:00000001",
  "TimeStamp": "2020-07-08T06:46:44Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:46:44.679 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "abf072ae90e749a3b2f62277c0ae73bb",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:46:45.064 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:46:45.066 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:45.070 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:45.071 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:46:45.073 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:46:45.078 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:46:45.084 +10:00 [DBG] Start discovery request
2020-07-08 16:46:45.089 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:46:45.090 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:45.091 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:45.092 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:46:45.094 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:46:45.095 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:46:45.101 +10:00 [DBG] Start discovery request
2020-07-08 16:46:45.121 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:46:45.123 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:45.126 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:45.127 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:46:45.129 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:46:45.136 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:46:45.137 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:46:45.140 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:46:45.142 +10:00 [DBG] Start key discovery request
2020-07-08 16:46:45.144 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:46:45.153 +10:00 [DBG] Rendering check session result
2020-07-08 16:46:45.188 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:46:45.191 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:45.194 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:45.281 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:46:45.283 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:46:45.285 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:46:45.286 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:46:45.287 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:46:45.289 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:46:45.292 +10:00 [DBG] Start userinfo request
2020-07-08 16:46:45.293 +10:00 [DBG] Bearer token found in header
2020-07-08 16:46:45.297 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:46:45.301 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:46:45.307 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:46:45.309 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594190804,
    "exp": 1594190984,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:46:45.312 +10:00 [DBG] Creating userinfo response
2020-07-08 16:46:45.316 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:46:45.317 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:46:45.318 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:46:45.319 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:46:45.323 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:46:45.325 +10:00 [DBG] End userinfo request
2020-07-08 16:48:05.790 +10:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-07-08 16:48:05.794 +10:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-07-08 16:48:05.798 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-07-08 16:48:05.805 +10:00 [DBG] Processing signout request for be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 16:48:05.813 +10:00 [DBG] Start end session request validation
2020-07-08 16:48:05.821 +10:00 [DBG] Start identity token validation
2020-07-08 16:48:05.823 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:05.824 +10:00 [DBG] Client found: blog-client / Blog Client
2020-07-08 16:48:05.830 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:48:05.833 +10:00 [DBG] Token validation success
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1594190804,
    "exp": 1594191104,
    "iss": "https://localhost:5001",
    "aud": "blog-client",
    "nonce": "41e7d3704ce64885af807cfda7181d0d",
    "iat": 1594190804,
    "at_hash": "TbrdMFdT5PDyu5OFjJR1ig",
    "sid": "a6f31909c5a6f8442c5986de4ef4f381",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594187261,
    "idp": "local",
    "amr": "pwd"
  }
}
2020-07-08 16:48:05.839 +10:00 [INF] End session request validation success
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "PostLogOutUri": "http://localhost:4200/",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTA4MDQsImV4cCI6MTU5NDE5MTEwNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI0MWU3ZDM3MDRjZTY0ODg1YWY4MDdjZmRhNzE4MWQwZCIsImlhdCI6MTU5NDE5MDgwNCwiYXRfaGFzaCI6IlRicmRNRmRUNVBEeXU1T0ZqSlIxaWciLCJzaWQiOiJhNmYzMTkwOWM1YTZmODQ0MmM1OTg2ZGU0ZWY0ZjM4MSIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE4NzI2MSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.R0_LEIPHLa9O0Q0rJYpgIQzf7XH6QhRYvDl41nH_WVTQhOM6LWQqONbTkskmBINUVwzKPsLZgZYUUB7QkbCF45VQcBoXo8I7jcRABHSl7FjE9gpg-J1Bmi1zeA4ewRDAKY1b75xOenVexxr4yOh9K-8VARwDGUtIk2y9uPbocbrvjRjuB3v0nctWuIW7GR9xTs6fTIPd57yhjyu9MYYsZ25K1wfupA1hfQnOi_EDkVJFAF7dVL1vcwLu1Y5pTQAUGNs7td5jIDjTGTEJVdNCrtlYxKiDLNGGjcjvBISBMUj-c2APJuYDvTFW04JSIL-7yIEsq-yipWlCrVDLH3D2vw",
    "post_logout_redirect_uri": "http://localhost:4200/"
  }
}
2020-07-08 16:48:05.846 +10:00 [DBG] Success validating end session request from blog-client
2020-07-08 16:48:05.916 +10:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-07-08 16:48:05.918 +10:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-07-08 16:48:05.920 +10:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-07-08 16:48:05.925 +10:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "DisplayName": "Bob Smith",
  "ActivityId": "0HM1309HP56RL:00000004",
  "TimeStamp": "2020-07-08T06:48:05Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:48:06.146 +10:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-07-08 16:48:06.158 +10:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-07-08 16:48:06.159 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-07-08 16:48:06.167 +10:00 [DBG] Processing signout callback request
2020-07-08 16:48:06.176 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:06.177 +10:00 [DBG] No client front-channel logout URLs
2020-07-08 16:48:06.181 +10:00 [DBG] No client back-channel logout URLs
2020-07-08 16:48:06.182 +10:00 [INF] Successful signout callback.
2020-07-08 16:48:06.182 +10:00 [DBG] No client front-channel iframe urls
2020-07-08 16:48:06.183 +10:00 [DBG] No client back-channel iframe urls
2020-07-08 16:48:10.330 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:48:10.332 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:48:10.336 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:48:10.336 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:48:10.338 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:48:10.339 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:48:10.344 +10:00 [DBG] Start discovery request
2020-07-08 16:48:10.417 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:48:10.422 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:48:10.424 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:48:10.425 +10:00 [DBG] Start authorize request
2020-07-08 16:48:10.426 +10:00 [DBG] No user present in authorize request
2020-07-08 16:48:10.426 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:48:10.427 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:10.431 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:48:10.433 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c8a6c7cb70a74cceab8874a0ca59c2a4",
  "Nonce": "056c8bc194a4444b9d29e86b52e1267a",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c8a6c7cb70a74cceab8874a0ca59c2a4",
    "nonce": "056c8bc194a4444b9d29e86b52e1267a"
  }
}
2020-07-08 16:48:10.437 +10:00 [INF] Showing login: User is not authenticated
2020-07-08 16:48:10.497 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:48:10.497 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:10.501 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:48:10.503 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:26.013 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 16:48:26.028 +10:00 [DBG] Augmenting SignInContext
2020-07-08 16:48:26.029 +10:00 [DBG] Adding idp claim with value: local
2020-07-08 16:48:26.030 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-08 16:48:26.032 +10:00 [DBG] Adding auth_time claim with value: 1594190906
2020-07-08 16:48:26.033 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 16:48:26.037 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM1309HP56RL:00000008",
  "TimeStamp": "2020-07-08T06:48:26Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:48:26.042 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-08 16:48:26.043 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-08 16:48:26.044 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-08 16:48:26.047 +10:00 [DBG] Start authorize callback request
2020-07-08 16:48:26.048 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:48:26.049 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:48:26.049 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:26.050 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:48:26.051 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c8a6c7cb70a74cceab8874a0ca59c2a4",
  "Nonce": "056c8bc194a4444b9d29e86b52e1267a",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c8a6c7cb70a74cceab8874a0ca59c2a4",
    "nonce": "056c8bc194a4444b9d29e86b52e1267a"
  }
}
2020-07-08 16:48:26.056 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:48:26.057 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:48:26.058 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:48:26.059 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:48:26.065 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:48:26.066 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:48:26.072 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****HqqA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****3CbA"
    }
  ],
  "ActivityId": "0HM1309HP56RL:00000009",
  "TimeStamp": "2020-07-08T06:48:26Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:48:26.075 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "c8a6c7cb70a74cceab8874a0ca59c2a4",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:48:26.076 +10:00 [DBG] Augmenting SignInContext
2020-07-08 16:48:26.078 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 16:48:27.026 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:48:27.028 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:48:27.032 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:48:27.033 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:48:27.034 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:48:27.036 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:48:27.043 +10:00 [DBG] Start discovery request
2020-07-08 16:48:27.079 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:48:27.081 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:48:27.084 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:48:27.086 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:48:27.087 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:48:27.088 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:48:27.090 +10:00 [DBG] Start key discovery request
2020-07-08 16:48:27.142 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:48:27.144 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:48:27.146 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:48:27.149 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:48:27.161 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:48:27.163 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:48:27.164 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:48:27.165 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:48:27.166 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:48:27.167 +10:00 [DBG] Start userinfo request
2020-07-08 16:48:27.180 +10:00 [DBG] Bearer token found in header
2020-07-08 16:48:27.185 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:27.186 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:48:27.190 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:48:27.191 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594190906,
    "exp": 1594191086,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:48:27.197 +10:00 [DBG] Creating userinfo response
2020-07-08 16:48:27.197 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:48:27.199 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:48:27.200 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:48:27.201 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:48:27.209 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:48:27.210 +10:00 [DBG] End userinfo request
2020-07-08 16:48:27.261 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:48:27.263 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:48:27.266 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:48:27.267 +10:00 [DBG] Rendering check session result
2020-07-08 16:50:27.262 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:50:27.267 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:50:27.269 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:50:27.271 +10:00 [DBG] Start authorize request
2020-07-08 16:50:27.272 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:50:27.273 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:50:27.273 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:50:27.274 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:50:27.275 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "2db4ab20a9434a1a96d2c4bf5d4d75bf",
  "Nonce": "742f73dbca884d648637b17ccf7abd8b",
  "PromptMode": "none",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "2db4ab20a9434a1a96d2c4bf5d4d75bf",
    "nonce": "742f73dbca884d648637b17ccf7abd8b",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTA5MDYsImV4cCI6MTU5NDE5MTIwNiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwNTZjOGJjMTk0YTQ0NDRiOWQyOWU4NmI1MmUxMjY3YSIsImlhdCI6MTU5NDE5MDkwNiwiYXRfaGFzaCI6InVUUEpiY3h3UWxRN0tnd2d4VDJtTWciLCJzaWQiOiJmMDhiNGYzMjdlYWRkYjNmMmMzODcyYzY4NjE4ZDc5MiIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDE5MDkwNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.a4pRAmoMpM_h5apPlb29bohxCNLJ_Gx29gHm1bblU_Ajm7TtxF1OTsCMyIXscJhob40xtA3b8CVRNUVpiWmj_QhXlQ3HW25VWPeWvhM9Pfe-D8belc_R0tGzxwg-UAvlAv0Ev9AhE2wOiF4R_AhfJNxkDhvD_edoGAvkYN86Xb5SYUr_4v-E1N1ERxOoWAdcQuIZsY9EfqNlePanN4Ob-_rXoOP6Q-rO1jROiLlwJuUooAw7aS9SMu5Y3KnzbquF-wQefiU4Wk3taN78RlE7C4hXbFgrvLPdZ2jrziu4wi219VXJhuQ0WoC-qZpeGtsdkRyQzQDW3f-Iuxum09HqqA"
  }
}
2020-07-08 16:50:27.287 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:50:27.288 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:50:27.289 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:50:27.289 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:50:27.296 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:50:27.299 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:50:27.304 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****HKRg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****EW3A"
    }
  ],
  "ActivityId": "0HM1309HP56RL:0000000B",
  "TimeStamp": "2020-07-08T06:50:27Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:50:27.312 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "2db4ab20a9434a1a96d2c4bf5d4d75bf",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:50:28.067 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:50:28.069 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:50:28.072 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:50:28.073 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:50:28.075 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:50:28.078 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:50:28.083 +10:00 [DBG] Start discovery request
2020-07-08 16:50:28.111 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:50:28.114 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:50:28.117 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:50:28.120 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:50:28.120 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:50:28.121 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:50:28.124 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:50:28.126 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:50:28.127 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:50:28.129 +10:00 [DBG] Start userinfo request
2020-07-08 16:50:28.130 +10:00 [DBG] Bearer token found in header
2020-07-08 16:50:28.134 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:50:28.135 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:50:28.139 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:50:28.141 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191027,
    "exp": 1594191207,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:50:28.143 +10:00 [DBG] Creating userinfo response
2020-07-08 16:50:28.147 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:50:28.150 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:50:28.151 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:50:28.152 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:50:28.157 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:50:28.158 +10:00 [DBG] End userinfo request
2020-07-08 16:52:28.180 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:52:28.182 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:52:28.189 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:52:28.192 +10:00 [DBG] Start authorize request
2020-07-08 16:52:28.193 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:52:28.195 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:52:28.196 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:52:28.197 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:52:28.198 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "9af53f9c66404834a0892f865af0d6cf",
  "Nonce": "758fff2142d14dc48830f3fdbacfdc8c",
  "PromptMode": "none",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "9af53f9c66404834a0892f865af0d6cf",
    "nonce": "758fff2142d14dc48830f3fdbacfdc8c",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTEwMjcsImV4cCI6MTU5NDE5MTMyNywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3NDJmNzNkYmNhODg0ZDY0ODYzN2IxN2NjZjdhYmQ4YiIsImlhdCI6MTU5NDE5MTAyNywiYXRfaGFzaCI6IkVsRnJEejhWOFVhVDhMQkR2QTNfR1EiLCJzaWQiOiJmMDhiNGYzMjdlYWRkYjNmMmMzODcyYzY4NjE4ZDc5MiIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDE5MDkwNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.R84TExStUFVXGaBgogxpNXimt2cwfuqnFtIgOW_MtfIzPrkBRhQ1e3cRLqEWud_Qzci29lC_5xwUtL6x6UwEt2KLK0ZnCBKzim8ddoS7PI-2F4O_zze0iSoW-TNXwGBJSZaYCRiTqbFyTi86n6fcX6S1fLPtHyzd4J7Vq73vub4sSaqTf27Z4lG6m0SRVG6TSqiWUia-zDse4gH47urSqgTDCwVfG5arYZWq1OjbKmTVO-PXxhkPB-SfPwyW8bykkx6_syfN4RB4hV-wi195o6-gPjavtwKbRgs0ch2A1VSZjZiM8aCC-Z8Pr6buUWB3XKTkmZe7eJuUYtT7S1HKRg"
  }
}
2020-07-08 16:52:28.208 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:52:28.209 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:52:28.209 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:52:28.210 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:52:28.218 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:52:28.219 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:52:28.224 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****fG4g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Os8w"
    }
  ],
  "ActivityId": "0HM1309HP56RL:0000000C",
  "TimeStamp": "2020-07-08T06:52:28Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:52:28.229 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "9af53f9c66404834a0892f865af0d6cf",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:52:28.855 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:52:28.857 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:52:28.860 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:52:28.862 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:52:28.864 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:52:28.872 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:52:28.874 +10:00 [DBG] Start discovery request
2020-07-08 16:52:28.889 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:52:28.891 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:52:28.894 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:52:28.897 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:52:28.898 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:52:28.899 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:52:28.900 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:52:28.906 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:52:28.909 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:52:28.909 +10:00 [DBG] Start userinfo request
2020-07-08 16:52:28.910 +10:00 [DBG] Bearer token found in header
2020-07-08 16:52:28.913 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:52:28.914 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:52:28.918 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:52:28.919 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191148,
    "exp": 1594191328,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:52:28.922 +10:00 [DBG] Creating userinfo response
2020-07-08 16:52:28.926 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:52:28.930 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:52:28.931 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:52:28.933 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:52:28.941 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:52:28.942 +10:00 [DBG] End userinfo request
2020-07-08 16:55:12.425 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:55:12.428 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:12.431 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:12.432 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:55:12.433 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:55:12.434 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:55:12.435 +10:00 [DBG] Start discovery request
2020-07-08 16:55:12.438 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:55:12.441 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:12.442 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:12.443 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:55:12.445 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:55:12.447 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:55:12.448 +10:00 [DBG] Start discovery request
2020-07-08 16:55:12.479 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:55:12.481 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:55:12.482 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:55:12.484 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:55:12.485 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:55:12.487 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:55:12.488 +10:00 [DBG] Start authorize request
2020-07-08 16:55:12.489 +10:00 [DBG] Rendering check session result
2020-07-08 16:55:12.495 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:55:12.496 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:55:12.497 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:55:12.498 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:55:12.500 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "5ec9797352c24391a5de06c571a2c21b",
  "Nonce": "b3b2c080daac4f15a5bb9893c8c428fe",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "5ec9797352c24391a5de06c571a2c21b",
    "nonce": "b3b2c080daac4f15a5bb9893c8c428fe"
  }
}
2020-07-08 16:55:12.511 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:55:12.511 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:55:12.512 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:55:12.513 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:55:12.523 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:55:12.524 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:55:12.530 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ck5w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****EOIQ"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000001",
  "TimeStamp": "2020-07-08T06:55:12Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:55:12.534 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "5ec9797352c24391a5de06c571a2c21b",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:55:13.556 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:55:13.559 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:13.561 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:13.563 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:55:13.565 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:55:13.569 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:55:13.571 +10:00 [DBG] Start discovery request
2020-07-08 16:55:13.575 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:55:13.576 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:13.579 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:13.582 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:55:13.583 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:55:13.585 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:55:13.586 +10:00 [DBG] Start discovery request
2020-07-08 16:55:13.604 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:55:13.606 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:55:13.609 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:55:13.610 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:55:13.611 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:13.613 +10:00 [DBG] Rendering check session result
2020-07-08 16:55:13.617 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:13.620 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:55:13.621 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:55:13.622 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:55:13.625 +10:00 [DBG] Start key discovery request
2020-07-08 16:55:13.661 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:55:13.663 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:13.666 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:13.669 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:55:13.670 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:55:13.671 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:55:13.675 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:55:13.677 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:55:13.678 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:55:13.680 +10:00 [DBG] Start userinfo request
2020-07-08 16:55:13.680 +10:00 [DBG] Bearer token found in header
2020-07-08 16:55:13.684 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:55:13.685 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:55:13.689 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:55:13.691 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191312,
    "exp": 1594191492,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:55:13.693 +10:00 [DBG] Creating userinfo response
2020-07-08 16:55:13.696 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:55:13.698 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:55:13.699 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:55:13.700 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:55:13.706 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:55:13.708 +10:00 [DBG] End userinfo request
2020-07-08 16:56:44.570 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:44.572 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:44.575 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:44.576 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:44.577 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:44.579 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:44.584 +10:00 [DBG] Start discovery request
2020-07-08 16:56:44.588 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:44.589 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:44.591 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:44.592 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:44.593 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:44.599 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:44.603 +10:00 [DBG] Start discovery request
2020-07-08 16:56:44.611 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:56:44.612 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:56:44.616 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:56:44.619 +10:00 [DBG] Start authorize request
2020-07-08 16:56:44.622 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:56:44.623 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:56:44.624 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:56:44.626 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:56:44.628 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:56:44.630 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "965830a2c9da4663951d33348d7dd76f",
  "Nonce": "b83eebdef8a74234a2891b8830ae5cca",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "965830a2c9da4663951d33348d7dd76f",
    "nonce": "b83eebdef8a74234a2891b8830ae5cca"
  }
}
2020-07-08 16:56:44.631 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:56:44.637 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:56:44.638 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:56:44.641 +10:00 [DBG] Rendering check session result
2020-07-08 16:56:44.641 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:56:44.643 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:56:44.644 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:56:44.655 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:56:44.657 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:56:44.662 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rpDA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****DPSA"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000003",
  "TimeStamp": "2020-07-08T06:56:44Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:56:44.666 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "965830a2c9da4663951d33348d7dd76f",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:56:45.221 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:45.224 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:45.226 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:45.227 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:45.229 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:45.231 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:45.236 +10:00 [DBG] Start discovery request
2020-07-08 16:56:45.240 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:45.241 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:45.243 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:45.244 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:45.249 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:45.251 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:45.252 +10:00 [DBG] Start discovery request
2020-07-08 16:56:45.285 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:56:45.287 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:56:45.290 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:56:45.292 +10:00 [DBG] Rendering check session result
2020-07-08 16:56:45.292 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:56:45.294 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:45.296 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:45.300 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:56:45.302 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:56:45.304 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:56:45.305 +10:00 [DBG] Start key discovery request
2020-07-08 16:56:45.345 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:56:45.349 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:45.351 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:45.354 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:56:45.355 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:45.358 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:45.360 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:56:45.362 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:56:45.363 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:56:45.364 +10:00 [DBG] Start userinfo request
2020-07-08 16:56:45.366 +10:00 [DBG] Bearer token found in header
2020-07-08 16:56:45.370 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:56:45.372 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:56:45.375 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:56:45.376 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191404,
    "exp": 1594191584,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:56:45.379 +10:00 [DBG] Creating userinfo response
2020-07-08 16:56:45.379 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:56:45.385 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:56:45.386 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:56:45.388 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:56:45.393 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:56:45.394 +10:00 [DBG] End userinfo request
2020-07-08 16:56:59.398 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:59.400 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:59.402 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:59.403 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:59.405 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:59.406 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:59.407 +10:00 [DBG] Start discovery request
2020-07-08 16:56:59.416 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:59.417 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:59.423 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:59.424 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:59.425 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:59.426 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:59.427 +10:00 [DBG] Start discovery request
2020-07-08 16:56:59.483 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:56:59.485 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:56:59.488 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:56:59.489 +10:00 [DBG] Start authorize request
2020-07-08 16:56:59.490 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:56:59.491 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:56:59.492 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:56:59.493 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:56:59.497 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1da19640238d46fdafe8ee095c64db90",
  "Nonce": "120f5f994a2349db8e594d04d6c783c3",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1da19640238d46fdafe8ee095c64db90",
    "nonce": "120f5f994a2349db8e594d04d6c783c3"
  }
}
2020-07-08 16:56:59.500 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:56:59.502 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:56:59.503 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:56:59.503 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:56:59.506 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:56:59.512 +10:00 [DBG] Rendering check session result
2020-07-08 16:56:59.513 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:56:59.514 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:56:59.524 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:56:59.525 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:56:59.531 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uXkw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****szjw"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000005",
  "TimeStamp": "2020-07-08T06:56:59Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:56:59.536 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "1da19640238d46fdafe8ee095c64db90",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:56:59.958 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:59.959 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:59.963 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:59.964 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:59.965 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:59.966 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:59.968 +10:00 [DBG] Start discovery request
2020-07-08 16:56:59.973 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:56:59.974 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:56:59.975 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:56:59.976 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:56:59.977 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:56:59.978 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:56:59.983 +10:00 [DBG] Start discovery request
2020-07-08 16:57:00.085 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:57:00.085 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:57:00.088 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:57:00.090 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:57:00.092 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:57:00.093 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:57:00.095 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:57:00.100 +10:00 [DBG] Rendering check session result
2020-07-08 16:57:00.101 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:57:00.103 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:57:00.104 +10:00 [DBG] Start key discovery request
2020-07-08 16:57:00.142 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:57:00.144 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:57:00.147 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:57:00.171 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:57:00.173 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:57:00.176 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:57:00.176 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:57:00.177 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:57:00.178 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:57:00.179 +10:00 [DBG] Start userinfo request
2020-07-08 16:57:00.180 +10:00 [DBG] Bearer token found in header
2020-07-08 16:57:00.183 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:57:00.184 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:57:00.188 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:57:00.189 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191419,
    "exp": 1594191599,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:57:00.190 +10:00 [DBG] Creating userinfo response
2020-07-08 16:57:00.191 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:57:00.192 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:57:00.195 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:57:00.196 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:57:00.199 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:57:00.200 +10:00 [DBG] End userinfo request
2020-07-08 16:58:30.480 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:30.483 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:30.486 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:30.487 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:30.488 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:30.489 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:30.492 +10:00 [DBG] Start discovery request
2020-07-08 16:58:30.498 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:30.499 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:30.500 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:30.501 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:30.507 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:30.508 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:30.510 +10:00 [DBG] Start discovery request
2020-07-08 16:58:30.552 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:58:30.553 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:58:30.554 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:58:30.557 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:58:30.558 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:58:30.560 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:58:30.561 +10:00 [DBG] Start authorize request
2020-07-08 16:58:30.563 +10:00 [DBG] Rendering check session result
2020-07-08 16:58:30.566 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:58:30.568 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:58:30.569 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:30.570 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:58:30.572 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "eb9d833106a14be9bc4dae762b7d1b39",
  "Nonce": "405a28d4481a42bd9baa5a86b3aedd87",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "eb9d833106a14be9bc4dae762b7d1b39",
    "nonce": "405a28d4481a42bd9baa5a86b3aedd87"
  }
}
2020-07-08 16:58:30.581 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:58:30.581 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:58:30.582 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:58:30.583 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:58:30.593 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:58:30.594 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:58:30.599 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TRIA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vpCA"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000007",
  "TimeStamp": "2020-07-08T06:58:30Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:58:30.603 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "eb9d833106a14be9bc4dae762b7d1b39",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:58:30.993 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:30.994 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:30.998 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:31.000 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:31.001 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:31.002 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:31.007 +10:00 [DBG] Start discovery request
2020-07-08 16:58:31.010 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:31.012 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:31.013 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:31.016 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:31.019 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:31.021 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:31.022 +10:00 [DBG] Start discovery request
2020-07-08 16:58:31.052 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:58:31.054 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:58:31.055 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:31.057 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:58:31.059 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:31.060 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:58:31.060 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:58:31.061 +10:00 [DBG] Rendering check session result
2020-07-08 16:58:31.063 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:58:31.068 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:58:31.070 +10:00 [DBG] Start key discovery request
2020-07-08 16:58:31.105 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:58:31.107 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:31.110 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:31.113 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:58:31.115 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:31.118 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:31.121 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:58:31.122 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:58:31.124 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:58:31.126 +10:00 [DBG] Start userinfo request
2020-07-08 16:58:31.129 +10:00 [DBG] Bearer token found in header
2020-07-08 16:58:31.133 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:31.134 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:31.139 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:58:31.141 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191510,
    "exp": 1594191690,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:58:31.144 +10:00 [DBG] Creating userinfo response
2020-07-08 16:58:31.145 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:31.147 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:31.151 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:58:31.152 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:31.158 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:58:31.160 +10:00 [DBG] End userinfo request
2020-07-08 16:58:52.758 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:52.760 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:52.763 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:52.764 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:52.765 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:52.767 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:52.768 +10:00 [DBG] Start discovery request
2020-07-08 16:58:52.776 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:52.777 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:52.778 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:52.779 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:52.781 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:52.784 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:52.786 +10:00 [DBG] Start discovery request
2020-07-08 16:58:52.817 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 16:58:52.819 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:58:52.820 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 16:58:52.823 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:58:52.824 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 16:58:52.826 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:58:52.827 +10:00 [DBG] Start authorize request
2020-07-08 16:58:52.831 +10:00 [DBG] Rendering check session result
2020-07-08 16:58:52.832 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:58:52.834 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 16:58:52.836 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:52.838 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 16:58:52.842 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "eea443eba6e344dc86b8300d49351152",
  "Nonce": "41c15a758d3b4988b9acaddcafc957f2",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "eea443eba6e344dc86b8300d49351152",
    "nonce": "41c15a758d3b4988b9acaddcafc957f2"
  }
}
2020-07-08 16:58:52.848 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 16:58:52.848 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 16:58:52.849 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 16:58:52.853 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 16:58:52.864 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 16:58:52.865 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 16:58:52.871 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****YRKw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****P6Rg"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000009",
  "TimeStamp": "2020-07-08T06:58:52Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 16:58:52.876 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "eea443eba6e344dc86b8300d49351152",
  "Scope": "openid profile email restapi"
}
2020-07-08 16:58:53.326 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:53.328 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:53.331 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:53.332 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:53.334 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:53.335 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:53.339 +10:00 [DBG] Start discovery request
2020-07-08 16:58:53.343 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 16:58:53.344 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:53.345 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:53.346 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 16:58:53.351 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 16:58:53.353 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 16:58:53.355 +10:00 [DBG] Start discovery request
2020-07-08 16:58:53.382 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 16:58:53.382 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 16:58:53.385 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:53.388 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 16:58:53.389 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:53.391 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 16:58:53.392 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 16:58:53.396 +10:00 [DBG] Rendering check session result
2020-07-08 16:58:53.398 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 16:58:53.401 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 16:58:53.402 +10:00 [DBG] Start key discovery request
2020-07-08 16:58:53.437 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:58:53.442 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:53.444 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:53.447 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 16:58:53.450 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 16:58:53.452 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 16:58:53.454 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 16:58:53.456 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 16:58:53.457 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 16:58:53.462 +10:00 [DBG] Start userinfo request
2020-07-08 16:58:53.463 +10:00 [DBG] Bearer token found in header
2020-07-08 16:58:53.467 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:53.469 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 16:58:53.475 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 16:58:53.476 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191532,
    "exp": 1594191712,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 16:58:53.478 +10:00 [DBG] Creating userinfo response
2020-07-08 16:58:53.479 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:53.480 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:53.484 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 16:58:53.485 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 16:58:53.490 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 16:58:53.491 +10:00 [DBG] End userinfo request
2020-07-08 17:00:25.127 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:25.130 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.133 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.134 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:25.135 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:25.136 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:25.137 +10:00 [DBG] Start discovery request
2020-07-08 17:00:25.140 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:25.142 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.144 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.145 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:25.146 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:25.147 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:25.149 +10:00 [DBG] Start discovery request
2020-07-08 17:00:25.163 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:00:25.166 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:00:25.169 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:00:25.170 +10:00 [DBG] Start authorize request
2020-07-08 17:00:25.171 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:25.172 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:00:25.173 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:25.173 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:00:25.177 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:00:25.178 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:00:25.179 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "fd5f71f327204c039f6ce44e70cc9443",
  "Nonce": "544f890a750e4a1ea5374d3d305bb093",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "fd5f71f327204c039f6ce44e70cc9443",
    "nonce": "544f890a750e4a1ea5374d3d305bb093"
  }
}
2020-07-08 17:00:25.180 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:00:25.185 +10:00 [DBG] Rendering check session result
2020-07-08 17:00:25.186 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:00:25.188 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:00:25.189 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:00:25.190 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:25.198 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:00:25.199 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:00:25.204 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aYFA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Ztxg"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000000B",
  "TimeStamp": "2020-07-08T07:00:25Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:00:25.209 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "fd5f71f327204c039f6ce44e70cc9443",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:00:25.534 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:25.535 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.536 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.537 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:25.537 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:25.538 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:25.538 +10:00 [DBG] Start discovery request
2020-07-08 17:00:25.545 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:25.548 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.548 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.549 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:25.549 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:25.550 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:25.550 +10:00 [DBG] Start discovery request
2020-07-08 17:00:25.603 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:00:25.605 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:00:25.607 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:00:25.608 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:00:25.609 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.611 +10:00 [DBG] Rendering check session result
2020-07-08 17:00:25.612 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.615 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:00:25.620 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:00:25.621 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:00:25.622 +10:00 [DBG] Start key discovery request
2020-07-08 17:00:25.657 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:25.659 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.661 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.664 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:25.665 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:25.666 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:25.670 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:00:25.672 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:00:25.673 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:00:25.675 +10:00 [DBG] Start userinfo request
2020-07-08 17:00:25.676 +10:00 [DBG] Bearer token found in header
2020-07-08 17:00:25.680 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:25.681 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:25.685 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:00:25.686 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191625,
    "exp": 1594191805,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:00:25.688 +10:00 [DBG] Creating userinfo response
2020-07-08 17:00:25.691 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:25.694 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:25.695 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:00:25.697 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:25.703 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:00:25.704 +10:00 [DBG] End userinfo request
2020-07-08 17:00:31.794 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:31.797 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:31.800 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:31.801 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:31.803 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:31.812 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:31.815 +10:00 [DBG] Start discovery request
2020-07-08 17:00:31.819 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:31.820 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:31.823 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:31.826 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:31.828 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:31.829 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:31.830 +10:00 [DBG] Start discovery request
2020-07-08 17:00:31.848 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:00:31.853 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:00:31.855 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:00:31.856 +10:00 [DBG] Start authorize request
2020-07-08 17:00:31.857 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:31.858 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:00:31.859 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:31.863 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:00:31.866 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ab0ca2bda37544e2b2c41495531b88d1",
  "Nonce": "2f345b1f9e2f46d08191260f06c2c73a",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ab0ca2bda37544e2b2c41495531b88d1",
    "nonce": "2f345b1f9e2f46d08191260f06c2c73a"
  }
}
2020-07-08 17:00:31.872 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:00:31.873 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:00:31.874 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:00:31.875 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:31.890 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:00:31.891 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:00:31.891 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:00:31.893 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:00:31.899 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:00:31.900 +10:00 [DBG] Rendering check session result
2020-07-08 17:00:31.902 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****W63g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****5nDQ"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000000D",
  "TimeStamp": "2020-07-08T07:00:31Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:00:31.907 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "ab0ca2bda37544e2b2c41495531b88d1",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:00:32.254 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:32.256 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:32.258 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:32.259 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:32.261 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:32.262 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:32.263 +10:00 [DBG] Start discovery request
2020-07-08 17:00:32.274 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:32.275 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:32.282 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:32.283 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:32.285 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:32.288 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:32.289 +10:00 [DBG] Start discovery request
2020-07-08 17:00:32.307 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:00:32.308 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:00:32.309 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:00:32.312 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:32.314 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:00:32.315 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:32.316 +10:00 [DBG] Rendering check session result
2020-07-08 17:00:32.317 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:00:32.322 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:00:32.323 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:00:32.324 +10:00 [DBG] Start key discovery request
2020-07-08 17:00:32.347 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:32.350 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:32.353 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:32.356 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:32.357 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:32.362 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:32.362 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:00:32.364 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:00:32.364 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:00:32.366 +10:00 [DBG] Start userinfo request
2020-07-08 17:00:32.366 +10:00 [DBG] Bearer token found in header
2020-07-08 17:00:32.370 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:32.371 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:32.374 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:00:32.375 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191631,
    "exp": 1594191811,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:00:32.378 +10:00 [DBG] Creating userinfo response
2020-07-08 17:00:32.378 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:32.382 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:32.383 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:00:32.384 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:32.389 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:00:32.389 +10:00 [DBG] End userinfo request
2020-07-08 17:00:57.149 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:57.152 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:57.156 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:57.157 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:57.158 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:57.158 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:57.159 +10:00 [DBG] Start discovery request
2020-07-08 17:00:57.177 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:00:57.178 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:00:57.180 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:00:57.183 +10:00 [DBG] Start authorize request
2020-07-08 17:00:57.184 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:57.186 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:00:57.186 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:57.189 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:00:57.190 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "db54a480f4114c7b9418cb951350cde3",
  "Nonce": "65defaf2d4924421a4e2ba15b10e7425",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "db54a480f4114c7b9418cb951350cde3",
    "nonce": "65defaf2d4924421a4e2ba15b10e7425"
  }
}
2020-07-08 17:00:57.194 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:00:57.195 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:00:57.196 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:00:57.197 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:00:57.205 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:00:57.206 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:00:57.213 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****scNw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****1HFw"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000000F",
  "TimeStamp": "2020-07-08T07:00:57Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:00:57.214 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "db54a480f4114c7b9418cb951350cde3",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:00:57.448 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:00:57.450 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:57.453 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:57.454 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:00:57.455 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:00:57.456 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:00:57.463 +10:00 [DBG] Start discovery request
2020-07-08 17:00:57.475 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:00:57.476 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:57.480 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:57.482 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:00:57.485 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:00:57.487 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:00:57.489 +10:00 [DBG] Start key discovery request
2020-07-08 17:00:57.508 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:57.509 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:57.512 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:57.514 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:00:57.515 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:00:57.516 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:00:57.517 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:00:57.518 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:00:57.521 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:00:57.522 +10:00 [DBG] Start userinfo request
2020-07-08 17:00:57.522 +10:00 [DBG] Bearer token found in header
2020-07-08 17:00:57.524 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:57.525 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:00:57.528 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:00:57.529 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191657,
    "exp": 1594191837,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:00:57.533 +10:00 [DBG] Creating userinfo response
2020-07-08 17:00:57.533 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:57.534 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:57.535 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:00:57.536 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:00:57.539 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:00:57.542 +10:00 [DBG] End userinfo request
2020-07-08 17:00:57.556 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:00:57.558 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:00:57.560 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:00:57.564 +10:00 [DBG] Rendering check session result
2020-07-08 17:02:57.567 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:02:57.569 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:02:57.572 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:02:57.573 +10:00 [DBG] Start authorize request
2020-07-08 17:02:57.574 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:02:57.575 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:02:57.576 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:02:57.577 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:02:57.580 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "a7a132ba71934000ad427adef4b0932a",
  "Nonce": "7157bcd31381406da5847be05c22e886",
  "PromptMode": "none",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "a7a132ba71934000ad427adef4b0932a",
    "nonce": "7157bcd31381406da5847be05c22e886",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTE2NTcsImV4cCI6MTU5NDE5MTk1NywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2NWRlZmFmMmQ0OTI0NDIxYTRlMmJhMTViMTBlNzQyNSIsImlhdCI6MTU5NDE5MTY1NywiYXRfaGFzaCI6Imhyd0tkSVhiay1WcldrbFcyRkNMMHciLCJzaWQiOiJmMDhiNGYzMjdlYWRkYjNmMmMzODcyYzY4NjE4ZDc5MiIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDE5MDkwNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.LkK5bGfXRygaw90CJruUm9bDF_T4FLJWEXELgUDqM6RG-g-1vWHtvkB9rwK-2a0JrYbIp1P8eObScGDnbGW80Ajk-dzzxFOKvjMY6im6vfe-lzG60rwwAnX5iTKwIcdsDPYOllMOc9lET68w57UhH0juRZMen5FkCsbSeK7HAZ1cSmOBGSjaYJy0Jx9VqYwkAPkSRkB4fXb9XPFe-mnn1MYkBVu5gXh9IB2Z-LpxjEtZvzC5MqCNN2CFVErRgapJ3qAGU3y92XkmS2ZyzEc_F2zd10mFARngJBwEv6B7DNsAHgMUvtuHtC5mM0FC0df06hl3GVYvmTTf9A-Y_vscNw"
  }
}
2020-07-08 17:02:57.588 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:02:57.590 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:02:57.590 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:02:57.591 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:02:57.597 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:02:57.599 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:02:57.606 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zBcg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Xa8A"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000011",
  "TimeStamp": "2020-07-08T07:02:57Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:02:57.609 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "a7a132ba71934000ad427adef4b0932a",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:02:58.161 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:02:58.163 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:02:58.167 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:02:58.168 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:02:58.169 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:02:58.171 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:02:58.172 +10:00 [DBG] Start discovery request
2020-07-08 17:02:58.202 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:02:58.204 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:02:58.207 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:02:58.209 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:02:58.210 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:02:58.211 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:02:58.212 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:02:58.216 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:02:58.217 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:02:58.218 +10:00 [DBG] Start userinfo request
2020-07-08 17:02:58.219 +10:00 [DBG] Bearer token found in header
2020-07-08 17:02:58.221 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:02:58.223 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:02:58.228 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:02:58.229 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191777,
    "exp": 1594191957,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:02:58.233 +10:00 [DBG] Creating userinfo response
2020-07-08 17:02:58.233 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:02:58.238 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:02:58.239 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:02:58.241 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:02:58.246 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:02:58.247 +10:00 [DBG] End userinfo request
2020-07-08 17:03:16.881 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:16.883 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:16.886 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:16.887 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:16.890 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:16.894 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:16.898 +10:00 [DBG] Start discovery request
2020-07-08 17:03:16.906 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:16.908 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:16.910 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:16.911 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:16.913 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:16.917 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:16.918 +10:00 [DBG] Start discovery request
2020-07-08 17:03:16.999 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:03:17.003 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:17.006 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:03:17.009 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:17.010 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:17.012 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:17.018 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:03:17.020 +10:00 [DBG] Start authorize request
2020-07-08 17:03:17.021 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:17.023 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:03:17.024 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:17.029 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:03:17.030 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "d94a26641a3341fb90514571b8d12c71",
  "Nonce": "23eff80360384374901228874bc4f5b9",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "d94a26641a3341fb90514571b8d12c71",
    "nonce": "23eff80360384374901228874bc4f5b9"
  }
}
2020-07-08 17:03:17.038 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:03:17.039 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:03:17.040 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:03:17.041 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:17.053 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:03:17.057 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:03:17.069 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****xy4w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****o9CQ"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000012",
  "TimeStamp": "2020-07-08T07:03:17Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:03:17.074 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "d94a26641a3341fb90514571b8d12c71",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:03:17.892 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:17.894 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:17.897 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:17.899 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:17.901 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:17.903 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:17.907 +10:00 [DBG] Start discovery request
2020-07-08 17:03:17.913 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:17.914 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:17.918 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:17.919 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:17.921 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:17.924 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:17.928 +10:00 [DBG] Start discovery request
2020-07-08 17:03:17.975 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:03:17.976 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:17.977 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:17.980 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:17.981 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:17.982 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:17.984 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:17.990 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:03:17.991 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:03:17.993 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:03:17.994 +10:00 [DBG] Start key discovery request
2020-07-08 17:03:18.048 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:18.053 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:18.055 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:18.058 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:18.062 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:18.064 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:18.066 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:03:18.068 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:03:18.069 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:03:18.073 +10:00 [DBG] Start userinfo request
2020-07-08 17:03:18.074 +10:00 [DBG] Bearer token found in header
2020-07-08 17:03:18.077 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:18.079 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:18.083 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:03:18.084 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191797,
    "exp": 1594191977,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:03:18.089 +10:00 [DBG] Creating userinfo response
2020-07-08 17:03:18.089 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:18.091 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:18.096 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:03:18.098 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:18.103 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:03:18.109 +10:00 [DBG] End userinfo request
2020-07-08 17:03:18.190 +10:00 [DBG] CORS request made for path: /api/posts from origin: http://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 17:03:19.544 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:19.546 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:19.549 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:19.550 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:19.551 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:19.553 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:19.557 +10:00 [DBG] Start discovery request
2020-07-08 17:03:19.569 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:19.572 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:19.574 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:19.575 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:19.578 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:19.579 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:19.581 +10:00 [DBG] Start discovery request
2020-07-08 17:03:19.641 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:03:19.645 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:03:19.646 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:03:19.647 +10:00 [DBG] Start authorize request
2020-07-08 17:03:19.648 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:19.649 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:03:19.650 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:19.654 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:03:19.656 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f3fbe737223249cd84969a3bf1e2b997",
  "Nonce": "23e2572c56eb4a6c80c17a7bfa8965c4",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f3fbe737223249cd84969a3bf1e2b997",
    "nonce": "23e2572c56eb4a6c80c17a7bfa8965c4"
  }
}
2020-07-08 17:03:19.663 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:19.663 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:03:19.666 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:19.666 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:03:19.668 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:19.668 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:03:19.669 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:19.670 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:19.680 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:03:19.681 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:03:19.687 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****6Ktg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****gzLw"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000014",
  "TimeStamp": "2020-07-08T07:03:19Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:03:19.692 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "f3fbe737223249cd84969a3bf1e2b997",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:03:20.063 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:20.065 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:20.068 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:20.069 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:20.070 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:20.071 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:20.072 +10:00 [DBG] Start discovery request
2020-07-08 17:03:20.085 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:20.087 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:20.090 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:20.090 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:20.091 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:20.092 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:20.093 +10:00 [DBG] Start discovery request
2020-07-08 17:03:20.140 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:03:20.144 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:20.144 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:20.145 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:20.146 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:20.147 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:03:20.149 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:20.150 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:03:20.154 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:20.156 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:03:20.158 +10:00 [DBG] Start key discovery request
2020-07-08 17:03:20.228 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:20.231 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:20.234 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:20.235 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:03:20.237 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:03:20.239 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:03:20.258 +10:00 [DBG] Start userinfo request
2020-07-08 17:03:20.259 +10:00 [DBG] Bearer token found in header
2020-07-08 17:03:20.264 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:20.266 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:20.270 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:03:20.271 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191799,
    "exp": 1594191979,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:03:20.277 +10:00 [DBG] Creating userinfo response
2020-07-08 17:03:20.277 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:20.279 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:20.281 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:03:20.285 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:20.291 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:03:20.292 +10:00 [DBG] End userinfo request
2020-07-08 17:03:20.373 +10:00 [DBG] CORS request made for path: //api/posts from origin: http://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 17:03:22.349 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:22.350 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.353 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.354 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:22.355 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:22.356 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:22.358 +10:00 [DBG] Start discovery request
2020-07-08 17:03:22.367 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:22.368 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.369 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.370 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:22.372 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:22.375 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:22.377 +10:00 [DBG] Start discovery request
2020-07-08 17:03:22.436 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:03:22.437 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:22.438 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:03:22.441 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:22.442 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:03:22.443 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:22.445 +10:00 [DBG] Start authorize request
2020-07-08 17:03:22.446 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:22.449 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:22.451 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:03:22.452 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:22.455 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:03:22.456 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "af74e7f33768467f9733b7fd43f746ab",
  "Nonce": "5cb66e8fe6564e478dd2c0ea80f83898",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "af74e7f33768467f9733b7fd43f746ab",
    "nonce": "5cb66e8fe6564e478dd2c0ea80f83898"
  }
}
2020-07-08 17:03:22.464 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:03:22.464 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:03:22.465 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:03:22.466 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:22.476 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:03:22.478 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:03:22.484 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zEhw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****VwUA"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000016",
  "TimeStamp": "2020-07-08T07:03:22Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:03:22.489 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "af74e7f33768467f9733b7fd43f746ab",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:03:22.802 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:22.803 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.807 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.808 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:22.809 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:22.810 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:22.811 +10:00 [DBG] Start discovery request
2020-07-08 17:03:22.827 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:22.828 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.830 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.830 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:22.832 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:22.837 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:22.838 +10:00 [DBG] Start discovery request
2020-07-08 17:03:22.888 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:03:22.890 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:22.891 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.894 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:22.895 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.896 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:22.897 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:03:22.898 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:22.903 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:03:22.905 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:03:22.907 +10:00 [DBG] Start key discovery request
2020-07-08 17:03:22.962 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:22.965 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:22.968 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:22.969 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:03:22.971 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:03:22.972 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:03:22.978 +10:00 [DBG] Start userinfo request
2020-07-08 17:03:22.978 +10:00 [DBG] Bearer token found in header
2020-07-08 17:03:22.983 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:22.984 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:22.993 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:03:22.995 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191802,
    "exp": 1594191982,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:03:23.002 +10:00 [DBG] Creating userinfo response
2020-07-08 17:03:23.003 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:23.006 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:23.007 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:03:23.013 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:23.018 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:03:23.019 +10:00 [DBG] End userinfo request
2020-07-08 17:03:23.109 +10:00 [DBG] CORS request made for path: /api/posts from origin: http://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 17:03:27.169 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:27.170 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.173 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.174 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:27.175 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:27.176 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:27.178 +10:00 [DBG] Start discovery request
2020-07-08 17:03:27.189 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:27.190 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.194 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.195 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:27.196 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:27.198 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:27.199 +10:00 [DBG] Start discovery request
2020-07-08 17:03:27.265 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:03:27.267 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:03:27.270 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:03:27.271 +10:00 [DBG] Start authorize request
2020-07-08 17:03:27.273 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:27.274 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:03:27.275 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:27.280 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:03:27.281 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "46e84a7adb014881a04987cccce76989",
  "Nonce": "d56c35a307ae4b42ba33245c2f3b3a40",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "46e84a7adb014881a04987cccce76989",
    "nonce": "d56c35a307ae4b42ba33245c2f3b3a40"
  }
}
2020-07-08 17:03:27.289 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:03:27.290 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:27.290 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:03:27.291 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:27.292 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:03:27.293 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:27.294 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:27.295 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:27.305 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:03:27.306 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:03:27.312 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****BPvw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vHNQ"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:00000018",
  "TimeStamp": "2020-07-08T07:03:27Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:03:27.317 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "46e84a7adb014881a04987cccce76989",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:03:27.637 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:27.640 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.642 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.643 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:27.645 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:27.645 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:27.647 +10:00 [DBG] Start discovery request
2020-07-08 17:03:27.656 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:27.657 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.659 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.660 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:27.665 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:27.666 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:27.668 +10:00 [DBG] Start discovery request
2020-07-08 17:03:27.722 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:03:27.725 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:27.725 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.727 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:27.729 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.730 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:27.731 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:27.732 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:03:27.738 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:03:27.740 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:03:27.742 +10:00 [DBG] Start key discovery request
2020-07-08 17:03:27.845 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:27.851 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.852 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.855 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:27.856 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:27.859 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:27.859 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:03:27.860 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:03:27.861 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:03:27.862 +10:00 [DBG] Start userinfo request
2020-07-08 17:03:27.863 +10:00 [DBG] Bearer token found in header
2020-07-08 17:03:27.868 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:27.869 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:27.874 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:03:27.878 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191807,
    "exp": 1594191987,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:03:27.883 +10:00 [DBG] Creating userinfo response
2020-07-08 17:03:27.884 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:27.891 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:27.893 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:03:27.895 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:27.901 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:03:27.902 +10:00 [DBG] End userinfo request
2020-07-08 17:03:31.799 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:31.801 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:31.804 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:31.805 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:31.806 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:31.810 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:31.812 +10:00 [DBG] Start discovery request
2020-07-08 17:03:31.818 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:31.820 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:31.826 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:31.827 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:31.828 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:31.829 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:31.830 +10:00 [DBG] Start discovery request
2020-07-08 17:03:31.876 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:03:31.878 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:03:31.881 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:03:31.882 +10:00 [DBG] Start authorize request
2020-07-08 17:03:31.883 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:31.885 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:03:31.885 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:31.887 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:03:31.892 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b201f2992b1348718c15a3b7d4763187",
  "Nonce": "ffeabdb64ef944c48af7149ba435738c",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b201f2992b1348718c15a3b7d4763187",
    "nonce": "ffeabdb64ef944c48af7149ba435738c"
  }
}
2020-07-08 17:03:31.894 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:31.897 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:31.899 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:31.899 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:03:31.903 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:31.904 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:03:31.906 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:03:31.906 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:03:31.918 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:03:31.919 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:03:31.925 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****bHYQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Sh6Q"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000001A",
  "TimeStamp": "2020-07-08T07:03:31Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:03:31.929 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "b201f2992b1348718c15a3b7d4763187",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:03:32.245 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:32.247 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:32.250 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:32.251 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:32.252 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:32.253 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:32.255 +10:00 [DBG] Start discovery request
2020-07-08 17:03:32.264 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:03:32.267 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:32.272 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:32.273 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:03:32.275 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:03:32.276 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:03:32.277 +10:00 [DBG] Start discovery request
2020-07-08 17:03:32.323 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:03:32.325 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:03:32.334 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:32.334 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:03:32.337 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:32.339 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:03:32.340 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:03:32.341 +10:00 [DBG] Rendering check session result
2020-07-08 17:03:32.343 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:03:32.347 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:03:32.349 +10:00 [DBG] Start key discovery request
2020-07-08 17:03:32.429 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:03:32.432 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:03:32.436 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:03:32.436 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:03:32.438 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:03:32.439 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:03:32.444 +10:00 [DBG] Start userinfo request
2020-07-08 17:03:32.445 +10:00 [DBG] Bearer token found in header
2020-07-08 17:03:32.448 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:32.450 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:03:32.454 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:03:32.456 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191811,
    "exp": 1594191991,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:03:32.458 +10:00 [DBG] Creating userinfo response
2020-07-08 17:03:32.458 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:32.460 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:32.461 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:03:32.462 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:03:32.471 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:03:32.473 +10:00 [DBG] End userinfo request
2020-07-08 17:04:40.046 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:04:40.049 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.052 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.052 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:04:40.054 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:04:40.055 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:04:40.056 +10:00 [DBG] Start discovery request
2020-07-08 17:04:40.068 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:04:40.069 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.073 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.073 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:04:40.075 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:04:40.077 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:04:40.078 +10:00 [DBG] Start discovery request
2020-07-08 17:04:40.130 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:04:40.132 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:04:40.135 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:04:40.136 +10:00 [DBG] Start authorize request
2020-07-08 17:04:40.137 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:04:40.138 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:04:40.139 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:04:40.143 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:04:40.146 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c0a35bb5a91f49919b09cda06c6c5452",
  "Nonce": "f4c5704465b848a1a84a540a017ba7cc",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c0a35bb5a91f49919b09cda06c6c5452",
    "nonce": "f4c5704465b848a1a84a540a017ba7cc"
  }
}
2020-07-08 17:04:40.152 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:04:40.153 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:04:40.155 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:04:40.156 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:04:40.157 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:04:40.158 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:04:40.159 +10:00 [DBG] Rendering check session result
2020-07-08 17:04:40.160 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:04:40.175 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:04:40.178 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:04:40.184 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zXVA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****yAOg"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000001C",
  "TimeStamp": "2020-07-08T07:04:40Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:04:40.189 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "c0a35bb5a91f49919b09cda06c6c5452",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:04:40.524 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:04:40.528 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.531 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.533 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:04:40.535 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:04:40.538 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:04:40.543 +10:00 [DBG] Start discovery request
2020-07-08 17:04:40.549 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:04:40.550 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.553 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.554 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:04:40.555 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:04:40.556 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:04:40.557 +10:00 [DBG] Start discovery request
2020-07-08 17:04:40.616 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:04:40.619 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.621 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.622 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:04:40.624 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:04:40.625 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:04:40.627 +10:00 [DBG] Start key discovery request
2020-07-08 17:04:40.639 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:04:40.641 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:04:40.644 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:04:40.646 +10:00 [DBG] Rendering check session result
2020-07-08 17:04:40.714 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:04:40.717 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.721 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.724 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:04:40.727 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:04:40.730 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:04:40.731 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:04:40.732 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:04:40.733 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:04:40.735 +10:00 [DBG] Start userinfo request
2020-07-08 17:04:40.738 +10:00 [DBG] Bearer token found in header
2020-07-08 17:04:40.742 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:04:40.743 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:04:40.748 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:04:40.750 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594191880,
    "exp": 1594192060,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:04:40.754 +10:00 [DBG] Creating userinfo response
2020-07-08 17:04:40.755 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:04:40.757 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:04:40.761 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:04:40.763 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:04:40.768 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:04:40.772 +10:00 [DBG] End userinfo request
2020-07-08 17:06:12.748 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:06:12.752 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:06:12.753 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:06:12.754 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:06:12.755 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:06:12.757 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:06:12.759 +10:00 [DBG] Start discovery request
2020-07-08 17:06:12.765 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:06:12.766 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:06:12.767 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:06:12.768 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:06:12.769 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:06:12.771 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:06:12.776 +10:00 [DBG] Start discovery request
2020-07-08 17:06:12.811 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:06:12.813 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:06:12.816 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:06:12.817 +10:00 [DBG] Start authorize request
2020-07-08 17:06:12.818 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:06:12.819 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:06:12.820 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:06:12.824 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:06:12.826 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "cfbc14eb739c4ea1bdbf1eb5a94d7dc5",
  "Nonce": "3329d8ab37144c8e93cf060d09c103d0",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "cfbc14eb739c4ea1bdbf1eb5a94d7dc5",
    "nonce": "3329d8ab37144c8e93cf060d09c103d0"
  }
}
2020-07-08 17:06:12.831 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:06:12.832 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:06:12.833 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:06:12.836 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:06:12.845 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:06:12.847 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:06:12.853 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:06:12.855 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:06:12.855 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Rszg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RhUg"
    }
  ],
  "ActivityId": "0HM1309HP56RQ:0000001E",
  "TimeStamp": "2020-07-08T07:06:12Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:06:12.857 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:06:12.861 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "cfbc14eb739c4ea1bdbf1eb5a94d7dc5",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:06:12.863 +10:00 [DBG] Rendering check session result
2020-07-08 17:06:13.179 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:06:13.181 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:06:13.183 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:06:13.184 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:06:13.186 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:06:13.187 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:06:13.188 +10:00 [DBG] Start discovery request
2020-07-08 17:06:13.196 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:06:13.198 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:06:13.201 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:06:13.202 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:06:13.205 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:06:13.206 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:06:13.207 +10:00 [DBG] Start discovery request
2020-07-08 17:06:15.247 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:06:15.249 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:06:15.252 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:06:15.253 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:06:15.254 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:06:15.256 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:06:15.260 +10:00 [DBG] Start discovery request
2020-07-08 17:06:15.316 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:06:15.318 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:06:15.321 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:06:15.323 +10:00 [DBG] Rendering check session result
2020-07-08 17:07:12.692 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:07:12.694 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:12.697 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:12.699 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:07:12.700 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:07:12.701 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:07:12.702 +10:00 [DBG] Start discovery request
2020-07-08 17:07:12.725 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:07:12.727 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:07:12.730 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:07:12.732 +10:00 [DBG] Start authorize request
2020-07-08 17:07:12.733 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:07:12.734 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:07:12.737 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:12.740 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:07:12.741 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f682108f4f7c40948de8f7c609584b88",
  "Nonce": "ac64417a2a894f29b825a8a661233106",
  "SessionId": "f08b4f327eaddb3f2c3872c68618d792",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f682108f4f7c40948de8f7c609584b88",
    "nonce": "ac64417a2a894f29b825a8a661233106"
  }
}
2020-07-08 17:07:12.745 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:07:12.746 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:07:12.746 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:07:12.746 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:07:12.754 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-08 17:07:12.754 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:07:12.758 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****-JBg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****lELw"
    }
  ],
  "ActivityId": "0HM1309HP56RS:00000009",
  "TimeStamp": "2020-07-08T07:07:12Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:07:12.759 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "f682108f4f7c40948de8f7c609584b88",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:07:12.969 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:07:12.970 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:12.971 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:12.971 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:07:12.972 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:07:12.972 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:07:12.972 +10:00 [DBG] Start discovery request
2020-07-08 17:07:12.981 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:07:12.982 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:12.982 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:12.983 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:07:12.984 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:07:12.984 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:07:12.985 +10:00 [DBG] Start key discovery request
2020-07-08 17:07:13.005 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:07:13.006 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:13.007 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:13.008 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:07:13.009 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:13.009 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:13.010 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:07:13.010 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:07:13.011 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:07:13.011 +10:00 [DBG] Start userinfo request
2020-07-08 17:07:13.011 +10:00 [DBG] Bearer token found in header
2020-07-08 17:07:13.014 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:13.014 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:13.018 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:07:13.019 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594192032,
    "exp": 1594192212,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:07:13.021 +10:00 [DBG] Creating userinfo response
2020-07-08 17:07:13.021 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:13.021 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:13.022 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:07:13.022 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:13.024 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:07:13.025 +10:00 [DBG] End userinfo request
2020-07-08 17:07:13.038 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:07:13.040 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:07:13.040 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:07:13.041 +10:00 [DBG] Rendering check session result
2020-07-08 17:07:13.727 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:07:13.729 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:07:13.730 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:07:13.730 +10:00 [DBG] Start discovery request
2020-07-08 17:07:14.161 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:07:14.162 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:07:14.163 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:07:14.163 +10:00 [DBG] Start key discovery request
2020-07-08 17:07:31.927 +10:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-07-08 17:07:31.929 +10:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-07-08 17:07:31.930 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-07-08 17:07:31.931 +10:00 [DBG] Processing signout request for c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-08 17:07:31.931 +10:00 [DBG] Start end session request validation
2020-07-08 17:07:31.931 +10:00 [DBG] Start identity token validation
2020-07-08 17:07:31.932 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:31.932 +10:00 [DBG] Client found: blog-client / Blog Client
2020-07-08 17:07:31.937 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:07:31.937 +10:00 [DBG] Token validation success
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1594192032,
    "exp": 1594192332,
    "iss": "https://localhost:5001",
    "aud": "blog-client",
    "nonce": "ac64417a2a894f29b825a8a661233106",
    "iat": 1594192032,
    "at_hash": "Rv-njKTMSfvdXJsIP0YDMQ",
    "sid": "f08b4f327eaddb3f2c3872c68618d792",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594190906,
    "idp": "local",
    "amr": "pwd"
  }
}
2020-07-08 17:07:31.942 +10:00 [INF] End session request validation success
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "PostLogOutUri": "http://localhost:4200/",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTIwMzIsImV4cCI6MTU5NDE5MjMzMiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJhYzY0NDE3YTJhODk0ZjI5YjgyNWE4YTY2MTIzMzEwNiIsImlhdCI6MTU5NDE5MjAzMiwiYXRfaGFzaCI6IlJ2LW5qS1RNU2Z2ZFhKc0lQMFlETVEiLCJzaWQiOiJmMDhiNGYzMjdlYWRkYjNmMmMzODcyYzY4NjE4ZDc5MiIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDE5MDkwNiwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Jqi5PczQquMlEH7QaC_4YVLENJhGhU6Vty-xqPws11pRpREunl1NSZ5YHOVgH55kYWnWGl2ZuFnw2BY0YZNaq2pPmWR2wzsqD9dtOo07eY8wzth_-jbiPP1Tav58J6QsZlRX4Kq8IcOWl0j9xrP-vGQL-vuAfo1QZukPcv2Vj0TVP3ub0NrVWFc-2SxJIQNuL222SSNtn215Sl4zevEV91q44D0GFPC9qQVPcD3RVnqeVWMFV9umPM1iMHBzkek4LLJvwShlPU-49-_qWrob1k7FKERB0zLOM3EAIwWtUSdpfHhxqatX0wh8uTXqWiZQUF6t_UW6yYr_HoyvD1-JBg",
    "post_logout_redirect_uri": "http://localhost:4200/"
  }
}
2020-07-08 17:07:31.943 +10:00 [DBG] Success validating end session request from blog-client
2020-07-08 17:07:31.949 +10:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-07-08 17:07:31.951 +10:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-07-08 17:07:31.951 +10:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-07-08 17:07:31.952 +10:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "Alice Smith",
  "ActivityId": "0HM1309HP56RS:0000000C",
  "TimeStamp": "2020-07-08T07:07:31Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:07:32.024 +10:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-07-08 17:07:32.026 +10:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-07-08 17:07:32.027 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-07-08 17:07:32.027 +10:00 [DBG] Processing signout callback request
2020-07-08 17:07:32.028 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:32.028 +10:00 [DBG] No client front-channel logout URLs
2020-07-08 17:07:32.028 +10:00 [DBG] No client back-channel logout URLs
2020-07-08 17:07:32.029 +10:00 [INF] Successful signout callback.
2020-07-08 17:07:32.029 +10:00 [DBG] No client front-channel iframe urls
2020-07-08 17:07:32.029 +10:00 [DBG] No client back-channel iframe urls
2020-07-08 17:07:34.519 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:07:34.520 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:34.521 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:34.522 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:07:34.522 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:07:34.523 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:07:34.523 +10:00 [DBG] Start discovery request
2020-07-08 17:07:34.591 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:07:34.594 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:07:34.594 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:07:34.595 +10:00 [DBG] Start authorize request
2020-07-08 17:07:34.595 +10:00 [DBG] No user present in authorize request
2020-07-08 17:07:34.595 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:07:34.596 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:34.596 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:07:34.597 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "7b59645f921347c093e8e1170c9935b7",
  "Nonce": "4500dd022262428a8515669c89a9011a",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "7b59645f921347c093e8e1170c9935b7",
    "nonce": "4500dd022262428a8515669c89a9011a"
  }
}
2020-07-08 17:07:34.598 +10:00 [INF] Showing login: User is not authenticated
2020-07-08 17:07:34.643 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:07:34.643 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:34.644 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:07:34.645 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:49.387 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-08 17:07:49.406 +10:00 [DBG] Augmenting SignInContext
2020-07-08 17:07:49.406 +10:00 [DBG] Adding idp claim with value: local
2020-07-08 17:07:49.406 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-08 17:07:49.407 +10:00 [DBG] Adding auth_time claim with value: 1594192069
2020-07-08 17:07:49.407 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 17:07:49.409 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HM1309HP56RS:00000010",
  "TimeStamp": "2020-07-08T07:07:49Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:07:49.415 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-08 17:07:49.415 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-08 17:07:49.416 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-08 17:07:49.416 +10:00 [DBG] Start authorize callback request
2020-07-08 17:07:49.417 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:07:49.417 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:07:49.417 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:49.418 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:07:49.418 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "7b59645f921347c093e8e1170c9935b7",
  "Nonce": "4500dd022262428a8515669c89a9011a",
  "SessionId": "6bbfc2f519aba0f9ff338046e01a32d0",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "7b59645f921347c093e8e1170c9935b7",
    "nonce": "4500dd022262428a8515669c89a9011a"
  }
}
2020-07-08 17:07:49.421 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:07:49.422 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:07:49.423 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:07:49.425 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:07:49.430 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 17:07:49.430 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:07:49.434 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****q1tg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****66cQ"
    }
  ],
  "ActivityId": "0HM1309HP56RS:00000011",
  "TimeStamp": "2020-07-08T07:07:49Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:07:49.436 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "7b59645f921347c093e8e1170c9935b7",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:07:49.436 +10:00 [DBG] Augmenting SignInContext
2020-07-08 17:07:49.437 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-08 17:07:50.319 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:07:50.320 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:50.321 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:50.321 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:07:50.322 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:07:50.322 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:07:50.323 +10:00 [DBG] Start discovery request
2020-07-08 17:07:50.351 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-08 17:07:50.351 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:50.353 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:50.353 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-08 17:07:50.353 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-08 17:07:50.354 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-08 17:07:50.354 +10:00 [DBG] Start key discovery request
2020-07-08 17:07:50.408 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:07:50.409 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:50.410 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:50.412 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:07:50.413 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:07:50.413 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:07:50.414 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:07:50.415 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:07:50.416 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:07:50.416 +10:00 [DBG] Start userinfo request
2020-07-08 17:07:50.416 +10:00 [DBG] Bearer token found in header
2020-07-08 17:07:50.419 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:50.422 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:07:50.425 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:07:50.427 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594192069,
    "exp": 1594192249,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594192069,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:07:50.428 +10:00 [DBG] Creating userinfo response
2020-07-08 17:07:50.429 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:50.429 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:50.430 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:07:50.430 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:07:50.438 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:07:50.439 +10:00 [DBG] End userinfo request
2020-07-08 17:07:50.515 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-08 17:07:50.517 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-08 17:07:50.517 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-08 17:07:50.518 +10:00 [DBG] Rendering check session result
2020-07-08 17:09:50.760 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:09:50.761 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:09:50.761 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:09:50.762 +10:00 [DBG] Start authorize request
2020-07-08 17:09:50.762 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:09:50.763 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:09:50.763 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:09:50.763 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:09:50.764 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3b15abe909d44d1ca80d1f6519b3054f",
  "Nonce": "62c09218a9ab4ff19db9176d0a897de9",
  "PromptMode": "none",
  "SessionId": "6bbfc2f519aba0f9ff338046e01a32d0",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3b15abe909d44d1ca80d1f6519b3054f",
    "nonce": "62c09218a9ab4ff19db9176d0a897de9",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTIwNjksImV4cCI6MTU5NDE5MjM2OSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI0NTAwZGQwMjIyNjI0MjhhODUxNTY2OWM4OWE5MDExYSIsImlhdCI6MTU5NDE5MjA2OSwiYXRfaGFzaCI6Inh0Z3otNXhqZnhTNFUteEd3bkpQQWciLCJzaWQiOiI2YmJmYzJmNTE5YWJhMGY5ZmYzMzgwNDZlMDFhMzJkMCIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE5MjA2OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.RdGuBrYkSMPBTrMTfO9EUJxAAo5v4s1MKEN53ZFxQoZmzCw63lx_jp3J_5v2I3sMp6z65CnVGaSVRblwd3s-FLV0N7GNaNPx-UoGo2bDB7ckYdGz2pAv7qWKSYqxGZ4j9fVyBPKoWT0UAPOxCs7MniJatvpvR8ACeA7YzqTcZGBDhoMGj41b5wUCajxmSl8Ldh8Q8Xlp5mT0x4Lus8jkQ69izQTJq0JEF72bzJbjaW24Xis7ZVw9E0M6w1VfhW0TAPnHRI19XfuCDy7XvqjX6FPBQn6k1FbQSlUwBJMfaRPg8fvpoRzjkx80xX5NJgMSRQ7OS2JQg63A-VqReSq1tg"
  }
}
2020-07-08 17:09:50.769 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:09:50.769 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:09:50.769 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:09:50.772 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:09:50.777 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 17:09:50.778 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:09:50.781 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zwZg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****zxgg"
    }
  ],
  "ActivityId": "0HM1309HP56RS:00000013",
  "TimeStamp": "2020-07-08T07:09:50Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:09:50.784 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "3b15abe909d44d1ca80d1f6519b3054f",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:09:51.498 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:09:51.499 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:09:51.499 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:09:51.500 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:09:51.500 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:09:51.500 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:09:51.501 +10:00 [DBG] Start discovery request
2020-07-08 17:09:51.529 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:09:51.530 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:09:51.531 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:09:51.533 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:09:51.534 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:09:51.534 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:09:51.534 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:09:51.535 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:09:51.535 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:09:51.536 +10:00 [DBG] Start userinfo request
2020-07-08 17:09:51.536 +10:00 [DBG] Bearer token found in header
2020-07-08 17:09:51.538 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:09:51.541 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:09:51.543 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:09:51.544 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594192190,
    "exp": 1594192370,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594192069,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:09:51.544 +10:00 [DBG] Creating userinfo response
2020-07-08 17:09:51.545 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:09:51.545 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:09:51.545 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:09:51.545 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:09:51.548 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:09:51.548 +10:00 [DBG] End userinfo request
2020-07-08 17:11:51.590 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-08 17:11:51.591 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-08 17:11:51.592 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-08 17:11:51.592 +10:00 [DBG] Start authorize request
2020-07-08 17:11:51.592 +10:00 [DBG] User in authorize request: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:11:51.593 +10:00 [DBG] Start authorize request protocol validation
2020-07-08 17:11:51.594 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:11:51.595 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-08 17:11:51.595 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f91beeeae8394119ab30d974f5525415",
  "Nonce": "dd7189862320408198ca8d1add63cc7c",
  "PromptMode": "none",
  "SessionId": "6bbfc2f519aba0f9ff338046e01a32d0",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f91beeeae8394119ab30d974f5525415",
    "nonce": "dd7189862320408198ca8d1add63cc7c",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQxOTIxOTAsImV4cCI6MTU5NDE5MjQ5MCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2MmMwOTIxOGE5YWI0ZmYxOWRiOTE3NmQwYTg5N2RlOSIsImlhdCI6MTU5NDE5MjE5MCwiYXRfaGFzaCI6Inc1MWg1dmdoOEtYSkNsRHN4OXFadXciLCJzaWQiOiI2YmJmYzJmNTE5YWJhMGY5ZmYzMzgwNDZlMDFhMzJkMCIsInN1YiI6ImJlNjJiNTQ5LWI5N2EtNDQyNS05YzhmLTYxZjlmZDA5ZTNiZiIsImF1dGhfdGltZSI6MTU5NDE5MjA2OSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.rZIqysYAWOgndAdfBD4MAmKtek_CONvU2Sqw8Si7HE8Qb4HuJGOv1s_mwbJuY-gsAGQ9MUMeFt1_XrNJZRS1SzFP0S9UCZiAQjlYx9k3r6KaEm1DCe5IclwfMEOX2pN9w3qmtYgjKxn1p0_Ja_gOL82JTMThcr3QITHW3upcgmz5mIke8oG8dl6ccBbl_nB-jhyd_PlFy3AFjCSOYay0-eNNK6Bl1AH3Cl0_y_WKgODO9LnxQ9tGxu0XVY3XX15W3_w7zF8wTcbTa765rKI9vOMJvcD60QiHKUmHfOdly3UGxf38DO1ecLeXVxQLXUg8oNeUfVEzC-wT_y5i4PzwZg"
  }
}
2020-07-08 17:11:51.599 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-08 17:11:51.599 +10:00 [DBG] Creating Implicit Flow response.
2020-07-08 17:11:51.602 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-08 17:11:51.602 +10:00 [DBG] Getting claims for access token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf
2020-07-08 17:11:51.608 +10:00 [DBG] Getting claims for identity token for subject: be62b549-b97a-4425-9c8f-61f9fd09e3bf and client: blog-client
2020-07-08 17:11:51.609 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-08 17:11:51.614 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ESJA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ghaw"
    }
  ],
  "ActivityId": "0HM1309HP56RU:00000001",
  "TimeStamp": "2020-07-08T07:11:51Z",
  "ProcessId": 8952,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-08 17:11:51.615 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "f91beeeae8394119ab30d974f5525415",
  "Scope": "openid profile email restapi"
}
2020-07-08 17:11:52.301 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-08 17:11:52.303 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:11:52.304 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:11:52.304 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-08 17:11:52.305 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-08 17:11:52.306 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-08 17:11:52.306 +10:00 [DBG] Start discovery request
2020-07-08 17:11:52.339 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:11:52.341 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:11:52.342 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:11:52.346 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-08 17:11:52.346 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-08 17:11:52.347 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-08 17:11:52.347 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-08 17:11:52.348 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-08 17:11:52.348 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-08 17:11:52.349 +10:00 [DBG] Start userinfo request
2020-07-08 17:11:52.349 +10:00 [DBG] Bearer token found in header
2020-07-08 17:11:52.351 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:11:52.352 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-08 17:11:52.355 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-08 17:11:52.355 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594192311,
    "exp": 1594192491,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "be62b549-b97a-4425-9c8f-61f9fd09e3bf",
    "auth_time": 1594192069,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-08 17:11:52.356 +10:00 [DBG] Creating userinfo response
2020-07-08 17:11:52.356 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:11:52.357 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:11:52.357 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-08 17:11:52.358 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-08 17:11:52.363 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-08 17:11:52.365 +10:00 [DBG] End userinfo request
2020-07-15 17:12:25.160 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-15 17:12:25.300 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-15 17:12:25.308 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-15 17:12:25.309 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-15 17:12:25.309 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-15 17:12:25.310 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-15 17:14:54.945 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:14:54.995 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:14:54.999 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:14:55.300 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:14:55.546 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:14:55.550 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:14:55.620 +10:00 [DBG] Start discovery request
2020-07-15 17:14:55.891 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:14:55.906 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:14:55.908 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:14:55.918 +10:00 [DBG] Start authorize request
2020-07-15 17:14:55.951 +10:00 [DBG] No user present in authorize request
2020-07-15 17:14:55.971 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:14:55.996 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:14:56.068 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:14:56.110 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ac832ac25a0d4700be3ed7054499fd8c",
  "Nonce": "10208b027cb64864a74fd415a67cd4ac",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ac832ac25a0d4700be3ed7054499fd8c",
    "nonce": "10208b027cb64864a74fd415a67cd4ac"
  }
}
2020-07-15 17:14:56.137 +10:00 [INF] Showing login: User is not authenticated
2020-07-15 17:14:57.687 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:14:57.688 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:14:57.694 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:14:57.704 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:15:13.114 +10:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-07-15 17:15:15.042 +10:00 [DBG] Augmenting SignInContext
2020-07-15 17:15:15.047 +10:00 [DBG] Adding idp claim with value: local
2020-07-15 17:15:15.048 +10:00 [DBG] Adding amr claim with value: pwd
2020-07-15 17:15:15.050 +10:00 [DBG] Adding auth_time claim with value: 1594797315
2020-07-15 17:15:15.074 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-15 17:15:15.181 +10:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HM18HR2OV7TS:00000004",
  "TimeStamp": "2020-07-15T07:15:15Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:15:15.240 +10:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-07-15 17:15:15.244 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-07-15 17:15:15.247 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-07-15 17:15:15.260 +10:00 [DBG] Start authorize callback request
2020-07-15 17:15:15.306 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:15:15.309 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:15:15.312 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:15:15.314 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:15:15.323 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ac832ac25a0d4700be3ed7054499fd8c",
  "Nonce": "10208b027cb64864a74fd415a67cd4ac",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ac832ac25a0d4700be3ed7054499fd8c",
    "nonce": "10208b027cb64864a74fd415a67cd4ac"
  }
}
2020-07-15 17:15:15.412 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:15:15.427 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:15:15.449 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:15:15.451 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:15:15.702 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:15:15.705 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:15:15.742 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****yPuQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RqMA"
    }
  ],
  "ActivityId": "0HM18HR2OV7TS:00000005",
  "TimeStamp": "2020-07-15T07:15:15Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:15:15.757 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "ac832ac25a0d4700be3ed7054499fd8c",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:15:15.797 +10:00 [DBG] Augmenting SignInContext
2020-07-15 17:15:15.798 +10:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-07-15 17:15:16.308 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:15:16.310 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:15:16.314 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:15:16.315 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:15:16.316 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:15:16.317 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:15:16.318 +10:00 [DBG] Start discovery request
2020-07-15 17:15:16.346 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 17:15:16.348 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:15:16.351 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:15:16.351 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:15:16.353 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:15:16.355 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:15:16.361 +10:00 [DBG] Start key discovery request
2020-07-15 17:15:16.417 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:15:16.419 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:15:16.422 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:15:16.426 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:15:16.427 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:15:16.428 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:15:16.428 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:15:16.432 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:15:16.436 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:15:16.451 +10:00 [DBG] Start userinfo request
2020-07-15 17:15:16.459 +10:00 [DBG] Bearer token found in header
2020-07-15 17:15:16.582 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:15:16.592 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:15:16.600 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:15:16.611 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797315,
    "exp": 1594797495,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:15:16.632 +10:00 [DBG] Creating userinfo response
2020-07-15 17:15:16.642 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:15:16.648 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:15:16.654 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:15:16.656 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:15:16.664 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:15:16.666 +10:00 [DBG] End userinfo request
2020-07-15 17:15:16.713 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:15:16.715 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:15:16.718 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:15:16.721 +10:00 [DBG] Rendering check session result
2020-07-15 17:15:17.742 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:15:17.746 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:15:17.749 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:15:17.753 +10:00 [DBG] Start discovery request
2020-07-15 17:15:17.962 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:15:17.966 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:15:17.969 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:15:17.973 +10:00 [DBG] Start key discovery request
2020-07-15 17:16:34.961 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:16:34.963 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:34.966 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:34.967 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:16:34.969 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:16:34.970 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:16:34.975 +10:00 [DBG] Start discovery request
2020-07-15 17:16:34.985 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:16:34.988 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:34.991 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:34.993 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:16:34.996 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:16:34.998 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:16:35.003 +10:00 [DBG] Start discovery request
2020-07-15 17:16:35.075 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:16:35.081 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:16:35.085 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:16:35.087 +10:00 [DBG] Start authorize request
2020-07-15 17:16:35.089 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:16:35.098 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:16:35.101 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:16:35.103 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:16:35.104 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:16:35.109 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:16:35.114 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "4af08a9943d944ea974452c8222b338b",
  "Nonce": "62743c1fa4364b209f51cce2d3e7b35d",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "4af08a9943d944ea974452c8222b338b",
    "nonce": "62743c1fa4364b209f51cce2d3e7b35d"
  }
}
2020-07-15 17:16:35.117 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:16:35.128 +10:00 [DBG] Rendering check session result
2020-07-15 17:16:35.131 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:16:35.136 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:16:35.138 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:16:35.141 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:16:35.157 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:16:35.158 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:16:35.167 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****LoEg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****MFhQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7TS:00000007",
  "TimeStamp": "2020-07-15T07:16:35Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:16:35.171 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "4af08a9943d944ea974452c8222b338b",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:16:35.715 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:16:35.717 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:35.720 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:35.721 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:16:35.723 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:16:35.724 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:16:35.726 +10:00 [DBG] Start discovery request
2020-07-15 17:16:35.738 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:16:35.747 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:35.754 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:35.755 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:16:35.767 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:16:35.770 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:16:35.772 +10:00 [DBG] Start discovery request
2020-07-15 17:16:35.844 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:16:35.847 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:16:35.851 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:16:35.853 +10:00 [DBG] Rendering check session result
2020-07-15 17:16:35.869 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 17:16:35.870 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:35.873 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:35.875 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:16:35.876 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:16:35.880 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:16:35.882 +10:00 [DBG] Start key discovery request
2020-07-15 17:16:35.940 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:16:35.944 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:35.949 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:35.953 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:16:35.954 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:16:35.960 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:16:35.961 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:16:35.962 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:16:35.963 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:16:35.965 +10:00 [DBG] Start userinfo request
2020-07-15 17:16:35.966 +10:00 [DBG] Bearer token found in header
2020-07-15 17:16:35.970 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:16:35.971 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:16:35.978 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:16:35.980 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797395,
    "exp": 1594797575,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:16:35.989 +10:00 [DBG] Creating userinfo response
2020-07-15 17:16:35.990 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:16:35.994 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:16:36.003 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:16:36.005 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:16:36.011 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:16:36.013 +10:00 [DBG] End userinfo request
2020-07-15 17:18:36.072 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:18:36.076 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:18:36.080 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:18:36.082 +10:00 [DBG] Start authorize request
2020-07-15 17:18:36.084 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:18:36.090 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:18:36.092 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:18:36.095 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:18:36.097 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "580f38fe08194f94b6451a470622571d",
  "Nonce": "30f6bf68a59a47aca363756c4f3e4e7c",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "580f38fe08194f94b6451a470622571d",
    "nonce": "30f6bf68a59a47aca363756c4f3e4e7c",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTczOTUsImV4cCI6MTU5NDc5NzY5NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2Mjc0M2MxZmE0MzY0YjIwOWY1MWNjZTJkM2U3YjM1ZCIsImlhdCI6MTU5NDc5NzM5NSwiYXRfaGFzaCI6ImVJcGVyWUlXeVN0aXJ3cFNtTTlEOGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.d6dPLsO89wL0is3v45jsHIZ7t4uLmhC9VkV3OD4bkzVHnkjVeGtMlTewkosqK0Ap0mx3ziJX67BtiyQ5ME6c6B_G-e7jBAM9Eme2oSJspX0gd88eun7CC4w01-4HLgqm6oY1_3rbdIU7I9xZgQZeENPsJx8vet4CNyPxPU85mmGhFQpKh0QubDbI7G-KKTmy8ublr_-WgixujR1xp8i88ZTvxArgf-GJacshhV0F5ezM0cZp5Tt7g49q__Iz4jqQZrMToGk4rCxzQvB716yN7hPlp-SyXag4ZQYJFlbRA3bBcMyu0_AgcBYI38ucnZA_XVx0E_bwMk37nobVx3LoEg"
  }
}
2020-07-15 17:18:36.120 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:18:36.121 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:18:36.122 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:18:36.124 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:18:36.142 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:18:36.147 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:18:36.155 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****K_Uw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****NQwg"
    }
  ],
  "ActivityId": "0HM18HR2OV7TS:00000009",
  "TimeStamp": "2020-07-15T07:18:36Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:18:36.165 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "580f38fe08194f94b6451a470622571d",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:18:36.898 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:18:36.900 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:18:36.903 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:18:36.904 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:18:36.905 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:18:36.907 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:18:36.908 +10:00 [DBG] Start discovery request
2020-07-15 17:18:36.932 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:18:36.934 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:18:36.938 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:18:36.940 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:18:36.941 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:18:36.942 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:18:36.943 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:18:36.944 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:18:36.947 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:18:36.949 +10:00 [DBG] Start userinfo request
2020-07-15 17:18:36.949 +10:00 [DBG] Bearer token found in header
2020-07-15 17:18:36.952 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:18:36.953 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:18:36.957 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:18:36.958 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797516,
    "exp": 1594797696,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:18:36.961 +10:00 [DBG] Creating userinfo response
2020-07-15 17:18:36.964 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:18:36.966 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:18:36.967 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:18:36.969 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:18:36.973 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:18:36.974 +10:00 [DBG] End userinfo request
2020-07-15 17:20:37.068 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:20:37.073 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:20:37.076 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:20:37.079 +10:00 [DBG] Start authorize request
2020-07-15 17:20:37.081 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:20:37.085 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:20:37.086 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:20:37.089 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:20:37.090 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "17c2d74b658b4d1b9fe7fd95760ebaf3",
  "Nonce": "0c3daa6674794a969772f64c966e7d22",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "17c2d74b658b4d1b9fe7fd95760ebaf3",
    "nonce": "0c3daa6674794a969772f64c966e7d22",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTc1MTYsImV4cCI6MTU5NDc5NzgxNiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIzMGY2YmY2OGE1OWE0N2FjYTM2Mzc1NmM0ZjNlNGU3YyIsImlhdCI6MTU5NDc5NzUxNiwiYXRfaGFzaCI6InlPRjJOVjVNeE53M0I2MGw5RDdXZ0EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.HUeQ-SnQmNdJ3MUrlw_hIM7Wm4duz167g4wy9juLbdQQSPwp5D028umoEnQyAvg-OsvSjeTS82mh_Kaoqp29NYowEEMO41Wtw9I3cf6qGdjaGNmWPjmVaWFcz6xad8FMc4tCaEhyCT-yQtep3l2NqLDo_wiMfI20KkD3ckWi2DuhmIf4ICBZJ0kUUiQElM7YhmVw2xa9hW-cnfCSzPcmUqCtKOzHYkJJ3fmhT05NrIZ5TX8ZjouLTsox5Y3sv55IqRNCYPeQ5TLT3x3G44YTof9PScUzXHqkIWthnwMHm8rpb8frjsVU1w7NKBIVx3G7DQ8gOKlnusHZZr3Lk_K_Uw"
  }
}
2020-07-15 17:20:37.102 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:20:37.103 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:20:37.104 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:20:37.105 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:20:37.116 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:20:37.118 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:20:37.131 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UK5Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ZmRQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7TS:0000000A",
  "TimeStamp": "2020-07-15T07:20:37Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:20:37.140 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "17c2d74b658b4d1b9fe7fd95760ebaf3",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:20:37.829 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:20:37.830 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:20:37.834 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:20:37.835 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:20:37.836 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:20:37.837 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:20:37.839 +10:00 [DBG] Start discovery request
2020-07-15 17:20:37.859 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:20:37.861 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:20:37.864 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:20:37.867 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:20:37.868 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:20:37.869 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:20:37.870 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:20:37.872 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:20:37.873 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:20:37.877 +10:00 [DBG] Start userinfo request
2020-07-15 17:20:37.878 +10:00 [DBG] Bearer token found in header
2020-07-15 17:20:37.881 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:20:37.882 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:20:37.886 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:20:37.887 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797637,
    "exp": 1594797817,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:20:37.889 +10:00 [DBG] Creating userinfo response
2020-07-15 17:20:37.892 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:20:37.893 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:20:37.894 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:20:37.896 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:20:37.901 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:20:37.902 +10:00 [DBG] End userinfo request
2020-07-15 17:22:37.976 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:22:37.979 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:22:37.982 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:22:37.984 +10:00 [DBG] Start authorize request
2020-07-15 17:22:37.985 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:22:37.987 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:22:37.988 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:22:37.992 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:22:37.993 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3b58f13c63604a6d92d6668fb746e0a8",
  "Nonce": "7e7d785dd6e740479ae277abdb81503c",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3b58f13c63604a6d92d6668fb746e0a8",
    "nonce": "7e7d785dd6e740479ae277abdb81503c",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTc2MzcsImV4cCI6MTU5NDc5NzkzNywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwYzNkYWE2Njc0Nzk0YTk2OTc3MmY2NGM5NjZlN2QyMiIsImlhdCI6MTU5NDc5NzYzNywiYXRfaGFzaCI6InJRSDRBWjd5eVBwNFdqekppb1pkZmciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.e8IVsE9LhvZK1DzQPAYQHqYrsfvUYZP9Sjej30uNclopZpM0mN5hGs8KR5C5ayOiCNYikMTQjeZQqrNxKwDsD_eyTLe5Uwplo64f0wlHZuQEvKgYOQ0mgZQ2v1xXD4PHdOREDsI1SiidipWbxye5EOYiisvlPtfYuMlq3b08Gfp2Lyaneff4atpmO0PwMs7jbezmybV65-7YmirQ2tVExeAdHF59Wo_0toyYPd_UBf-Mo7J7b3k_pjacny8zcKIsDrQSdsD8JSODfew3tyEZqB6XYoz6E3fHjLv4e0QYVEjhg0LrycgzszZKj2HYbOfe8ovnN2wfvwZ0n-zzuxUK5Q"
  }
}
2020-07-15 17:22:38.003 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:22:38.004 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:22:38.004 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:22:38.008 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:22:38.018 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:22:38.019 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:22:38.026 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****tkBA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****1atA"
    }
  ],
  "ActivityId": "0HM18HR2OV7TS:0000000B",
  "TimeStamp": "2020-07-15T07:22:38Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:22:38.035 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "3b58f13c63604a6d92d6668fb746e0a8",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:22:38.812 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:22:38.813 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:22:38.817 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:22:38.817 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:22:38.819 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:22:38.820 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:22:38.821 +10:00 [DBG] Start discovery request
2020-07-15 17:22:38.844 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:22:38.845 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:22:38.848 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:22:38.851 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:22:38.852 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:22:38.853 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:22:38.854 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:22:38.856 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:22:38.859 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:22:38.861 +10:00 [DBG] Start userinfo request
2020-07-15 17:22:38.862 +10:00 [DBG] Bearer token found in header
2020-07-15 17:22:38.866 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:22:38.868 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:22:38.872 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:22:38.874 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797758,
    "exp": 1594797938,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:22:38.877 +10:00 [DBG] Creating userinfo response
2020-07-15 17:22:38.878 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:22:38.879 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:22:38.880 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:22:38.882 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:22:38.886 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:22:38.886 +10:00 [DBG] End userinfo request
2020-07-15 17:24:38.925 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:24:38.929 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:24:38.933 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:24:38.935 +10:00 [DBG] Start authorize request
2020-07-15 17:24:38.937 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:24:38.940 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:24:38.941 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:24:38.944 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:24:38.953 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "627ce2cb4835451eb0516f945a8ba098",
  "Nonce": "addb0715717b4b97bdd3711014619f6f",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "627ce2cb4835451eb0516f945a8ba098",
    "nonce": "addb0715717b4b97bdd3711014619f6f",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTc3NTgsImV4cCI6MTU5NDc5ODA1OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3ZTdkNzg1ZGQ2ZTc0MDQ3OWFlMjc3YWJkYjgxNTAzYyIsImlhdCI6MTU5NDc5Nzc1OCwiYXRfaGFzaCI6IndvOF9RdU9IUFZ2WnFQbFd2V2hXZGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.UovKkJ6reQd23JhaKtJi3KzSvEUYswF-15AWa5r02ukyh5e4mjmLyPG1t-iqWoskPPhEIe_OFJp8yRZCpsJ8lfgqJBvLke4QyB1_u0GBM-71KXqmOo08Gc96aKQTGl59nk8JDsoC7vhxiC2NvISGR0QBmyJiwKSdxr4cSbNC1_vC3DLQJ47vPRJpNggzw0uh9uHgr_NyFqgOztFohI0i8TbzR7IPlk-dFjfIs32dO01Z8D2CAEJu-Bf6uGd4kbbt-zFPqzC0eKGE4kfOPxHGxfzzCtq30-qNjM3tMQqsGKkJzgCy6I9t4hqn6k63tKPTSrHrKAiBYeMVBIt_0WtkBA"
  }
}
2020-07-15 17:24:38.975 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:24:38.975 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:24:38.977 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:24:38.982 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:24:38.993 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:24:38.995 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:24:39.002 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****bjJA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ItOg"
    }
  ],
  "ActivityId": "0HM18HR2OV7U2:00000001",
  "TimeStamp": "2020-07-15T07:24:39Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:24:39.009 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "627ce2cb4835451eb0516f945a8ba098",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:24:39.733 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:24:39.735 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:24:39.738 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:24:39.739 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:24:39.741 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:24:39.742 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:24:39.743 +10:00 [DBG] Start discovery request
2020-07-15 17:24:39.810 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:24:39.812 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:24:39.815 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:24:39.817 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:24:39.818 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:24:39.819 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:24:39.820 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:24:39.821 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:24:39.822 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:24:39.824 +10:00 [DBG] Start userinfo request
2020-07-15 17:24:39.825 +10:00 [DBG] Bearer token found in header
2020-07-15 17:24:39.829 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:24:39.832 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:24:39.836 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:24:39.837 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797878,
    "exp": 1594798058,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:24:39.840 +10:00 [DBG] Creating userinfo response
2020-07-15 17:24:39.841 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:24:39.842 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:24:39.844 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:24:39.848 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:24:39.852 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:24:39.853 +10:00 [DBG] End userinfo request
2020-07-15 17:26:39.905 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:26:39.912 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:26:39.914 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:26:39.916 +10:00 [DBG] Start authorize request
2020-07-15 17:26:39.917 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:26:39.922 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:26:39.923 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:26:39.925 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:26:39.927 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "a634e3dad63646ec8d91513952e300e1",
  "Nonce": "00a603a053cf4167bd8ec05245e36d9f",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "a634e3dad63646ec8d91513952e300e1",
    "nonce": "00a603a053cf4167bd8ec05245e36d9f",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTc4NzgsImV4cCI6MTU5NDc5ODE3OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJhZGRiMDcxNTcxN2I0Yjk3YmRkMzcxMTAxNDYxOWY2ZiIsImlhdCI6MTU5NDc5Nzg3OCwiYXRfaGFzaCI6IkllV1Z6WkVTQ1ZhV1FHeThDdWl2eHciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.jwet8RIrD-pfXDeWDnNoDxKDTjA4h7mTKGOYYinZUN38_A-5RN4zPLU0IQUmYVipYReP7dJO60Uzq7zOHsQjdjqrVs2uPW0duW7QVoqBA3XBEpmyEh7xUOuugmTE5zSkzrLDQXIHOzFdyQnehFPyhSVxC9loBlb2IsJeGAdrfKFX5bGSepdZ_AEvCFQftuMnsXJMVPbtEypI1GWwDV1VDrIXn8wHvPKVgBlYwXgj97BZUygQI8nu2Xj_fuwlZVML5qPBaPqY3L2MopKS2BmaU3pmVSr8I427sTfNho9LZMWh-UcseVNNVbJirkxIDfnH2yZGzaAt2ytbTGgmWVbjJA"
  }
}
2020-07-15 17:26:39.943 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:26:39.944 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:26:39.945 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:26:39.947 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:26:39.960 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:26:39.963 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:26:39.971 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****JFfQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****uE7A"
    }
  ],
  "ActivityId": "0HM18HR2OV7U2:00000002",
  "TimeStamp": "2020-07-15T07:26:39Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:26:39.976 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "a634e3dad63646ec8d91513952e300e1",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:26:40.719 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:26:40.721 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:26:40.724 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:26:40.726 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:26:40.727 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:26:40.728 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:26:40.730 +10:00 [DBG] Start discovery request
2020-07-15 17:26:40.750 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:26:40.752 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:26:40.755 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:26:40.757 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:26:40.758 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:26:40.759 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:26:40.760 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:26:40.761 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:26:40.762 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:26:40.763 +10:00 [DBG] Start userinfo request
2020-07-15 17:26:40.764 +10:00 [DBG] Bearer token found in header
2020-07-15 17:26:40.766 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:26:40.768 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:26:40.771 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:26:40.773 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594797999,
    "exp": 1594798179,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:26:40.776 +10:00 [DBG] Creating userinfo response
2020-07-15 17:26:40.776 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:26:40.778 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:26:40.779 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:26:40.781 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:26:40.788 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:26:40.789 +10:00 [DBG] End userinfo request
2020-07-15 17:28:40.877 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:28:40.882 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:28:40.885 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:28:40.887 +10:00 [DBG] Start authorize request
2020-07-15 17:28:40.891 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:28:40.894 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:28:40.896 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:28:40.898 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:28:40.900 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3364d8c52291413c88ec135a20d4f17f",
  "Nonce": "1a60c993602d49b4842179e6967b9f51",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3364d8c52291413c88ec135a20d4f17f",
    "nonce": "1a60c993602d49b4842179e6967b9f51",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTc5OTksImV4cCI6MTU5NDc5ODI5OSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwMGE2MDNhMDUzY2Y0MTY3YmQ4ZWMwNTI0NWUzNmQ5ZiIsImlhdCI6MTU5NDc5Nzk5OSwiYXRfaGFzaCI6ImVWS3Vob2QyWGtkOGkxdVVDaUczcFEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Szj1VbxMAjCbM_0kaPiBi8qLrQUs90IIOOX6N1NQnh9NyTiugFFgfYAzKtdSdWBY676-zCS9yGym7mgXV09hmfmVdEqS9lsLgJLr_ba0Kh6P0I5tfeUhcOrJvPH_nwFHezzZI3PwomGadzZZ1dY6P6nWXBkfX00IC529MxuVUBrVITSRQDbib3Y1rHdHjZjWK7NGS0-Y4ORk3yVRgEn0CGphUEg6uBiLOJu692eSgXymIWb7DPhLBHK1xoZIgMdmGUZH73IqSKAuTVeav7P95XAsmwQVTUop5trmdqgPFkkjy5Ek_hT6LbnGE2NJyqpTRJg3Er3ktU9X4jyPZiJFfQ"
  }
}
2020-07-15 17:28:40.913 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:28:40.915 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:28:40.917 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:28:40.918 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:28:40.931 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:28:40.935 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:28:40.943 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Z34Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Oodw"
    }
  ],
  "ActivityId": "0HM18HR2OV7U2:00000003",
  "TimeStamp": "2020-07-15T07:28:40Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:28:40.952 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "3364d8c52291413c88ec135a20d4f17f",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:28:41.656 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:28:41.659 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:28:41.662 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:28:41.663 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:28:41.665 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:28:41.666 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:28:41.668 +10:00 [DBG] Start discovery request
2020-07-15 17:28:41.682 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:28:41.683 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:28:41.684 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:28:41.687 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:28:41.688 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:28:41.689 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:28:41.692 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:28:41.694 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:28:41.695 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:28:41.696 +10:00 [DBG] Start userinfo request
2020-07-15 17:28:41.697 +10:00 [DBG] Bearer token found in header
2020-07-15 17:28:41.700 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:28:41.700 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:28:41.704 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:28:41.705 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594798120,
    "exp": 1594798300,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:28:41.706 +10:00 [DBG] Creating userinfo response
2020-07-15 17:28:41.709 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:28:41.710 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:28:41.711 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:28:41.712 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:28:41.716 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:28:41.718 +10:00 [DBG] End userinfo request
2020-07-15 17:45:15.152 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:45:15.155 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:15.164 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:15.165 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:45:15.169 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:45:15.171 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:45:15.174 +10:00 [DBG] Start discovery request
2020-07-15 17:45:15.181 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:45:15.182 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:15.183 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:15.184 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:45:15.186 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:45:15.195 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:45:15.199 +10:00 [DBG] Start discovery request
2020-07-15 17:45:15.211 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:45:15.213 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:45:15.216 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:45:15.218 +10:00 [DBG] Start authorize request
2020-07-15 17:45:15.219 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:45:15.220 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:45:15.222 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:45:15.230 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:45:15.231 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "4adc5a1a7e214fd08f130fbef9a560ba",
  "Nonce": "f1023c7cd2594743a64ac2d43d26963b",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "4adc5a1a7e214fd08f130fbef9a560ba",
    "nonce": "f1023c7cd2594743a64ac2d43d26963b"
  }
}
2020-07-15 17:45:15.239 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:45:15.244 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:45:15.246 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:45:15.248 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:45:15.248 +10:00 [DBG] Rendering check session result
2020-07-15 17:45:15.249 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:45:15.251 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:45:15.253 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:45:15.267 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:45:15.277 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:45:15.308 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aVdw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Jg-g"
    }
  ],
  "ActivityId": "0HM18HR2OV7U6:00000001",
  "TimeStamp": "2020-07-15T07:45:15Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:45:15.311 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "4adc5a1a7e214fd08f130fbef9a560ba",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:45:19.024 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:45:19.027 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:19.030 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:19.031 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:45:19.032 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:45:19.033 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:45:19.036 +10:00 [DBG] Start discovery request
2020-07-15 17:45:19.040 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:45:19.041 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:19.047 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:19.048 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:45:19.051 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:45:19.053 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:45:19.061 +10:00 [DBG] Start discovery request
2020-07-15 17:45:19.099 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 17:45:19.102 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:19.105 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:19.109 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:45:19.111 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:45:19.116 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:45:19.118 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:45:19.119 +10:00 [DBG] Start key discovery request
2020-07-15 17:45:19.121 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:45:19.123 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:45:19.128 +10:00 [DBG] Rendering check session result
2020-07-15 17:45:19.187 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:45:19.192 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:19.193 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:19.196 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:45:19.197 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:45:19.198 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:45:19.198 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:45:19.199 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:45:19.200 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:45:19.200 +10:00 [DBG] Start userinfo request
2020-07-15 17:45:19.201 +10:00 [DBG] Bearer token found in header
2020-07-15 17:45:19.207 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:45:19.208 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:45:19.211 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:45:19.212 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799115,
    "exp": 1594799295,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:45:19.217 +10:00 [DBG] Creating userinfo response
2020-07-15 17:45:19.217 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:45:19.218 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:45:19.219 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:45:19.220 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:45:19.225 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:45:19.228 +10:00 [DBG] End userinfo request
2020-07-15 17:47:19.285 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:47:19.289 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:47:19.293 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:47:19.296 +10:00 [DBG] Start authorize request
2020-07-15 17:47:19.297 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:47:19.302 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:47:19.305 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:47:19.307 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:47:19.309 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f79d5576c34b4caf847cbe62be27ce19",
  "Nonce": "5b6b5a311865421995a9557f85bded7c",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f79d5576c34b4caf847cbe62be27ce19",
    "nonce": "5b6b5a311865421995a9557f85bded7c",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTkxMTUsImV4cCI6MTU5NDc5OTQxNSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJmMTAyM2M3Y2QyNTk0NzQzYTY0YWMyZDQzZDI2OTYzYiIsImlhdCI6MTU5NDc5OTExNSwiYXRfaGFzaCI6InhYN1JUNUZJd0NGd2JzM3c5WlJaLUEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.HsNc3J8t25vmaNPAUzOmXXCluZmUNF9eaoaDVClFLLdi3mZnY7DC9TwXUr_xiQLPx1gYSdO-Nz8Y_VXeXYTu94uib_Ke_5YwxurwThWomLNJDK9si7IAi_nwJZOW2jyLfZO1npUG1DUzTJ3zX-cMlrS1BDGErGM3sBcFMjJjFRawFyKcuZ8DQ_nRzPyEjLFgG0p6I-YuSePuzeLl_j62NJL2hFqMU2rQzk9EEanwM0KAbFaXp0cYmQqQ7dsEy5--PZhE2fd8dkzzOc7JRa7IGlRUtOtPV1CiJn2CuCc3p2vJ0cdEJK9HBqtQX7bog5vS0NAgDZHA1w1sKNaHoSaVdw"
  }
}
2020-07-15 17:47:19.332 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:47:19.333 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:47:19.334 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:47:19.335 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:47:19.344 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:47:19.346 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:47:19.357 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****BuqQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Eucw"
    }
  ],
  "ActivityId": "0HM18HR2OV7U9:00000002",
  "TimeStamp": "2020-07-15T07:47:19Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:47:19.364 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "f79d5576c34b4caf847cbe62be27ce19",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:47:20.038 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:47:20.041 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:47:20.044 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:47:20.045 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:47:20.046 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:47:20.048 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:47:20.049 +10:00 [DBG] Start discovery request
2020-07-15 17:47:20.075 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:47:20.078 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:47:20.080 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:47:20.083 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:47:20.084 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:47:20.085 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:47:20.085 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:47:20.087 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:47:20.089 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:47:20.093 +10:00 [DBG] Start userinfo request
2020-07-15 17:47:20.094 +10:00 [DBG] Bearer token found in header
2020-07-15 17:47:20.097 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:47:20.098 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:47:20.101 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:47:20.102 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799239,
    "exp": 1594799419,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:47:20.104 +10:00 [DBG] Creating userinfo response
2020-07-15 17:47:20.107 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:47:20.108 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:47:20.109 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:47:20.110 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:47:20.115 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:47:20.116 +10:00 [DBG] End userinfo request
2020-07-15 17:49:20.159 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:49:20.164 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:49:20.167 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:49:20.170 +10:00 [DBG] Start authorize request
2020-07-15 17:49:20.171 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:49:20.178 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:49:20.180 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:49:20.183 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:49:20.185 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8c84f5cd34f54a0091f66f34affc6295",
  "Nonce": "6d940ad2af464663af549aabdb05dc85",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8c84f5cd34f54a0091f66f34affc6295",
    "nonce": "6d940ad2af464663af549aabdb05dc85",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTkyMzksImV4cCI6MTU5NDc5OTUzOSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI1YjZiNWEzMTE4NjU0MjE5OTVhOTU1N2Y4NWJkZWQ3YyIsImlhdCI6MTU5NDc5OTIzOSwiYXRfaGFzaCI6ImtoeHE1SkdSajM3Q2NidVVHMERZMGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.sAldOMF72Xrzuod9m0_nPefH36ymh8WD1uj7fRZBC9tGReR3RE_SJiUhI5YLXvFxaJRwVqZj20zopfGpQSmHqZU2YbFvoeE6fwJZsTCHQxwveVO5sLYh-7Qv5UjJFDRFihdbnDx4Z10cm3w6lqRoPxQoteJuiPBAeHxBb0WqCqnEX0RYhwi-c6FLWAgTQudEMLVp2gzQqQJRZijqF-SJ_SY-Vd5nu2fPbne34o8Hsg_lVOhQblXOEdV6p2W4g1dxtGEBqWUmUKSNKsJ1_kdBgWsDYyCMfgxChjso3az_4DDVQNlbhapeW3DX8nR6LpKN3zmyToVkYbHVn_xQLxBuqQ"
  }
}
2020-07-15 17:49:20.204 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:49:20.204 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:49:20.206 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:49:20.207 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:49:20.229 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:49:20.231 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:49:20.240 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****-JhQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-7Pw"
    }
  ],
  "ActivityId": "0HM18HR2OV7U9:00000003",
  "TimeStamp": "2020-07-15T07:49:20Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:49:20.248 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "8c84f5cd34f54a0091f66f34affc6295",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:49:20.977 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:49:20.979 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:49:20.981 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:49:20.983 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:49:20.984 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:49:20.985 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:49:20.986 +10:00 [DBG] Start discovery request
2020-07-15 17:49:21.004 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:49:21.005 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:49:21.006 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:49:21.009 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:49:21.010 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:49:21.014 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:49:21.014 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:49:21.016 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:49:21.017 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:49:21.018 +10:00 [DBG] Start userinfo request
2020-07-15 17:49:21.019 +10:00 [DBG] Bearer token found in header
2020-07-15 17:49:21.021 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:49:21.022 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:49:21.025 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:49:21.027 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799360,
    "exp": 1594799540,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:49:21.030 +10:00 [DBG] Creating userinfo response
2020-07-15 17:49:21.030 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:49:21.032 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:49:21.033 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:49:21.034 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:49:21.039 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:49:21.042 +10:00 [DBG] End userinfo request
2020-07-15 17:51:21.096 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:51:21.100 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:51:21.104 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:51:21.107 +10:00 [DBG] Start authorize request
2020-07-15 17:51:21.109 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:51:21.115 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:51:21.117 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:51:21.119 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:51:21.122 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "285576e856c24996b0e202903239eeb9",
  "Nonce": "0a1870bc59f449299c27b7871d73c58b",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "285576e856c24996b0e202903239eeb9",
    "nonce": "0a1870bc59f449299c27b7871d73c58b",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTkzNjAsImV4cCI6MTU5NDc5OTY2MCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2ZDk0MGFkMmFmNDY0NjYzYWY1NDlhYWJkYjA1ZGM4NSIsImlhdCI6MTU5NDc5OTM2MCwiYXRfaGFzaCI6IjVFV0VsalhXV3NCeXQ0UkU0eWJZUnciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.IrfMsxdEkbYousENlBV3qrIRlcU9zZOtakA65lhTMtuU3VOPaOX1zD4yO2jE7DGe_vElBCDnijunexp2iVhZI20YNiAjoGg5m3NlJEByqiMBlDNc2vnkC58l9-EAkwLA9WL4FaFonwOGKA3wYWnPDcw8prys90xwXAovbrE4BjbFHX4tvDeYZHsMYRt34vLMGYkmBPTc2LP6syWW9XAydwG8zyFZqnQKIw8YO0Rpay8CIvzNQtM250YwLIv_CXE9B-aizm4zvJNEMfL0epLDl4oPaNGz6jpCdD0XhTuxs-pyEH8I1tp2pefrQwXggP6XYBwvUUKeqcNCHXZQh_-JhQ"
  }
}
2020-07-15 17:51:21.140 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:51:21.141 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:51:21.143 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:51:21.147 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:51:21.160 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:51:21.162 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:51:21.171 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****YPvg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****J57A"
    }
  ],
  "ActivityId": "0HM18HR2OV7U9:00000004",
  "TimeStamp": "2020-07-15T07:51:21Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:51:21.180 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "285576e856c24996b0e202903239eeb9",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:51:21.860 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:51:21.863 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:51:21.866 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:51:21.867 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:51:21.869 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:51:21.871 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:51:21.872 +10:00 [DBG] Start discovery request
2020-07-15 17:51:21.892 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:51:21.894 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:51:21.896 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:51:21.899 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:51:21.900 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:51:21.901 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:51:21.902 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:51:21.904 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:51:21.905 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:51:21.907 +10:00 [DBG] Start userinfo request
2020-07-15 17:51:21.907 +10:00 [DBG] Bearer token found in header
2020-07-15 17:51:21.910 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:51:21.914 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:51:21.919 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:51:21.920 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799481,
    "exp": 1594799661,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:51:21.923 +10:00 [DBG] Creating userinfo response
2020-07-15 17:51:21.924 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:51:21.925 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:51:21.927 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:51:21.931 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:51:21.936 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:51:21.937 +10:00 [DBG] End userinfo request
2020-07-15 17:53:22.344 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:53:22.348 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:53:22.351 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:53:22.353 +10:00 [DBG] Start authorize request
2020-07-15 17:53:22.355 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:53:22.360 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:53:22.361 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:53:22.364 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:53:22.366 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1fd26969c8484e34a3d454f4cb8784f1",
  "Nonce": "7d3e62799c22430d83ee82a89282d389",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1fd26969c8484e34a3d454f4cb8784f1",
    "nonce": "7d3e62799c22430d83ee82a89282d389",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTk0ODEsImV4cCI6MTU5NDc5OTc4MSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwYTE4NzBiYzU5ZjQ0OTI5OWMyN2I3ODcxZDczYzU4YiIsImlhdCI6MTU5NDc5OTQ4MSwiYXRfaGFzaCI6IlhGbGNQSjZPLVJkWEx5VEVHNXZJOHciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.iJt8LMCkja4H0eX6THZ1FMqnNMRs0hiK5GTWkITQGX8rTjgd9OPaOMvng3KmIO06rfxylA8mwtpQmo5AvQZf_asuSzqXocPQj8ugqMudhtGfoiuf6h99jf9QXQVm0fCHCswZv2WvfKPmvR-WxeONUDZ9x0VX0bp0thQlIxaCdPSRt3ZxFwVJojsTBsVLF-ovTho4EbW1QQVX28WwilnZ_biuHfpfqa1ggICSX7_iVN4Am4bA2LA1EdyCfCm6a_Mkfzya8t2s-eiZtLdC50izlK9RDk1JlCfvIUYCT4Ac_fEGba4ihTkx_W1Zbk_tmTeBa3du9Tqlgl39oA-hINYPvg"
  }
}
2020-07-15 17:53:22.385 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:53:22.385 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:53:22.387 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:53:22.388 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:53:22.407 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:53:22.411 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:53:22.420 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****0whg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****4VTA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UB:00000001",
  "TimeStamp": "2020-07-15T07:53:22Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:53:22.430 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "1fd26969c8484e34a3d454f4cb8784f1",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:53:23.458 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:53:23.462 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:53:23.466 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:53:23.467 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:53:23.472 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:53:23.477 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:53:23.479 +10:00 [DBG] Start discovery request
2020-07-15 17:53:23.612 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:53:23.617 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:53:23.621 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:53:23.626 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:53:23.629 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:53:23.630 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:53:23.634 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:53:23.638 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:53:23.640 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:53:23.642 +10:00 [DBG] Start userinfo request
2020-07-15 17:53:23.643 +10:00 [DBG] Bearer token found in header
2020-07-15 17:53:23.650 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:53:23.652 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:53:23.657 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:53:23.658 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799602,
    "exp": 1594799782,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:53:23.661 +10:00 [DBG] Creating userinfo response
2020-07-15 17:53:23.662 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:53:23.667 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:53:23.669 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:53:23.670 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:53:23.676 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:53:23.678 +10:00 [DBG] End userinfo request
2020-07-15 17:55:24.391 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:55:24.401 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:55:24.406 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:55:24.417 +10:00 [DBG] Start authorize request
2020-07-15 17:55:24.420 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:55:24.425 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:55:24.432 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:55:24.438 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:55:24.447 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c9c5c17ae9f6444f8ffcc8b7ff6c3e35",
  "Nonce": "66a41ed72b3e44f4ab01bf6347b65bf0",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c9c5c17ae9f6444f8ffcc8b7ff6c3e35",
    "nonce": "66a41ed72b3e44f4ab01bf6347b65bf0",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTk2MDIsImV4cCI6MTU5NDc5OTkwMiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3ZDNlNjI3OTljMjI0MzBkODNlZTgyYTg5MjgyZDM4OSIsImlhdCI6MTU5NDc5OTYwMiwiYXRfaGFzaCI6IkRDcWJhNEVQVFdYNHJDVG0zbkdrZnciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.EFX0vNIHZ0CeCMPWI25ZqEpZ-oCKdqVoIuSUEDYZFOcXSBFYWSUf-pZFUnP2Ch15SIVo8D_zBpbbgPMNcoiiXbZAnXmChpsCbw_y9XvJ9-JBOBIsznDIYFLOKQ8o7aPp-YsYhHFwroFzXysSm1Bnd-KlyIhCTVW3Zura6sm9t89zaRVNl4ZW6Wtgz2FFCMuN4XH9XZm652AExYRRBBizqVRcFG5xD4uFUS7CywVlsueiOfIeT2Npd78H_8ED9lgN-CUZcoRZsOR6qoBofL7zsD10u2W4pvywzw6-dc9FpnLnk1jDIzJY_YFLBMSKfpZAlW_MfQ3UdYBiandFZB0whg"
  }
}
2020-07-15 17:55:24.505 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:55:24.506 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:55:24.509 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:55:24.512 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:55:24.543 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:55:24.547 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:55:24.567 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****wMDg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7H9g"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000001",
  "TimeStamp": "2020-07-15T07:55:24Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:55:24.577 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "c9c5c17ae9f6444f8ffcc8b7ff6c3e35",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:55:25.594 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:55:25.596 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:55:25.598 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:55:25.599 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:55:25.600 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:55:25.601 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:55:25.603 +10:00 [DBG] Start discovery request
2020-07-15 17:55:25.629 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:55:25.633 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:55:25.634 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:55:25.638 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:55:25.639 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:55:25.640 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:55:25.641 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:55:25.641 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:55:25.643 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:55:25.644 +10:00 [DBG] Start userinfo request
2020-07-15 17:55:25.644 +10:00 [DBG] Bearer token found in header
2020-07-15 17:55:25.650 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:55:25.651 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:55:25.654 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:55:25.655 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799724,
    "exp": 1594799904,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:55:25.658 +10:00 [DBG] Creating userinfo response
2020-07-15 17:55:25.659 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:55:25.660 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:55:25.662 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:55:25.665 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:55:25.669 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:55:25.670 +10:00 [DBG] End userinfo request
2020-07-15 17:57:25.724 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:57:25.729 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:57:25.732 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:57:25.734 +10:00 [DBG] Start authorize request
2020-07-15 17:57:25.736 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:57:25.741 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:57:25.743 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:57:25.744 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:57:25.746 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c864cfe75bd647b791fe30581a664a78",
  "Nonce": "c883480acfc74c5ea3abd11bc987f122",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c864cfe75bd647b791fe30581a664a78",
    "nonce": "c883480acfc74c5ea3abd11bc987f122",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTk3MjQsImV4cCI6MTU5NDgwMDAyNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2NmE0MWVkNzJiM2U0NGY0YWIwMWJmNjM0N2I2NWJmMCIsImlhdCI6MTU5NDc5OTcyNCwiYXRfaGFzaCI6IllMckZVY2FmVVRmT1V3MmhrUnhBbWciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.mSjfrLjq4aekGv3lkUvnWAGLKiJyFHGTxWzWOg3hjx4J_2K4Yb5igBd6IF-X_aZPNJXvkgkPy20oA03EHNOuTbpf9uzEkQ7U3U0x81_1xMiQo8HQ1UK0fz0EqN7Ld-u4AC-B2eDkR1HhV_mrBJGbgtI7l0RiG-nVk_Vh4nkVB6MEf-8mz_xPPbsSxkcYzaiMLTgqR_foTaTRP430FrQi0YFFwoQ6AEwzMHK0Y8owdmRh5AYAE7FMvqkno2SmjupE9UwLcwpeEbD0kgDNRU7FnaZ3Riqn6OU4CLzXFp8NNB15e3k6m2KjY4FUhrKt3M03Zxr710-3_CYRh0dpsUwMDg"
  }
}
2020-07-15 17:57:25.769 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:57:25.771 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:57:25.772 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:57:25.774 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:57:25.785 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:57:25.787 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:57:25.793 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****qaHA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vIDg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000002",
  "TimeStamp": "2020-07-15T07:57:25Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:57:25.797 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "c864cfe75bd647b791fe30581a664a78",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:57:26.742 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:57:26.744 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:57:26.747 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:57:26.749 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:57:26.750 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:57:26.751 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:57:26.753 +10:00 [DBG] Start discovery request
2020-07-15 17:57:26.774 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:57:26.777 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:57:26.780 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:57:26.782 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:57:26.783 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:57:26.785 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:57:26.786 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:57:26.787 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:57:26.788 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:57:26.792 +10:00 [DBG] Start userinfo request
2020-07-15 17:57:26.793 +10:00 [DBG] Bearer token found in header
2020-07-15 17:57:26.796 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:57:26.797 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:57:26.800 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:57:26.802 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799845,
    "exp": 1594800025,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:57:26.804 +10:00 [DBG] Creating userinfo response
2020-07-15 17:57:26.807 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:57:26.808 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:57:26.810 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:57:26.811 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:57:26.815 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:57:26.816 +10:00 [DBG] End userinfo request
2020-07-15 17:59:26.876 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:59:26.879 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:59:26.882 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:59:26.883 +10:00 [DBG] Start authorize request
2020-07-15 17:59:26.885 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:26.885 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:59:26.886 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:26.888 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:59:26.890 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "66594b3f74cf4309b17c883977961085",
  "Nonce": "b410ee374fb647f994b8239dcdf84554",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "66594b3f74cf4309b17c883977961085",
    "nonce": "b410ee374fb647f994b8239dcdf84554",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ3OTk4NDUsImV4cCI6MTU5NDgwMDE0NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJjODgzNDgwYWNmYzc0YzVlYTNhYmQxMWJjOTg3ZjEyMiIsImlhdCI6MTU5NDc5OTg0NSwiYXRfaGFzaCI6IjdXVzBrWE5WMDdVRTBBMWQtLXg2Y1EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.W1vtYo38LJtdz_ofvxtwHABi8ir3nqWcaqMi9ana_NMtB7Vll5rAMcrehM7Y9fPrjQ5zSRnVb27gS2O-kwUhYatZk__TgmokCpsoCaGcIO53DK-keikkZHMLz_gknsZb5zUUKeU5TvDkZf06FBab51OUVDdyxvVsRGrrmk0jZ8GVQEiKyLM8rdUdabmb5ByDxI-1_0EjHOspqKGtJUAJGXwf6Wy0w35AlbI6AqzOUvg2sQljg36Th1fWOhLlIk_dhzvIQh6Par6sIKc-zHT7XO4ckZ4eqwaaCwWe1UCfnvxd6Mbbq3CLmt1esDP04G1VaJsTMrDT6xkUs2E3LtqaHA"
  }
}
2020-07-15 17:59:26.906 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:59:26.907 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:59:26.908 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:59:26.915 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:26.932 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:59:26.934 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:59:26.944 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****8aKQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****u2tg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000003",
  "TimeStamp": "2020-07-15T07:59:26Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:59:26.952 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "66594b3f74cf4309b17c883977961085",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:59:28.482 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:28.485 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:28.487 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:28.488 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:28.490 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:28.491 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:28.493 +10:00 [DBG] Start discovery request
2020-07-15 17:59:28.496 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:28.498 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:28.503 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:28.504 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:28.506 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:28.509 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:28.510 +10:00 [DBG] Start discovery request
2020-07-15 17:59:28.564 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:59:28.567 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:59:28.573 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:59:28.575 +10:00 [DBG] Start authorize request
2020-07-15 17:59:28.576 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:28.578 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:59:28.581 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:28.584 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:59:28.586 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "714c1e93e4a941b4b399f50125df9751",
  "Nonce": "de1e837817bf4b0682b924c95746becd",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "714c1e93e4a941b4b399f50125df9751",
    "nonce": "de1e837817bf4b0682b924c95746becd"
  }
}
2020-07-15 17:59:28.590 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:59:28.596 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:59:28.598 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:59:28.599 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:59:28.600 +10:00 [DBG] Rendering check session result
2020-07-15 17:59:28.600 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:59:28.611 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:59:28.613 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:28.625 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:59:28.627 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:59:28.634 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UKtQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****PGdg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000004",
  "TimeStamp": "2020-07-15T07:59:28Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:59:28.639 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "714c1e93e4a941b4b399f50125df9751",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:59:29.442 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:29.448 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:29.451 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:29.452 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:29.464 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:29.469 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:29.472 +10:00 [DBG] Start discovery request
2020-07-15 17:59:29.486 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:29.493 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:29.499 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:29.509 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:29.526 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:59:29.528 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:59:29.529 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:59:29.530 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:29.531 +10:00 [DBG] Rendering check session result
2020-07-15 17:59:29.536 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:29.540 +10:00 [DBG] Start discovery request
2020-07-15 17:59:29.572 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 17:59:29.579 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:29.582 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:29.583 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:59:29.589 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:59:29.592 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:59:29.596 +10:00 [DBG] Start key discovery request
2020-07-15 17:59:29.703 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:59:29.707 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:29.711 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:29.726 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:59:29.730 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:29.733 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:29.771 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:59:29.777 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:59:29.786 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:59:29.802 +10:00 [DBG] Start userinfo request
2020-07-15 17:59:29.820 +10:00 [DBG] Bearer token found in header
2020-07-15 17:59:29.825 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:29.827 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:29.837 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:59:29.840 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799968,
    "exp": 1594800148,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:59:29.849 +10:00 [DBG] Creating userinfo response
2020-07-15 17:59:29.850 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:29.856 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:29.858 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:59:29.862 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:29.870 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:59:29.880 +10:00 [DBG] End userinfo request
2020-07-15 17:59:46.854 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:46.857 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:46.860 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:46.862 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:46.864 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:46.866 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:46.867 +10:00 [DBG] Start discovery request
2020-07-15 17:59:46.871 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:46.873 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:46.875 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:46.876 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:46.878 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:46.880 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:46.883 +10:00 [DBG] Start discovery request
2020-07-15 17:59:46.927 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 17:59:46.928 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:59:46.930 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 17:59:46.933 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:59:46.934 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 17:59:46.936 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:59:46.938 +10:00 [DBG] Start authorize request
2020-07-15 17:59:46.940 +10:00 [DBG] Rendering check session result
2020-07-15 17:59:46.941 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:46.947 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 17:59:46.948 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:46.950 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 17:59:46.952 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8faf1dc2e78f417a9ee23672b7c2ee1a",
  "Nonce": "d206f52ea4e94a358fd658160acb7d24",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8faf1dc2e78f417a9ee23672b7c2ee1a",
    "nonce": "d206f52ea4e94a358fd658160acb7d24"
  }
}
2020-07-15 17:59:46.964 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 17:59:46.964 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 17:59:46.966 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 17:59:46.969 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 17:59:46.979 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 17:59:46.980 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 17:59:46.987 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****r9Dg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****cyKg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000006",
  "TimeStamp": "2020-07-15T07:59:46Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 17:59:46.991 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "8faf1dc2e78f417a9ee23672b7c2ee1a",
  "Scope": "openid profile email restapi"
}
2020-07-15 17:59:47.513 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:47.515 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:47.518 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:47.519 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:47.520 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:47.521 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:47.544 +10:00 [DBG] Start discovery request
2020-07-15 17:59:47.548 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 17:59:47.550 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:47.552 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:47.555 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 17:59:47.556 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 17:59:47.557 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 17:59:47.559 +10:00 [DBG] Start discovery request
2020-07-15 17:59:47.578 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 17:59:47.579 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 17:59:47.581 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:47.583 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 17:59:47.584 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:47.588 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 17:59:47.590 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 17:59:47.592 +10:00 [DBG] Rendering check session result
2020-07-15 17:59:47.594 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 17:59:47.596 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 17:59:47.598 +10:00 [DBG] Start key discovery request
2020-07-15 17:59:47.654 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:59:47.656 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:47.659 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:47.662 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 17:59:47.664 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 17:59:47.668 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 17:59:47.670 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 17:59:47.672 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 17:59:47.673 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 17:59:47.675 +10:00 [DBG] Start userinfo request
2020-07-15 17:59:47.675 +10:00 [DBG] Bearer token found in header
2020-07-15 17:59:47.679 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:47.681 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 17:59:47.689 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 17:59:47.691 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594799986,
    "exp": 1594800166,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 17:59:47.694 +10:00 [DBG] Creating userinfo response
2020-07-15 17:59:47.695 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:47.697 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:47.701 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 17:59:47.703 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 17:59:47.711 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 17:59:47.714 +10:00 [DBG] End userinfo request
2020-07-15 18:00:48.601 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:00:48.604 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:48.607 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:48.608 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:00:48.611 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:00:48.612 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:00:48.614 +10:00 [DBG] Start discovery request
2020-07-15 18:00:48.617 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:00:48.618 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:48.623 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:48.624 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:00:48.626 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:00:48.627 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:00:48.629 +10:00 [DBG] Start discovery request
2020-07-15 18:00:48.658 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:00:48.660 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:00:48.662 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:00:48.664 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:00:48.666 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:00:48.668 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:00:48.669 +10:00 [DBG] Start authorize request
2020-07-15 18:00:48.671 +10:00 [DBG] Rendering check session result
2020-07-15 18:00:48.672 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:00:48.675 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:00:48.680 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:00:48.682 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:00:48.684 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "4ee1be9dd0214ec993590c1fb8e1b11a",
  "Nonce": "2a5b672bfd5d4a97bb634da8e62c3599",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "4ee1be9dd0214ec993590c1fb8e1b11a",
    "nonce": "2a5b672bfd5d4a97bb634da8e62c3599"
  }
}
2020-07-15 18:00:48.692 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:00:48.694 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:00:48.695 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:00:48.696 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:00:48.707 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:00:48.711 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:00:48.718 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****tsCA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****PVUQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000008",
  "TimeStamp": "2020-07-15T08:00:48Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:00:48.721 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "4ee1be9dd0214ec993590c1fb8e1b11a",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:00:49.250 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:00:49.252 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:49.255 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:49.256 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:00:49.282 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:00:49.284 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:00:49.289 +10:00 [DBG] Start discovery request
2020-07-15 18:00:49.294 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:00:49.303 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:49.309 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:49.311 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:00:49.315 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:00:49.317 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:00:49.319 +10:00 [DBG] Start discovery request
2020-07-15 18:00:49.347 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:00:49.353 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:00:49.357 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:00:49.358 +10:00 [DBG] Rendering check session result
2020-07-15 18:00:49.371 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:00:49.373 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:49.379 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:49.381 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:00:49.388 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:00:49.390 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:00:49.394 +10:00 [DBG] Start key discovery request
2020-07-15 18:00:49.465 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:00:49.470 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:49.471 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:49.474 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:00:49.475 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:00:49.477 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:00:49.478 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:00:49.480 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:00:49.481 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:00:49.482 +10:00 [DBG] Start userinfo request
2020-07-15 18:00:49.483 +10:00 [DBG] Bearer token found in header
2020-07-15 18:00:49.491 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:00:49.492 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:00:49.497 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:00:49.498 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800048,
    "exp": 1594800228,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:00:49.500 +10:00 [DBG] Creating userinfo response
2020-07-15 18:00:49.503 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:00:49.505 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:00:49.507 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:00:49.508 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:00:49.515 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:00:49.516 +10:00 [DBG] End userinfo request
2020-07-15 18:01:32.525 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:01:32.527 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:32.531 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:32.532 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:01:32.533 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:01:32.534 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:01:32.535 +10:00 [DBG] Start discovery request
2020-07-15 18:01:32.541 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:01:32.543 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:32.545 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:32.547 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:01:32.549 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:01:32.551 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:01:32.553 +10:00 [DBG] Start discovery request
2020-07-15 18:01:32.578 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:01:32.584 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:01:32.588 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:01:32.589 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:01:32.591 +10:00 [DBG] Start authorize request
2020-07-15 18:01:32.593 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:01:32.594 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:01:32.596 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:01:32.597 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:01:32.598 +10:00 [DBG] Rendering check session result
2020-07-15 18:01:32.599 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:01:32.602 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:01:32.607 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ec2108b38f2940f6a069ab9dabdd1eda",
  "Nonce": "fc0fe11dc3c347cf9351776e3087bf31",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ec2108b38f2940f6a069ab9dabdd1eda",
    "nonce": "fc0fe11dc3c347cf9351776e3087bf31"
  }
}
2020-07-15 18:01:32.614 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:01:32.614 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:01:32.615 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:01:32.616 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:01:32.630 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:01:32.631 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:01:32.638 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****tKZQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7Qkg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000000A",
  "TimeStamp": "2020-07-15T08:01:32Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:01:32.643 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "ec2108b38f2940f6a069ab9dabdd1eda",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:01:33.022 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:01:33.025 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:33.042 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:33.045 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:01:33.047 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:01:33.053 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:01:33.057 +10:00 [DBG] Start discovery request
2020-07-15 18:01:33.062 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:01:33.063 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:33.064 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:33.065 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:01:33.067 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:01:33.070 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:01:33.073 +10:00 [DBG] Start discovery request
2020-07-15 18:01:33.096 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:01:33.098 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:01:33.100 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:01:33.101 +10:00 [DBG] Rendering check session result
2020-07-15 18:01:33.127 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:01:33.129 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:33.133 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:33.134 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:01:33.136 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:01:33.137 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:01:33.139 +10:00 [DBG] Start key discovery request
2020-07-15 18:01:33.160 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:01:33.162 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:33.165 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:33.168 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:01:33.169 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:01:33.171 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:01:33.171 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:01:33.173 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:01:33.174 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:01:33.178 +10:00 [DBG] Start userinfo request
2020-07-15 18:01:33.178 +10:00 [DBG] Bearer token found in header
2020-07-15 18:01:33.183 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:01:33.184 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:01:33.186 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:01:33.188 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800092,
    "exp": 1594800272,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:01:33.194 +10:00 [DBG] Creating userinfo response
2020-07-15 18:01:33.194 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:01:33.196 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:01:33.198 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:01:33.200 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:01:33.204 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:01:33.205 +10:00 [DBG] End userinfo request
2020-07-15 18:03:33.273 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:03:33.277 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:03:33.280 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:03:33.282 +10:00 [DBG] Start authorize request
2020-07-15 18:03:33.283 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:03:33.285 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:03:33.286 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:03:33.290 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:03:33.292 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "6f9bfdb7947b4e689928e8d16ee8bc5d",
  "Nonce": "ad0cf77e31644160891f94fb2953fe01",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "6f9bfdb7947b4e689928e8d16ee8bc5d",
    "nonce": "ad0cf77e31644160891f94fb2953fe01",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDAwOTIsImV4cCI6MTU5NDgwMDM5MiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJmYzBmZTExZGMzYzM0N2NmOTM1MTc3NmUzMDg3YmYzMSIsImlhdCI6MTU5NDgwMDA5MiwiYXRfaGFzaCI6IkNWTTRVNnFMT1l3ZU5URDlpcmhwb0EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.guUnFwHmq36vBH1FBnHpFiiMsnHOlXV3gD2TLF0nZ5cpK284CgyrXtv9LluWI5XC-Q0BamAyP220VpYw_jVo-8litL7K45l6FRFtM1RGYh5_NXh4lg5JgqgVUj9mE4Vryjm-S7fMsjBCA8DnHLX-R7bPoT6th1c3MC0xWBCiZWUAZRQ--3Vf8yDuisYaAuqGR3zceoIC49tqEwVXA_uIcPvtD0Xm-PwWY1nsnTX_LxYThTEJaVODbNOE3caigFxEqKpuJs74JBObsm_joMsJopXOrpbdYOGkUUunvL1SAv1tVN_MzWb3dzB_s_woxj66otHwUT6r9JSbpUEz64tKZQ"
  }
}
2020-07-15 18:03:33.302 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:03:33.305 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:03:33.306 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:03:33.307 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:03:33.317 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:03:33.323 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:03:33.333 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****XM4Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****8zmw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000000C",
  "TimeStamp": "2020-07-15T08:03:33Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:03:33.352 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "6f9bfdb7947b4e689928e8d16ee8bc5d",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:03:33.639 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:03:33.641 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:03:33.644 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:03:33.644 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:03:33.646 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:03:33.647 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:03:33.648 +10:00 [DBG] Start discovery request
2020-07-15 18:03:33.678 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:03:33.680 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:03:33.684 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:03:33.687 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:03:33.688 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:03:33.689 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:03:33.690 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:03:33.695 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:03:33.697 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:03:33.699 +10:00 [DBG] Start userinfo request
2020-07-15 18:03:33.699 +10:00 [DBG] Bearer token found in header
2020-07-15 18:03:33.702 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:03:33.703 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:03:33.707 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:03:33.710 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800213,
    "exp": 1594800393,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:03:33.712 +10:00 [DBG] Creating userinfo response
2020-07-15 18:03:33.712 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:03:33.714 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:03:33.715 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:03:33.716 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:03:33.720 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:03:33.721 +10:00 [DBG] End userinfo request
2020-07-15 18:05:08.921 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:08.924 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:08.927 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:08.928 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:08.930 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:08.932 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:08.934 +10:00 [DBG] Start discovery request
2020-07-15 18:05:08.938 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:08.941 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:08.943 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:08.944 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:08.945 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:08.947 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:08.948 +10:00 [DBG] Start discovery request
2020-07-15 18:05:08.979 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:05:08.982 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:05:08.987 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:05:08.989 +10:00 [DBG] Start authorize request
2020-07-15 18:05:08.990 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:08.991 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:05:08.992 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:08.996 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:05:09.000 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "bb738521b8b04a97b37ed94526e7e82b",
  "Nonce": "222e6efe2a9e482ea8147940ead2b41e",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "bb738521b8b04a97b37ed94526e7e82b",
    "nonce": "222e6efe2a9e482ea8147940ead2b41e"
  }
}
2020-07-15 18:05:09.006 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:09.008 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:09.010 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:09.012 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:05:09.015 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:09.016 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:05:09.018 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:05:09.021 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:09.032 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:05:09.033 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:05:09.042 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****yk0w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****PvNQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000000D",
  "TimeStamp": "2020-07-15T08:05:09Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:05:09.047 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "bb738521b8b04a97b37ed94526e7e82b",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:05:10.130 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:10.133 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:10.136 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:10.138 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:10.140 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:10.141 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:10.144 +10:00 [DBG] Start discovery request
2020-07-15 18:05:10.151 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:10.153 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:10.157 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:10.159 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:10.164 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:10.170 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:10.173 +10:00 [DBG] Start discovery request
2020-07-15 18:05:10.183 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:10.185 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:10.188 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:10.190 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:10.219 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:05:10.222 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:10.225 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:10.228 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:05:10.233 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:05:10.235 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:05:10.238 +10:00 [DBG] Start key discovery request
2020-07-15 18:05:10.313 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:10.316 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:10.319 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:10.322 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:10.323 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:10.324 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:10.327 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:05:10.329 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:05:10.331 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:05:10.332 +10:00 [DBG] Start userinfo request
2020-07-15 18:05:10.333 +10:00 [DBG] Bearer token found in header
2020-07-15 18:05:10.337 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:10.339 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:10.343 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:05:10.344 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800309,
    "exp": 1594800489,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:05:10.347 +10:00 [DBG] Creating userinfo response
2020-07-15 18:05:10.347 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:10.348 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:10.352 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:05:10.353 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:10.359 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:05:10.361 +10:00 [DBG] End userinfo request
2020-07-15 18:05:31.191 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:31.193 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:31.196 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:31.197 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:31.198 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:31.200 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:31.201 +10:00 [DBG] Start discovery request
2020-07-15 18:05:31.205 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:31.207 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:31.209 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:31.210 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:31.211 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:31.212 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:31.214 +10:00 [DBG] Start discovery request
2020-07-15 18:05:31.255 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:05:31.257 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:31.274 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:05:31.275 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:31.277 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:05:31.278 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:31.279 +10:00 [DBG] Start authorize request
2020-07-15 18:05:31.281 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:31.282 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:31.287 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:05:31.288 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:31.289 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:05:31.291 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1a87485c2dcc4c17a111468747b19fb5",
  "Nonce": "fb42f781973e442e897d89601d6008e0",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1a87485c2dcc4c17a111468747b19fb5",
    "nonce": "fb42f781973e442e897d89601d6008e0"
  }
}
2020-07-15 18:05:31.298 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:05:31.300 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:05:31.301 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:05:31.303 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:31.329 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:05:31.347 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:05:31.354 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****JSNA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****uOnQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000000F",
  "TimeStamp": "2020-07-15T08:05:31Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:05:31.360 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "1a87485c2dcc4c17a111468747b19fb5",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:05:31.914 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:31.917 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:31.921 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:31.922 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:31.924 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:31.926 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:31.927 +10:00 [DBG] Start discovery request
2020-07-15 18:05:31.947 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:31.948 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:31.951 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:31.953 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:31.959 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:31.960 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:31.962 +10:00 [DBG] Start discovery request
2020-07-15 18:05:32.006 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:05:32.008 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:32.011 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:32.011 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:05:32.013 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:05:32.014 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:05:32.015 +10:00 [DBG] Start key discovery request
2020-07-15 18:05:32.024 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:32.025 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:32.026 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:32.028 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:32.079 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:32.081 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:32.085 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:32.088 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:32.089 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:32.091 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:32.091 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:05:32.093 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:05:32.096 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:05:32.098 +10:00 [DBG] Start userinfo request
2020-07-15 18:05:32.098 +10:00 [DBG] Bearer token found in header
2020-07-15 18:05:32.102 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:32.103 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:32.108 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:05:32.109 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800331,
    "exp": 1594800511,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:05:32.114 +10:00 [DBG] Creating userinfo response
2020-07-15 18:05:32.115 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:32.116 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:32.117 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:05:32.119 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:32.125 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:05:32.126 +10:00 [DBG] End userinfo request
2020-07-15 18:05:36.042 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:36.044 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.047 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.048 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:36.050 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:36.052 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:36.053 +10:00 [DBG] Start discovery request
2020-07-15 18:05:36.057 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:36.059 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.061 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.063 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:36.065 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:36.067 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:36.069 +10:00 [DBG] Start discovery request
2020-07-15 18:05:36.098 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:05:36.101 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:05:36.104 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:05:36.107 +10:00 [DBG] Start authorize request
2020-07-15 18:05:36.108 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:36.109 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:36.113 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:05:36.114 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:36.115 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:36.117 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:36.118 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:05:36.119 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:36.121 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "fe06f10d4a104209ac455c780be300c5",
  "Nonce": "a0c3f5d0bd7a45d6bab9cd9262497739",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "fe06f10d4a104209ac455c780be300c5",
    "nonce": "a0c3f5d0bd7a45d6bab9cd9262497739"
  }
}
2020-07-15 18:05:36.132 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:05:36.133 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:05:36.134 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:05:36.134 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:36.146 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:05:36.147 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:05:36.155 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****PtGQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****F1Lg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000011",
  "TimeStamp": "2020-07-15T08:05:36Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:05:36.160 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "fe06f10d4a104209ac455c780be300c5",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:05:36.590 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:36.603 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.604 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.607 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:36.609 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:36.611 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:36.613 +10:00 [DBG] Start discovery request
2020-07-15 18:05:36.616 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:36.617 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.619 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.620 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:36.621 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:36.626 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:36.630 +10:00 [DBG] Start discovery request
2020-07-15 18:05:36.650 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:36.652 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:36.654 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:05:36.654 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:36.659 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.660 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:36.662 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.664 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:05:36.665 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:05:36.666 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:05:36.668 +10:00 [DBG] Start key discovery request
2020-07-15 18:05:36.713 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:36.716 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:36.719 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:36.722 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:05:36.724 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:05:36.725 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:05:36.729 +10:00 [DBG] Start userinfo request
2020-07-15 18:05:36.731 +10:00 [DBG] Bearer token found in header
2020-07-15 18:05:36.734 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:36.735 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:36.741 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:05:36.742 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800336,
    "exp": 1594800516,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:05:36.745 +10:00 [DBG] Creating userinfo response
2020-07-15 18:05:36.745 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:36.747 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:36.748 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:05:36.752 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:36.759 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:05:36.760 +10:00 [DBG] End userinfo request
2020-07-15 18:05:37.805 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:37.809 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:37.811 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:37.812 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:37.814 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:37.814 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:37.816 +10:00 [DBG] Start discovery request
2020-07-15 18:05:37.822 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:37.830 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:37.831 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:37.832 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:37.836 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:37.838 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:37.845 +10:00 [DBG] Start discovery request
2020-07-15 18:05:37.851 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:05:37.853 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:05:37.855 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:05:37.857 +10:00 [DBG] Start authorize request
2020-07-15 18:05:37.858 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:37.860 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:05:37.860 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:37.862 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:05:37.863 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ea3192dbfb9a42f595f8e3b314af04fa",
  "Nonce": "b251afda204143719deabefe67d87787",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ea3192dbfb9a42f595f8e3b314af04fa",
    "nonce": "b251afda204143719deabefe67d87787"
  }
}
2020-07-15 18:05:37.874 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:05:37.875 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:05:37.876 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:05:37.877 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:05:37.892 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:05:37.894 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:37.894 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:05:37.895 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:37.903 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:37.904 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:37.906 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zz_w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****bkUQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000013",
  "TimeStamp": "2020-07-15T08:05:37Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:05:37.909 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "ea3192dbfb9a42f595f8e3b314af04fa",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:05:38.318 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:38.320 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:38.323 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:38.324 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:38.338 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:38.342 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:38.343 +10:00 [DBG] Start discovery request
2020-07-15 18:05:38.347 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:05:38.348 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:38.350 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:38.350 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:05:38.355 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:05:38.356 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:05:38.357 +10:00 [DBG] Start discovery request
2020-07-15 18:05:38.387 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:05:38.389 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:05:38.390 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:05:38.393 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:38.395 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:05:38.397 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:38.398 +10:00 [DBG] Rendering check session result
2020-07-15 18:05:38.401 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:05:38.405 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:05:38.406 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:05:38.409 +10:00 [DBG] Start key discovery request
2020-07-15 18:05:38.451 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:38.453 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:38.456 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:38.460 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:05:38.461 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:05:38.466 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:05:38.467 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:05:38.468 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:05:38.469 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:05:38.471 +10:00 [DBG] Start userinfo request
2020-07-15 18:05:38.471 +10:00 [DBG] Bearer token found in header
2020-07-15 18:05:38.475 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:38.476 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:05:38.483 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:05:38.485 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800337,
    "exp": 1594800517,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:05:38.487 +10:00 [DBG] Creating userinfo response
2020-07-15 18:05:38.488 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:38.489 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:38.491 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:05:38.493 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:05:38.502 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:05:38.504 +10:00 [DBG] End userinfo request
2020-07-15 18:07:38.593 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:07:38.598 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:07:38.603 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:07:38.605 +10:00 [DBG] Start authorize request
2020-07-15 18:07:38.608 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:07:38.614 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:07:38.616 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:07:38.619 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:07:38.621 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8dd16431c7084564a052a78d842180d1",
  "Nonce": "70adec9f946f4bd481d7f49c482eb8ad",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8dd16431c7084564a052a78d842180d1",
    "nonce": "70adec9f946f4bd481d7f49c482eb8ad",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDAzMzcsImV4cCI6MTU5NDgwMDYzNywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJiMjUxYWZkYTIwNDE0MzcxOWRlYWJlZmU2N2Q4Nzc4NyIsImlhdCI6MTU5NDgwMDMzNywiYXRfaGFzaCI6IlZ6YmZkejgwYzhYR0VyYkZPb09iMGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MNXcOQlgUxz-3HRZogaK4kIJm8fv-EKh3NkKMcxa3kzBBIUPoqIBPl3ih4TpxqW1IMQnoxK5GaWKUpYkikKNtI6lKtoLK15tLpzp5vOlV_Psyp3ciFWSdLjmWjIfo5pRAYaiKZTqBrso3lRed4_yUs_hJ8QJtXrLPKTy5k5zolq2btxmaewa8a8PTABY_NCwFoKG1SN1F5L5181d3mfSBklh5FGUur7IUS5F4ue8E0GelUuPKkLl1fdRrk7xSpACJbwGEpyMzk_CQ4ugfhMFKRuDZbUbs3hLd9SIWWCh5AeW0ZZRHA2sr4nLE04Ee3RihDcDrBu104fANYuhmczz_w"
  }
}
2020-07-15 18:07:38.646 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:07:38.647 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:07:38.648 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:07:38.650 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:07:38.663 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:07:38.665 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:07:38.672 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****txVA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****90jw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000015",
  "TimeStamp": "2020-07-15T08:07:38Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:07:38.680 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "8dd16431c7084564a052a78d842180d1",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:07:39.419 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:07:39.422 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:07:39.426 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:07:39.426 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:07:39.428 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:07:39.429 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:07:39.431 +10:00 [DBG] Start discovery request
2020-07-15 18:07:39.447 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:07:39.450 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:07:39.454 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:07:39.456 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:07:39.457 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:07:39.458 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:07:39.460 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:07:39.461 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:07:39.462 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:07:39.463 +10:00 [DBG] Start userinfo request
2020-07-15 18:07:39.464 +10:00 [DBG] Bearer token found in header
2020-07-15 18:07:39.468 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:07:39.469 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:07:39.473 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:07:39.474 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800458,
    "exp": 1594800638,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:07:39.476 +10:00 [DBG] Creating userinfo response
2020-07-15 18:07:39.477 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:07:39.478 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:07:39.479 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:07:39.483 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:07:39.487 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:07:39.489 +10:00 [DBG] End userinfo request
2020-07-15 18:09:39.530 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:09:39.536 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:09:39.538 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:09:39.541 +10:00 [DBG] Start authorize request
2020-07-15 18:09:39.545 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:09:39.548 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:09:39.550 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:09:39.553 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:09:39.559 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "008b996c82b547c19ce85b02799d0338",
  "Nonce": "b0f89761f3984019a1380a458cb4e00f",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "008b996c82b547c19ce85b02799d0338",
    "nonce": "b0f89761f3984019a1380a458cb4e00f",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDA0NTgsImV4cCI6MTU5NDgwMDc1OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3MGFkZWM5Zjk0NmY0YmQ0ODFkN2Y0OWM0ODJlYjhhZCIsImlhdCI6MTU5NDgwMDQ1OCwiYXRfaGFzaCI6ImIyVXZpT19VY2lzSl9yODhxV01ydkEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.PnH59WISAq920SLYXN4N_vZ93kaRG0Mpf-McFqF0EwR9EJDm5z4Y7_oXJVF8OEe_Grql3tQrbYpMPxr7UUPubY5nEdD5-8XE6dV6J5RxRorYfgel-xCD4en-CUw0u2isyVNwu-WQBF_sVYLY_RED_v9F1t-3cGfYwcboW4ZEdH2dSoGvzgf3rGL09_DFpa0PUQf_uigBjrdQ60X3YnKg_IqOvhS-SGM4Jkaa8sm0LNvlqlmINt5JTpMiBjPHP7ocsk2Mi0HI5ZI-QeyJNjAtoXk41dQKW0UzJY7BmzqfnfATIU19VHQ8Kd-mW_N5RNYomZr1ve7n0ycu8kl9cRtxVA"
  }
}
2020-07-15 18:09:39.583 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:09:39.584 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:09:39.585 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:09:39.587 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:09:39.599 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:09:39.602 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:09:39.609 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****i2ag"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****9m4g"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000016",
  "TimeStamp": "2020-07-15T08:09:39Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:09:39.614 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "008b996c82b547c19ce85b02799d0338",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:09:40.254 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:09:40.256 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:09:40.259 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:09:40.260 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:09:40.261 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:09:40.262 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:09:40.264 +10:00 [DBG] Start discovery request
2020-07-15 18:09:40.284 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:09:40.287 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:09:40.289 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:09:40.292 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:09:40.294 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:09:40.295 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:09:40.298 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:09:40.300 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:09:40.301 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:09:40.304 +10:00 [DBG] Start userinfo request
2020-07-15 18:09:40.304 +10:00 [DBG] Bearer token found in header
2020-07-15 18:09:40.307 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:09:40.309 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:09:40.313 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:09:40.315 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800579,
    "exp": 1594800759,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:09:40.318 +10:00 [DBG] Creating userinfo response
2020-07-15 18:09:40.320 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:09:40.322 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:09:40.323 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:09:40.324 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:09:40.329 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:09:40.331 +10:00 [DBG] End userinfo request
2020-07-15 18:10:45.388 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:10:45.390 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:45.397 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:45.399 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:10:45.402 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:10:45.405 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:10:45.406 +10:00 [DBG] Start discovery request
2020-07-15 18:10:45.410 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:10:45.412 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:45.415 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:45.417 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:10:45.419 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:10:45.420 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:10:45.422 +10:00 [DBG] Start discovery request
2020-07-15 18:10:45.444 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:10:45.450 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:10:45.451 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:10:45.453 +10:00 [DBG] Start authorize request
2020-07-15 18:10:45.454 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:10:45.455 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:10:45.458 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:10:45.460 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:10:45.462 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "843cca8e61dc44d09c1d2815f68c38e7",
  "Nonce": "39bfb96ecb044d35a6c20be4c7d37804",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "843cca8e61dc44d09c1d2815f68c38e7",
    "nonce": "39bfb96ecb044d35a6c20be4c7d37804"
  }
}
2020-07-15 18:10:45.470 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:10:45.470 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:10:45.471 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:10:45.472 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:10:45.485 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:10:45.486 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:10:45.487 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:10:45.491 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:10:45.494 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****XVSg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****OCBg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000017",
  "TimeStamp": "2020-07-15T08:10:45Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:10:45.495 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:10:45.499 +10:00 [DBG] Rendering check session result
2020-07-15 18:10:45.509 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "843cca8e61dc44d09c1d2815f68c38e7",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:10:45.976 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:10:45.978 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:45.981 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:45.982 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:10:45.984 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:10:45.985 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:10:45.988 +10:00 [DBG] Start discovery request
2020-07-15 18:10:46.013 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:10:46.016 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:46.019 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:46.023 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:10:46.025 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:10:46.033 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:10:46.033 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:10:46.034 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:10:46.036 +10:00 [DBG] Start discovery request
2020-07-15 18:10:46.037 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:10:46.044 +10:00 [DBG] Rendering check session result
2020-07-15 18:10:46.075 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:10:46.084 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:46.086 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:46.088 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:10:46.093 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:10:46.098 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:10:46.101 +10:00 [DBG] Start key discovery request
2020-07-15 18:10:46.175 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:10:46.177 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:46.181 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:46.184 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:10:46.185 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:10:46.186 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:10:46.187 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:10:46.192 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:10:46.194 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:10:46.195 +10:00 [DBG] Start userinfo request
2020-07-15 18:10:46.197 +10:00 [DBG] Bearer token found in header
2020-07-15 18:10:46.201 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:10:46.203 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:10:46.207 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:10:46.209 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800645,
    "exp": 1594800825,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:10:46.211 +10:00 [DBG] Creating userinfo response
2020-07-15 18:10:46.215 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:10:46.217 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:10:46.219 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:10:46.222 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:10:46.228 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:10:46.232 +10:00 [DBG] End userinfo request
2020-07-15 18:11:17.090 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:17.093 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:17.096 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:17.098 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:17.101 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:17.113 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:17.117 +10:00 [DBG] Start discovery request
2020-07-15 18:11:17.123 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:17.125 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:17.132 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:17.133 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:17.136 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:17.137 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:17.144 +10:00 [DBG] Start discovery request
2020-07-15 18:11:17.162 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:11:17.177 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:11:17.179 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:11:17.181 +10:00 [DBG] Start authorize request
2020-07-15 18:11:17.182 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:11:17.184 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:11:17.188 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:17.190 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:11:17.193 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "95d6c56088884f279b4533c386b65c74",
  "Nonce": "050010bddb954fe48340d58fc73bc825",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "95d6c56088884f279b4533c386b65c74",
    "nonce": "050010bddb954fe48340d58fc73bc825"
  }
}
2020-07-15 18:11:17.208 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:11:17.209 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:11:17.210 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:11:17.211 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:11:17.223 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:11:17.224 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:11:17.233 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****gsrw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dhDg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000019",
  "TimeStamp": "2020-07-15T08:11:17Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:11:17.240 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "95d6c56088884f279b4533c386b65c74",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:11:17.258 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:11:17.261 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:11:17.267 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:11:17.270 +10:00 [DBG] Rendering check session result
2020-07-15 18:11:17.775 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:17.797 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:17.805 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:17.812 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:17.822 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:17.824 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:17.826 +10:00 [DBG] Start discovery request
2020-07-15 18:11:17.836 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:17.839 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:17.847 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:17.850 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:17.852 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:11:17.858 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:11:17.858 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:17.859 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:11:17.862 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:17.864 +10:00 [DBG] Rendering check session result
2020-07-15 18:11:17.869 +10:00 [DBG] Start discovery request
2020-07-15 18:11:17.896 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:11:17.905 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:17.906 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:17.912 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:11:17.916 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:11:17.918 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:11:17.920 +10:00 [DBG] Start key discovery request
2020-07-15 18:11:17.999 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:11:18.001 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:18.004 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:18.007 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:11:18.008 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:18.010 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:18.011 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:11:18.018 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:11:18.019 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:11:18.021 +10:00 [DBG] Start userinfo request
2020-07-15 18:11:18.022 +10:00 [DBG] Bearer token found in header
2020-07-15 18:11:18.029 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:18.032 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:18.041 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:11:18.043 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800677,
    "exp": 1594800857,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:11:18.056 +10:00 [DBG] Creating userinfo response
2020-07-15 18:11:18.057 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:18.061 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:18.071 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:11:18.074 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:18.083 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:11:18.085 +10:00 [DBG] End userinfo request
2020-07-15 18:11:36.201 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:36.206 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:36.209 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:36.210 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:36.212 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:36.213 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:36.221 +10:00 [DBG] Start discovery request
2020-07-15 18:11:36.228 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:36.230 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:36.233 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:36.236 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:36.240 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:36.241 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:36.249 +10:00 [DBG] Start discovery request
2020-07-15 18:11:36.260 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:11:36.263 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:11:36.265 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:11:36.268 +10:00 [DBG] Start authorize request
2020-07-15 18:11:36.269 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:11:36.271 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:11:36.271 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:36.277 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:11:36.278 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8e5a3d013d7745f186848c9fe2bd21a3",
  "Nonce": "eac8617aa8ac4f889fb7132eef2d2e08",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8e5a3d013d7745f186848c9fe2bd21a3",
    "nonce": "eac8617aa8ac4f889fb7132eef2d2e08"
  }
}
2020-07-15 18:11:36.287 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:11:36.288 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:11:36.289 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:11:36.290 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:11:36.300 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:11:36.301 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:11:36.308 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:11:36.310 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****e6nQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****_sQA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000001C",
  "TimeStamp": "2020-07-15T08:11:36Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:11:36.312 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:11:36.318 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "8e5a3d013d7745f186848c9fe2bd21a3",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:11:36.320 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:11:36.325 +10:00 [DBG] Rendering check session result
2020-07-15 18:11:36.955 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:36.959 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:36.962 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:36.964 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:36.965 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:36.977 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:36.979 +10:00 [DBG] Start discovery request
2020-07-15 18:11:36.983 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:11:36.984 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:36.991 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:36.994 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:11:37.015 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:11:37.017 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:11:37.021 +10:00 [DBG] Start discovery request
2020-07-15 18:11:37.046 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:11:37.046 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:11:37.053 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:37.054 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:11:37.057 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:37.058 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:11:37.059 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:11:37.064 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:11:37.066 +10:00 [DBG] Rendering check session result
2020-07-15 18:11:37.068 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:11:37.081 +10:00 [DBG] Start key discovery request
2020-07-15 18:11:37.159 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:11:37.162 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:37.165 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:37.169 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:11:37.174 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:11:37.177 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:11:37.181 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:11:37.183 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:11:37.190 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:11:37.194 +10:00 [DBG] Start userinfo request
2020-07-15 18:11:37.195 +10:00 [DBG] Bearer token found in header
2020-07-15 18:11:37.203 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:37.206 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:11:37.215 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:11:37.217 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800696,
    "exp": 1594800876,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:11:37.224 +10:00 [DBG] Creating userinfo response
2020-07-15 18:11:37.225 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:37.232 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:37.235 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:11:37.239 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:11:37.251 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:11:37.255 +10:00 [DBG] End userinfo request
2020-07-15 18:13:37.318 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:13:37.321 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:13:37.324 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:13:37.326 +10:00 [DBG] Start authorize request
2020-07-15 18:13:37.327 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:13:37.328 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:13:37.329 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:13:37.330 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:13:37.331 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "fb685926ab1b48d2a7ebce0c25717b69",
  "Nonce": "fe25c5d643844e03862ddb17a6bc09fa",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "fb685926ab1b48d2a7ebce0c25717b69",
    "nonce": "fe25c5d643844e03862ddb17a6bc09fa",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDA2OTYsImV4cCI6MTU5NDgwMDk5NiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJlYWM4NjE3YWE4YWM0Zjg4OWZiNzEzMmVlZjJkMmUwOCIsImlhdCI6MTU5NDgwMDY5NiwiYXRfaGFzaCI6IldoaWdPR190QUE1YWRySzJ3OXFNa3ciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Pb6MzIbqAivxagTrfsR-8ImAh5T1P3hqm1TtVsbFBdoahQJYrxd1xKNm1n_g9vyCzNakzpZT35k06OYnUpL27gDES6TA4-9pi3sfViq6FqAN13g199wB9ULY-wjcnpwCZQrqti87JWj5u5fqOJOU0c5KmPghqkqD3BB4wmlNtMGFncwo8yYPouxb6xyhOp_M1f-kXyZZX7wBuu0_JA_XO5ZF8_CcjvbNykJmkIfWONUYRWF1kTfm_ZwIukKLKPrDr9EVsjI_x7M7kfDv_hJCdL92o9FpLwb0Z3aWfMuUUpRtoQ-Yns_BQgQzqONDV3taQ6_3iN17dDKbBhBHyre6nQ"
  }
}
2020-07-15 18:13:37.352 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:13:37.353 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:13:37.354 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:13:37.356 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:13:37.369 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:13:37.371 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:13:37.378 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****fv4Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****B9TA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000001E",
  "TimeStamp": "2020-07-15T08:13:37Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:13:37.381 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "fb685926ab1b48d2a7ebce0c25717b69",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:13:38.015 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:13:38.018 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:13:38.020 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:13:38.021 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:13:38.022 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:13:38.024 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:13:38.029 +10:00 [DBG] Start discovery request
2020-07-15 18:13:38.061 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:13:38.063 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:13:38.066 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:13:38.069 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:13:38.070 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:13:38.071 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:13:38.072 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:13:38.074 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:13:38.077 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:13:38.078 +10:00 [DBG] Start userinfo request
2020-07-15 18:13:38.079 +10:00 [DBG] Bearer token found in header
2020-07-15 18:13:38.083 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:13:38.084 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:13:38.090 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:13:38.092 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800817,
    "exp": 1594800997,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:13:38.094 +10:00 [DBG] Creating userinfo response
2020-07-15 18:13:38.095 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:13:38.097 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:13:38.098 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:13:38.100 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:13:38.109 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:13:38.109 +10:00 [DBG] End userinfo request
2020-07-15 18:15:38.196 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:15:38.202 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:15:38.206 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:15:38.209 +10:00 [DBG] Start authorize request
2020-07-15 18:15:38.212 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:15:38.219 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:15:38.221 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:15:38.224 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:15:38.227 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "65d5f59f058447b2aa862ef4f33890c0",
  "Nonce": "675a299c279d44709cc9defa45790eb7",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "65d5f59f058447b2aa862ef4f33890c0",
    "nonce": "675a299c279d44709cc9defa45790eb7",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDA4MTcsImV4cCI6MTU5NDgwMTExNywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJmZTI1YzVkNjQzODQ0ZTAzODYyZGRiMTdhNmJjMDlmYSIsImlhdCI6MTU5NDgwMDgxNywiYXRfaGFzaCI6Ind0WWwwaGdlSFlxRTdiZDRDa1FpLVEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.qHDGYTcIAusjvo6Ww6_LENPi-e53wIUMh6Cw6EF5iDGVs1MBK0BRx0C5U6STYKpAkygIL4SyjWwohvX-5TJ7jrdnXm1I6XRhMiag2l0WH1L4ATZmq5Odff6k16axvHu0vVAEW6pSHe7YaB_OOsvLw0AOtrPG0-na6rhWEDJR195FxHKNaU68-CNa6UUmFNfykj95AVpfI8vhIzlAQ_OVnR7xJ3HGmSC_lDtGvBuFMHLxuDKJqzucmbZ3PGYOZhr_9JyWI289v9anEwiFY82CkCpooRQbkVcN9VnD3kmy6ShwbtF7Vb83o7jrbegXX9tF7Nsg3BvtPZ2XCjv63Cfv4Q"
  }
}
2020-07-15 18:15:38.249 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:15:38.250 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:15:38.254 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:15:38.256 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:15:38.271 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:15:38.273 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:15:38.287 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****tRhg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Xr6A"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:0000001F",
  "TimeStamp": "2020-07-15T08:15:38Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:15:38.293 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "65d5f59f058447b2aa862ef4f33890c0",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:15:39.051 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:15:39.051 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:15:39.054 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:15:39.057 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:15:39.059 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:15:39.060 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:15:39.061 +10:00 [DBG] Start discovery request
2020-07-15 18:15:39.081 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:15:39.082 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:15:39.083 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:15:39.086 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:15:39.087 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:15:39.088 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:15:39.092 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:15:39.095 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:15:39.096 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:15:39.098 +10:00 [DBG] Start userinfo request
2020-07-15 18:15:39.098 +10:00 [DBG] Bearer token found in header
2020-07-15 18:15:39.103 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:15:39.104 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:15:39.108 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:15:39.109 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594800938,
    "exp": 1594801118,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:15:39.112 +10:00 [DBG] Creating userinfo response
2020-07-15 18:15:39.113 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:15:39.117 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:15:39.118 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:15:39.120 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:15:39.125 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:15:39.128 +10:00 [DBG] End userinfo request
2020-07-15 18:17:39.168 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:17:39.170 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:17:39.172 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:17:39.174 +10:00 [DBG] Start authorize request
2020-07-15 18:17:39.175 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:17:39.176 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:17:39.177 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:17:39.178 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:17:39.181 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1ce48b22fe804960b91249bbbcc53c1d",
  "Nonce": "0c245326662e42c1b3dbf8677186c83a",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1ce48b22fe804960b91249bbbcc53c1d",
    "nonce": "0c245326662e42c1b3dbf8677186c83a",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDA5MzgsImV4cCI6MTU5NDgwMTIzOCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI2NzVhMjk5YzI3OWQ0NDcwOWNjOWRlZmE0NTc5MGViNyIsImlhdCI6MTU5NDgwMDkzOCwiYXRfaGFzaCI6InZQbmhyb1JUMDZSdmJ2ZWpFeGc1NHciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.RARmVyjJSh2CQQRLtOxTyz-j-LdYItQS9j-C_IEKXju0O9AxufFeyWZ4DRdwDi06rSoE4aXPGVfaVKzAkoNWr5BtZgzox8Eo18EdW5ZFen4Z7kbqpP_htfGj_UlvRjxfv_txWobK5FTQruK-aBwHUGil8jXFHO2U90AOXUb43N3bXHZXZW1ROkLCy01pQYr-n0kaZ6iRJZABUEwjgN8cRanM5nACPLgFtL7w7SU9Ud__mQtgWeHqs8TaDa6wCAZHwYk6pcCvct2kEtlruyY9Hhwwh1aDL0_To_zqJU1aFeOOipKdIT-ChneJsQIp0NMoqvVIZFpLLnJGXCW5NttRhg"
  }
}
2020-07-15 18:17:39.189 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:17:39.191 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:17:39.192 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:17:39.193 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:17:39.201 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:17:39.203 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:17:39.208 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3wPA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****hoFw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UD:00000020",
  "TimeStamp": "2020-07-15T08:17:39Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:17:39.209 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "1ce48b22fe804960b91249bbbcc53c1d",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:17:39.501 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:17:39.503 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:17:39.504 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:17:39.505 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:17:39.505 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:17:39.505 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:17:39.506 +10:00 [DBG] Start discovery request
2020-07-15 18:17:39.538 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:17:39.539 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:17:39.539 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:17:39.542 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:17:39.542 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:17:39.543 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:17:39.543 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:17:39.544 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:17:39.545 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:17:39.546 +10:00 [DBG] Start userinfo request
2020-07-15 18:17:39.546 +10:00 [DBG] Bearer token found in header
2020-07-15 18:17:39.549 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:17:39.554 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:17:39.558 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:17:39.559 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801059,
    "exp": 1594801239,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:17:39.562 +10:00 [DBG] Creating userinfo response
2020-07-15 18:17:39.568 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:17:39.569 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:17:39.570 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:17:39.571 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:17:39.577 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:17:39.579 +10:00 [DBG] End userinfo request
2020-07-15 18:19:39.671 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:19:39.673 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:19:39.674 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:19:39.675 +10:00 [DBG] Start authorize request
2020-07-15 18:19:39.676 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:19:39.676 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:19:39.677 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:19:39.677 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:19:39.678 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b14d6fd17728420a8fe77feea65e69c9",
  "Nonce": "c52fcd7de2164bc9beb0890260e23b30",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b14d6fd17728420a8fe77feea65e69c9",
    "nonce": "c52fcd7de2164bc9beb0890260e23b30",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDEwNTksImV4cCI6MTU5NDgwMTM1OSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwYzI0NTMyNjY2MmU0MmMxYjNkYmY4Njc3MTg2YzgzYSIsImlhdCI6MTU5NDgwMTA1OSwiYXRfaGFzaCI6IkpuRERuQVZYM1IyWU5YNkhRY3A0enciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.ojhXooUYGuv2iA0gRBI55X_I0u7-aaPDEvjf_tas7Uxigsn7wKditDauqbNqLYcihzPB8mg9Qgkp08MChhT4qSIomHAQakquOTj45AntTbqOzp7YTaQjQnN3FEdAl4WcDXZpDpK_ftW60Pl8HlmzrE73Fbxuj5ZP8FBwDChcOpZ6p2qKAajwC9RJVraCSkfUYWbrw1Fe6nyqEbdRYDAjPfPsFY6Sfl2GT7MCXbYHIDEsr5FbdTecucxJlsjFrBnwCMgulL3WNoANFx6Cu16zzbeyujh_-WKjQOZ1opjtSMbmenwk3GLjPa5u-dvXQAIobfyrEteaDe__xjRTMu3wPA"
  }
}
2020-07-15 18:19:39.689 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:19:39.690 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:19:39.691 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:19:39.691 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:19:39.704 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:19:39.705 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:19:39.710 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****09gw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****w-4w"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000001",
  "TimeStamp": "2020-07-15T08:19:39Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:19:39.712 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "b14d6fd17728420a8fe77feea65e69c9",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:19:40.229 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:19:40.241 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:19:40.241 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:19:40.242 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:19:40.244 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:19:40.245 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:19:40.245 +10:00 [DBG] Start discovery request
2020-07-15 18:19:40.269 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:19:40.270 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:19:40.271 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:19:40.274 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:19:40.275 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:19:40.276 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:19:40.276 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:19:40.277 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:19:40.278 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:19:40.278 +10:00 [DBG] Start userinfo request
2020-07-15 18:19:40.278 +10:00 [DBG] Bearer token found in header
2020-07-15 18:19:40.283 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:19:40.287 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:19:40.291 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:19:40.292 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801179,
    "exp": 1594801359,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:19:40.294 +10:00 [DBG] Creating userinfo response
2020-07-15 18:19:40.294 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:19:40.295 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:19:40.296 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:19:40.301 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:19:40.308 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:19:40.309 +10:00 [DBG] End userinfo request
2020-07-15 18:20:44.013 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:44.015 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.015 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.016 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:44.017 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:44.018 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:44.018 +10:00 [DBG] Start discovery request
2020-07-15 18:20:44.021 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:44.022 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.023 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.023 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:44.024 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:44.024 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:44.029 +10:00 [DBG] Start discovery request
2020-07-15 18:20:44.059 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:20:44.060 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:44.062 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:20:44.062 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:44.063 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:20:44.063 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:44.064 +10:00 [DBG] Start authorize request
2020-07-15 18:20:44.064 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:44.066 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:44.066 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:20:44.067 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:44.067 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:20:44.069 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3bf7ef4b1c544beeb4afeb3b20499b32",
  "Nonce": "9192fa777a7246cb99e088f66c3826df",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3bf7ef4b1c544beeb4afeb3b20499b32",
    "nonce": "9192fa777a7246cb99e088f66c3826df"
  }
}
2020-07-15 18:20:44.074 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:20:44.076 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:20:44.077 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:20:44.077 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:44.087 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:20:44.089 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:20:44.095 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****P_5w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****f23g"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000002",
  "TimeStamp": "2020-07-15T08:20:44Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:20:44.104 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "3bf7ef4b1c544beeb4afeb3b20499b32",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:20:44.354 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:44.356 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.356 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.357 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:44.358 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:44.358 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:44.359 +10:00 [DBG] Start discovery request
2020-07-15 18:20:44.362 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:44.362 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.363 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.363 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:44.364 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:44.371 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:44.373 +10:00 [DBG] Start discovery request
2020-07-15 18:20:44.375 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:44.376 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:44.377 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:44.377 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:44.385 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:20:44.386 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.387 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.388 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:20:44.389 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:20:44.389 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:20:44.390 +10:00 [DBG] Start key discovery request
2020-07-15 18:20:44.424 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:44.425 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.426 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.428 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:44.429 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:44.429 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:44.429 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:20:44.430 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:20:44.431 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:20:44.431 +10:00 [DBG] Start userinfo request
2020-07-15 18:20:44.431 +10:00 [DBG] Bearer token found in header
2020-07-15 18:20:44.435 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:44.439 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:44.441 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:20:44.442 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801244,
    "exp": 1594801424,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:20:44.443 +10:00 [DBG] Creating userinfo response
2020-07-15 18:20:44.443 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:44.443 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:44.444 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:20:44.444 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:44.448 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:20:44.448 +10:00 [DBG] End userinfo request
2020-07-15 18:20:46.098 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:46.099 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.099 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.100 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:46.100 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:46.101 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:46.102 +10:00 [DBG] Start discovery request
2020-07-15 18:20:46.107 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:46.110 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.110 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.111 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:46.111 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:46.112 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:46.113 +10:00 [DBG] Start discovery request
2020-07-15 18:20:46.125 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:20:46.126 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:20:46.126 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:20:46.127 +10:00 [DBG] Start authorize request
2020-07-15 18:20:46.127 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:46.128 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:20:46.128 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:46.129 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:20:46.129 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "686cc63184584b37b88adbbfc84678b9",
  "Nonce": "08a84d49cc004119a4a11a547ed1fbf3",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "686cc63184584b37b88adbbfc84678b9",
    "nonce": "08a84d49cc004119a4a11a547ed1fbf3"
  }
}
2020-07-15 18:20:46.137 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:46.139 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:46.140 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:46.140 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:46.141 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:20:46.142 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:20:46.142 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:20:46.143 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:46.153 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:20:46.153 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:20:46.158 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3CbQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****UZtQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000004",
  "TimeStamp": "2020-07-15T08:20:46Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:20:46.160 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "686cc63184584b37b88adbbfc84678b9",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:20:46.325 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:46.327 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.328 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.329 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:46.330 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:46.331 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:46.331 +10:00 [DBG] Start discovery request
2020-07-15 18:20:46.335 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:46.336 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.340 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.340 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:46.341 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:46.342 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:46.342 +10:00 [DBG] Start discovery request
2020-07-15 18:20:46.353 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:46.353 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:46.354 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:46.355 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:46.356 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:20:46.357 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.357 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.358 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:20:46.359 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:20:46.360 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:20:46.360 +10:00 [DBG] Start key discovery request
2020-07-15 18:20:46.396 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:46.397 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:46.398 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:46.398 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:20:46.399 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:20:46.400 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:20:46.400 +10:00 [DBG] Start userinfo request
2020-07-15 18:20:46.400 +10:00 [DBG] Bearer token found in header
2020-07-15 18:20:46.405 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:46.405 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:46.413 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:20:46.413 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801246,
    "exp": 1594801426,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:20:46.415 +10:00 [DBG] Creating userinfo response
2020-07-15 18:20:46.415 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:46.415 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:46.416 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:20:46.416 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:46.421 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:20:46.421 +10:00 [DBG] End userinfo request
2020-07-15 18:20:49.031 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:49.033 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.033 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.034 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:49.034 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:49.035 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:49.035 +10:00 [DBG] Start discovery request
2020-07-15 18:20:49.039 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:49.040 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.040 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.041 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:49.045 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:49.045 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:49.046 +10:00 [DBG] Start discovery request
2020-07-15 18:20:49.056 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:20:49.057 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:20:49.058 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:20:49.059 +10:00 [DBG] Start authorize request
2020-07-15 18:20:49.060 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:49.060 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:20:49.061 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:49.062 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:20:49.062 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "78fbebfdcc4d4765a89d1ba50aa993d9",
  "Nonce": "ebec071afd9d4d95a7366cf3a09aea6a",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "78fbebfdcc4d4765a89d1ba50aa993d9",
    "nonce": "ebec071afd9d4d95a7366cf3a09aea6a"
  }
}
2020-07-15 18:20:49.065 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:49.067 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:20:49.071 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:49.071 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:20:49.072 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:49.072 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:20:49.072 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:49.073 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:49.085 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:20:49.088 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:20:49.094 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****wQ-w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****kJTw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000006",
  "TimeStamp": "2020-07-15T08:20:49Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:20:49.095 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "78fbebfdcc4d4765a89d1ba50aa993d9",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:20:49.261 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:49.262 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.263 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.263 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:49.264 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:49.265 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:49.265 +10:00 [DBG] Start discovery request
2020-07-15 18:20:49.269 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:49.270 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.270 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.271 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:49.271 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:49.272 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:49.272 +10:00 [DBG] Start discovery request
2020-07-15 18:20:49.284 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:49.285 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:49.286 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:20:49.288 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:49.288 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.288 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:49.289 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.290 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:20:49.290 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:20:49.291 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:20:49.292 +10:00 [DBG] Start key discovery request
2020-07-15 18:20:49.324 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:49.326 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:49.329 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:49.329 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:20:49.342 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:20:49.343 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:20:49.343 +10:00 [DBG] Start userinfo request
2020-07-15 18:20:49.344 +10:00 [DBG] Bearer token found in header
2020-07-15 18:20:49.353 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:49.364 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:49.367 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:20:49.368 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801249,
    "exp": 1594801429,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:20:49.371 +10:00 [DBG] Creating userinfo response
2020-07-15 18:20:49.371 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:49.372 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:49.372 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:20:49.372 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:49.377 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:20:49.377 +10:00 [DBG] End userinfo request
2020-07-15 18:20:54.015 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:54.016 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.017 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.017 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:54.018 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:54.018 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:54.019 +10:00 [DBG] Start discovery request
2020-07-15 18:20:54.022 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:54.023 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.023 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.023 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:54.025 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:54.025 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:54.026 +10:00 [DBG] Start discovery request
2020-07-15 18:20:54.042 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:20:54.042 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:20:54.045 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:20:54.045 +10:00 [DBG] Start authorize request
2020-07-15 18:20:54.046 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:54.047 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:20:54.048 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:54.048 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:20:54.049 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b33ede4a151d4133bbe35db7b910864f",
  "Nonce": "c658892d7bd64b9892444b20168242af",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b33ede4a151d4133bbe35db7b910864f",
    "nonce": "c658892d7bd64b9892444b20168242af"
  }
}
2020-07-15 18:20:54.051 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:54.051 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:54.052 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:54.052 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:54.056 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:20:54.058 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:20:54.059 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:20:54.059 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:54.068 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:20:54.069 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:20:54.075 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uB3Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****JqDg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000008",
  "TimeStamp": "2020-07-15T08:20:54Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:20:54.077 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "b33ede4a151d4133bbe35db7b910864f",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:20:54.253 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:54.264 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.265 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.265 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:54.266 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:54.267 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:54.267 +10:00 [DBG] Start discovery request
2020-07-15 18:20:54.269 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:54.271 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.272 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.273 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:54.273 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:54.274 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:54.274 +10:00 [DBG] Start discovery request
2020-07-15 18:20:54.290 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:20:54.291 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.293 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.294 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:54.295 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:20:54.295 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:54.296 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:20:54.296 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:54.296 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:20:54.297 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:54.297 +10:00 [DBG] Start key discovery request
2020-07-15 18:20:54.328 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:54.330 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.330 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.332 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:54.333 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:54.334 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:54.334 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:20:54.335 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:20:54.336 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:20:54.336 +10:00 [DBG] Start userinfo request
2020-07-15 18:20:54.336 +10:00 [DBG] Bearer token found in header
2020-07-15 18:20:54.340 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:54.341 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:54.347 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:20:54.348 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801254,
    "exp": 1594801434,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:20:54.349 +10:00 [DBG] Creating userinfo response
2020-07-15 18:20:54.349 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:54.350 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:54.350 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:20:54.350 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:54.354 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:20:54.356 +10:00 [DBG] End userinfo request
2020-07-15 18:20:58.453 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:58.464 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.465 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.467 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:58.468 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:58.468 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:58.469 +10:00 [DBG] Start discovery request
2020-07-15 18:20:58.471 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:58.472 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.473 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.473 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:58.474 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:58.475 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:58.476 +10:00 [DBG] Start discovery request
2020-07-15 18:20:58.495 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:20:58.496 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:20:58.497 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:20:58.497 +10:00 [DBG] Start authorize request
2020-07-15 18:20:58.498 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:58.498 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:20:58.498 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:58.499 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:20:58.500 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "6e71e5d7773b490ebe13b7d9895ae726",
  "Nonce": "0a23bee44c8a44f19e5f5756b896733b",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "6e71e5d7773b490ebe13b7d9895ae726",
    "nonce": "0a23bee44c8a44f19e5f5756b896733b"
  }
}
2020-07-15 18:20:58.505 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:20:58.505 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:20:58.506 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:20:58.507 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:20:58.509 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:58.511 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:58.512 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:58.512 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:58.521 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:20:58.524 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:20:58.531 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ITUw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****DILw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000000A",
  "TimeStamp": "2020-07-15T08:20:58Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:20:58.532 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "6e71e5d7773b490ebe13b7d9895ae726",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:20:58.704 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:58.705 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.705 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.706 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:58.707 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:58.708 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:58.708 +10:00 [DBG] Start discovery request
2020-07-15 18:20:58.711 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:20:58.712 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.713 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.714 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:20:58.714 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:20:58.715 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:20:58.716 +10:00 [DBG] Start discovery request
2020-07-15 18:20:58.725 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:20:58.725 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:20:58.726 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:20:58.726 +10:00 [DBG] Rendering check session result
2020-07-15 18:20:58.733 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:20:58.735 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.736 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.736 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:20:58.737 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:20:58.738 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:20:58.739 +10:00 [DBG] Start key discovery request
2020-07-15 18:20:58.786 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:20:58.789 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:20:58.789 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:20:58.790 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:20:58.791 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:20:58.791 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:20:58.792 +10:00 [DBG] Start userinfo request
2020-07-15 18:20:58.792 +10:00 [DBG] Bearer token found in header
2020-07-15 18:20:58.796 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:58.796 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:20:58.799 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:20:58.799 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801258,
    "exp": 1594801438,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:20:58.804 +10:00 [DBG] Creating userinfo response
2020-07-15 18:20:58.805 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:58.805 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:58.805 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:20:58.806 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:20:58.810 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:20:58.811 +10:00 [DBG] End userinfo request
2020-07-15 18:21:02.826 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:02.849 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:02.850 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:02.851 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:02.853 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:02.854 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:02.855 +10:00 [DBG] Start discovery request
2020-07-15 18:21:02.861 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:02.872 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:02.873 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:02.874 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:02.875 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:02.876 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:02.877 +10:00 [DBG] Start discovery request
2020-07-15 18:21:02.993 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:21:02.993 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:02.994 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:21:02.995 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:02.995 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:21:02.995 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:02.996 +10:00 [DBG] Start authorize request
2020-07-15 18:21:02.996 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:02.996 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:02.997 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:21:02.997 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:02.998 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:21:02.998 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "5684943e42fe4b41862f8a358af89097",
  "Nonce": "1d3713efd2914a87b3ca044194c2d77e",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "5684943e42fe4b41862f8a358af89097",
    "nonce": "1d3713efd2914a87b3ca044194c2d77e"
  }
}
2020-07-15 18:21:03.001 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:21:03.002 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:21:03.002 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:21:03.002 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:03.010 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:21:03.011 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:21:03.016 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****WyUQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****BK_Q"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000000C",
  "TimeStamp": "2020-07-15T08:21:03Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:21:03.017 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "5684943e42fe4b41862f8a358af89097",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:21:03.179 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:03.182 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:03.183 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:03.183 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:03.184 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:03.185 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:03.185 +10:00 [DBG] Start discovery request
2020-07-15 18:21:03.191 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:03.192 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:03.197 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:03.198 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:03.198 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:03.199 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:03.199 +10:00 [DBG] Start discovery request
2020-07-15 18:21:03.205 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:03.206 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:03.207 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:03.207 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:03.227 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:21:03.229 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:03.230 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:03.230 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:21:03.231 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:21:03.232 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:21:03.232 +10:00 [DBG] Start key discovery request
2020-07-15 18:21:03.271 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:03.273 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:03.273 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:03.276 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:03.276 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:03.277 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:03.277 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:21:03.278 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:21:03.278 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:21:03.279 +10:00 [DBG] Start userinfo request
2020-07-15 18:21:03.279 +10:00 [DBG] Bearer token found in header
2020-07-15 18:21:03.283 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:03.285 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:03.287 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:21:03.288 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801263,
    "exp": 1594801443,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:21:03.289 +10:00 [DBG] Creating userinfo response
2020-07-15 18:21:03.289 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:03.289 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:03.289 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:21:03.290 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:03.293 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:21:03.293 +10:00 [DBG] End userinfo request
2020-07-15 18:21:17.926 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:17.926 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:17.928 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:17.928 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:17.929 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:17.930 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:17.930 +10:00 [DBG] Start discovery request
2020-07-15 18:21:17.934 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:17.934 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:17.935 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:17.935 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:17.936 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:17.937 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:17.937 +10:00 [DBG] Start discovery request
2020-07-15 18:21:17.976 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:21:17.978 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:21:17.979 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:17.979 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:21:17.980 +10:00 [DBG] Start authorize request
2020-07-15 18:21:17.980 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:17.980 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:17.980 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:17.981 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:21:17.981 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:17.982 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:17.983 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:21:17.984 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "10385f3ff9a14dd5ae881ae7be335647",
  "Nonce": "0eb56f0f6a204a7ba08d5794610379e5",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "10385f3ff9a14dd5ae881ae7be335647",
    "nonce": "0eb56f0f6a204a7ba08d5794610379e5"
  }
}
2020-07-15 18:21:17.989 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:21:17.991 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:21:17.991 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:21:17.992 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:18.001 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:21:18.003 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:21:18.008 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****F_ZA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****R2xA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000000E",
  "TimeStamp": "2020-07-15T08:21:18Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:21:18.021 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "10385f3ff9a14dd5ae881ae7be335647",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:21:18.256 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:18.258 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:18.258 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:18.259 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:18.260 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:18.260 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:18.261 +10:00 [DBG] Start discovery request
2020-07-15 18:21:18.283 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:18.283 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:18.284 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:18.286 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:18.287 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:18.288 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:18.288 +10:00 [DBG] Start discovery request
2020-07-15 18:21:18.300 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:18.301 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:18.302 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:18.302 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:18.311 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:21:18.311 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:18.312 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:18.313 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:21:18.315 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:21:18.317 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:21:18.317 +10:00 [DBG] Start key discovery request
2020-07-15 18:21:18.357 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:18.358 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:18.359 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:18.361 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:18.362 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:18.363 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:18.363 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:21:18.364 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:21:18.364 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:21:18.365 +10:00 [DBG] Start userinfo request
2020-07-15 18:21:18.365 +10:00 [DBG] Bearer token found in header
2020-07-15 18:21:18.369 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:18.372 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:18.374 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:21:18.375 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801277,
    "exp": 1594801457,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:21:18.376 +10:00 [DBG] Creating userinfo response
2020-07-15 18:21:18.376 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:18.377 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:18.377 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:21:18.378 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:18.383 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:21:18.386 +10:00 [DBG] End userinfo request
2020-07-15 18:21:29.327 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:29.329 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.329 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.329 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:29.343 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:29.345 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:29.346 +10:00 [DBG] Start discovery request
2020-07-15 18:21:29.369 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:29.371 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.372 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.372 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:29.373 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:29.374 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:29.374 +10:00 [DBG] Start discovery request
2020-07-15 18:21:29.397 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:21:29.399 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:29.399 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:21:29.400 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:29.400 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:21:29.401 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:29.401 +10:00 [DBG] Start authorize request
2020-07-15 18:21:29.402 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:29.402 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:29.403 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:21:29.403 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:29.404 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:21:29.404 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "765906be19ee4d618029bec436033034",
  "Nonce": "4603932cfa7145ffbc15b1223dd59544",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "765906be19ee4d618029bec436033034",
    "nonce": "4603932cfa7145ffbc15b1223dd59544"
  }
}
2020-07-15 18:21:29.409 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:21:29.411 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:21:29.412 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:21:29.412 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:29.422 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:21:29.423 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:21:29.429 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rOiw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****e4hg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000010",
  "TimeStamp": "2020-07-15T08:21:29Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:21:29.430 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "765906be19ee4d618029bec436033034",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:21:29.630 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:29.632 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.633 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.633 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:29.634 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:29.635 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:29.635 +10:00 [DBG] Start discovery request
2020-07-15 18:21:29.639 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:29.639 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.640 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.640 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:29.646 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:29.646 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:29.647 +10:00 [DBG] Start discovery request
2020-07-15 18:21:29.660 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:21:29.661 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:29.661 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.661 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:29.662 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.662 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:29.663 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:21:29.663 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:29.664 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:21:29.664 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:21:29.665 +10:00 [DBG] Start key discovery request
2020-07-15 18:21:29.699 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:29.700 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.701 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.703 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:29.704 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:29.704 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:29.705 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:21:29.706 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:21:29.707 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:21:29.707 +10:00 [DBG] Start userinfo request
2020-07-15 18:21:29.707 +10:00 [DBG] Bearer token found in header
2020-07-15 18:21:29.710 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:29.710 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:29.713 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:21:29.716 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801289,
    "exp": 1594801469,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:21:29.717 +10:00 [DBG] Creating userinfo response
2020-07-15 18:21:29.717 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:29.718 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:29.718 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:21:29.719 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:29.723 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:21:29.723 +10:00 [DBG] End userinfo request
2020-07-15 18:21:35.565 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:35.575 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.575 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.578 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:35.582 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:35.583 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:35.583 +10:00 [DBG] Start discovery request
2020-07-15 18:21:35.586 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:35.587 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.588 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.588 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:35.592 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:35.593 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:35.593 +10:00 [DBG] Start discovery request
2020-07-15 18:21:35.615 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:21:35.616 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:35.617 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:21:35.617 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:35.618 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:21:35.619 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:35.620 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:35.620 +10:00 [DBG] Start authorize request
2020-07-15 18:21:35.621 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:35.621 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:21:35.622 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:35.622 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:21:35.623 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "f4f3a21ba907453ba4d99b6f3755f6e7",
  "Nonce": "43b9de2edd6f43178cc8fc0949a9acc4",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "f4f3a21ba907453ba4d99b6f3755f6e7",
    "nonce": "43b9de2edd6f43178cc8fc0949a9acc4"
  }
}
2020-07-15 18:21:35.628 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:21:35.628 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:21:35.629 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:21:35.631 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:21:35.639 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:21:35.639 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:21:35.644 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****lg7A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****MDGw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000012",
  "TimeStamp": "2020-07-15T08:21:35Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:21:35.645 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "f4f3a21ba907453ba4d99b6f3755f6e7",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:21:35.787 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:35.788 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.789 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.789 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:35.793 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:35.794 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:35.794 +10:00 [DBG] Start discovery request
2020-07-15 18:21:35.798 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:21:35.800 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.800 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.800 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:21:35.802 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:21:35.802 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:21:35.811 +10:00 [DBG] Start discovery request
2020-07-15 18:21:35.813 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:21:35.814 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:21:35.815 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:21:35.815 +10:00 [DBG] Rendering check session result
2020-07-15 18:21:35.818 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:21:35.819 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.823 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.825 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:21:35.830 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:21:35.831 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:21:35.831 +10:00 [DBG] Start key discovery request
2020-07-15 18:21:35.859 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:35.860 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.860 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.863 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:21:35.863 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:21:35.864 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:21:35.864 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:21:35.865 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:21:35.866 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:21:35.866 +10:00 [DBG] Start userinfo request
2020-07-15 18:21:35.867 +10:00 [DBG] Bearer token found in header
2020-07-15 18:21:35.870 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:35.870 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:21:35.877 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:21:35.879 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801295,
    "exp": 1594801475,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:21:35.881 +10:00 [DBG] Creating userinfo response
2020-07-15 18:21:35.882 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:35.883 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:35.883 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:21:35.884 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:21:35.892 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:21:35.897 +10:00 [DBG] End userinfo request
2020-07-15 18:23:12.781 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:12.783 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:12.784 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:12.785 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:12.786 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:12.787 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:12.787 +10:00 [DBG] Start discovery request
2020-07-15 18:23:12.790 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:12.793 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:12.796 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:12.797 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:12.802 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:12.802 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:12.803 +10:00 [DBG] Start discovery request
2020-07-15 18:23:12.842 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:23:12.844 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:23:12.844 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:23:12.845 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:23:12.845 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:23:12.845 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:23:12.846 +10:00 [DBG] Rendering check session result
2020-07-15 18:23:12.848 +10:00 [DBG] Start authorize request
2020-07-15 18:23:12.848 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:23:12.848 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:23:12.849 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:12.850 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:23:12.851 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "5dfdbc9d9565434da985c7b66c6ce8a0",
  "Nonce": "fba4ba2330714c819c44c3f2ab587582",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "5dfdbc9d9565434da985c7b66c6ce8a0",
    "nonce": "fba4ba2330714c819c44c3f2ab587582"
  }
}
2020-07-15 18:23:12.858 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:23:12.858 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:23:12.858 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:23:12.859 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:23:12.869 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:23:12.871 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:23:12.877 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****vEYg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****SB1w"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000014",
  "TimeStamp": "2020-07-15T08:23:12Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:23:12.878 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "5dfdbc9d9565434da985c7b66c6ce8a0",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:23:13.305 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:13.306 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:13.307 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:13.308 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:13.309 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:13.309 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:13.310 +10:00 [DBG] Start discovery request
2020-07-15 18:23:13.317 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:13.321 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:13.322 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:13.322 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:13.323 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:13.323 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:13.323 +10:00 [DBG] Start discovery request
2020-07-15 18:23:13.356 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:23:13.358 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:23:13.359 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:13.359 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:23:13.359 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:13.360 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:23:13.360 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:23:13.360 +10:00 [DBG] Rendering check session result
2020-07-15 18:23:13.361 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:23:13.362 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:23:13.362 +10:00 [DBG] Start key discovery request
2020-07-15 18:23:13.425 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:23:13.427 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:13.427 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:13.430 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:23:13.431 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:13.432 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:13.433 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:23:13.437 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:23:13.440 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:23:13.441 +10:00 [DBG] Start userinfo request
2020-07-15 18:23:13.441 +10:00 [DBG] Bearer token found in header
2020-07-15 18:23:13.445 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:13.446 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:13.449 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:23:13.453 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801392,
    "exp": 1594801572,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:23:13.454 +10:00 [DBG] Creating userinfo response
2020-07-15 18:23:13.454 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:13.455 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:13.455 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:23:13.456 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:13.460 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:23:13.461 +10:00 [DBG] End userinfo request
2020-07-15 18:23:15.051 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:15.052 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.053 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.054 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:15.055 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:15.055 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:15.056 +10:00 [DBG] Start discovery request
2020-07-15 18:23:15.071 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:15.072 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.073 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.073 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:15.076 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:15.076 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:15.076 +10:00 [DBG] Start discovery request
2020-07-15 18:23:15.100 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:23:15.102 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:23:15.103 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:23:15.104 +10:00 [DBG] Start authorize request
2020-07-15 18:23:15.104 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:23:15.105 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:23:15.106 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:15.107 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:23:15.108 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "e2a706a0c19e4978b35be4b77868c4c1",
  "Nonce": "9a7e127030e84db79435c484f523e314",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "e2a706a0c19e4978b35be4b77868c4c1",
    "nonce": "9a7e127030e84db79435c484f523e314"
  }
}
2020-07-15 18:23:15.109 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:23:15.110 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:23:15.110 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:23:15.113 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:23:15.114 +10:00 [DBG] Rendering check session result
2020-07-15 18:23:15.115 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:23:15.115 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:23:15.116 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:23:15.126 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:23:15.126 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:23:15.132 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****xN4w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****pK_A"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000016",
  "TimeStamp": "2020-07-15T08:23:15Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:23:15.133 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "e2a706a0c19e4978b35be4b77868c4c1",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:23:15.615 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:15.617 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.617 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.617 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:15.620 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:15.620 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:15.621 +10:00 [DBG] Start discovery request
2020-07-15 18:23:15.626 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:23:15.627 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.631 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.632 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:23:15.633 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:23:15.634 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:23:15.634 +10:00 [DBG] Start discovery request
2020-07-15 18:23:15.666 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:23:15.669 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:23:15.669 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:23:15.670 +10:00 [DBG] Rendering check session result
2020-07-15 18:23:15.683 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:23:15.683 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.684 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.685 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:23:15.686 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:23:15.687 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:23:15.687 +10:00 [DBG] Start key discovery request
2020-07-15 18:23:15.719 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:23:15.720 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:23:15.720 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:23:15.721 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:23:15.721 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:23:15.722 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:23:15.722 +10:00 [DBG] Start userinfo request
2020-07-15 18:23:15.722 +10:00 [DBG] Bearer token found in header
2020-07-15 18:23:15.725 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:15.725 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:23:15.728 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:23:15.728 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801395,
    "exp": 1594801575,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:23:15.729 +10:00 [DBG] Creating userinfo response
2020-07-15 18:23:15.730 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:15.730 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:15.731 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:23:15.731 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:23:15.739 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:23:15.739 +10:00 [DBG] End userinfo request
2020-07-15 18:24:32.771 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:24:32.773 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:32.774 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:32.775 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:24:32.776 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:24:32.776 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:24:32.776 +10:00 [DBG] Start discovery request
2020-07-15 18:24:32.780 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:24:32.781 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:32.781 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:32.781 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:24:32.785 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:24:32.785 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:24:32.787 +10:00 [DBG] Start discovery request
2020-07-15 18:24:32.827 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:24:32.829 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:24:32.830 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:24:32.830 +10:00 [DBG] Start authorize request
2020-07-15 18:24:32.830 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:24:32.830 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:24:32.831 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:24:32.831 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:24:32.831 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:24:32.832 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:24:32.832 +10:00 [DBG] Rendering check session result
2020-07-15 18:24:32.833 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:24:32.833 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "2ed24fe567a74e5a8fae87bac7cd917c",
  "Nonce": "90b35911b13749fcb6c5ffd0dc7c5c39",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "2ed24fe567a74e5a8fae87bac7cd917c",
    "nonce": "90b35911b13749fcb6c5ffd0dc7c5c39"
  }
}
2020-07-15 18:24:32.839 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:24:32.840 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:24:32.840 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:24:32.840 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:24:32.853 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:24:32.854 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:24:32.859 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****00UQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ObxA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000018",
  "TimeStamp": "2020-07-15T08:24:32Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:24:32.860 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "2ed24fe567a74e5a8fae87bac7cd917c",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:24:33.329 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:24:33.345 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:33.345 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:33.346 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:24:33.346 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:24:33.347 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:24:33.347 +10:00 [DBG] Start discovery request
2020-07-15 18:24:33.350 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:24:33.351 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:33.351 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:33.352 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:24:33.352 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:24:33.353 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:24:33.353 +10:00 [DBG] Start discovery request
2020-07-15 18:24:33.375 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:24:33.378 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:33.380 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:33.381 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:24:33.381 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:24:33.381 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:24:33.382 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:24:33.382 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:24:33.382 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:24:33.383 +10:00 [DBG] Rendering check session result
2020-07-15 18:24:33.383 +10:00 [DBG] Start key discovery request
2020-07-15 18:24:33.453 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:24:33.455 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:33.456 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:33.459 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:24:33.461 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:24:33.462 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:24:33.464 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:24:33.465 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:24:33.466 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:24:33.469 +10:00 [DBG] Start userinfo request
2020-07-15 18:24:33.470 +10:00 [DBG] Bearer token found in header
2020-07-15 18:24:33.475 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:24:33.476 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:24:33.479 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:24:33.481 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801472,
    "exp": 1594801652,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:24:33.482 +10:00 [DBG] Creating userinfo response
2020-07-15 18:24:33.483 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:24:33.484 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:24:33.485 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:24:33.486 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:24:33.495 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:24:33.496 +10:00 [DBG] End userinfo request
2020-07-15 18:26:13.405 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:13.407 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:13.408 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:13.408 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:13.409 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:13.410 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:13.411 +10:00 [DBG] Start discovery request
2020-07-15 18:26:13.415 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:13.416 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:13.417 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:13.418 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:13.418 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:13.423 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:13.424 +10:00 [DBG] Start discovery request
2020-07-15 18:26:13.464 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:26:13.466 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:26:13.467 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:26:13.468 +10:00 [DBG] Start authorize request
2020-07-15 18:26:13.468 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:26:13.469 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:26:13.469 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:13.470 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:26:13.470 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b39d0f572fdd43d58d945c3c8539ad02",
  "Nonce": "d874f0d5f8d04885a3af08ad42079a4f",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b39d0f572fdd43d58d945c3c8539ad02",
    "nonce": "d874f0d5f8d04885a3af08ad42079a4f"
  }
}
2020-07-15 18:26:13.476 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:26:13.477 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:26:13.477 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:26:13.478 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:26:13.488 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:26:13.488 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:26:13.492 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:26:13.494 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****hyWA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****P3Og"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000001A",
  "TimeStamp": "2020-07-15T08:26:13Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:26:13.495 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:26:13.497 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "b39d0f572fdd43d58d945c3c8539ad02",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:26:13.497 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:26:13.499 +10:00 [DBG] Rendering check session result
2020-07-15 18:26:14.140 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:14.141 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:14.142 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:14.143 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:14.143 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:14.144 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:14.144 +10:00 [DBG] Start discovery request
2020-07-15 18:26:14.149 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:14.150 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:14.150 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:14.151 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:14.151 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:14.157 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:14.157 +10:00 [DBG] Start discovery request
2020-07-15 18:26:14.192 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:26:14.194 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:14.194 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:26:14.194 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:14.195 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:26:14.195 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:26:14.195 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:26:14.196 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:26:14.196 +10:00 [DBG] Rendering check session result
2020-07-15 18:26:14.196 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:26:14.197 +10:00 [DBG] Start key discovery request
2020-07-15 18:26:14.227 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:26:14.229 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:14.229 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:14.232 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:26:14.233 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:14.233 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:14.234 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:26:14.235 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:26:14.235 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:26:14.236 +10:00 [DBG] Start userinfo request
2020-07-15 18:26:14.236 +10:00 [DBG] Bearer token found in header
2020-07-15 18:26:14.239 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:14.242 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:14.245 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:26:14.245 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801573,
    "exp": 1594801753,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:26:14.246 +10:00 [DBG] Creating userinfo response
2020-07-15 18:26:14.246 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:14.247 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:14.247 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:26:14.247 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:14.251 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:26:14.252 +10:00 [DBG] End userinfo request
2020-07-15 18:26:18.752 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:18.755 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:18.755 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:18.756 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:18.757 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:18.757 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:18.758 +10:00 [DBG] Start discovery request
2020-07-15 18:26:18.760 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:18.761 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:18.761 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:18.762 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:18.762 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:18.763 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:18.763 +10:00 [DBG] Start discovery request
2020-07-15 18:26:18.781 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:26:18.782 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:26:18.783 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:26:18.783 +10:00 [DBG] Start authorize request
2020-07-15 18:26:18.784 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:26:18.785 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:26:18.786 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:18.787 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:26:18.788 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ba18b30ee2cb45d18b7b6f891f806545",
  "Nonce": "8bd6ee4a613f4b709dc064e800e9a847",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ba18b30ee2cb45d18b7b6f891f806545",
    "nonce": "8bd6ee4a613f4b709dc064e800e9a847"
  }
}
2020-07-15 18:26:18.793 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:26:18.794 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:26:18.798 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:26:18.799 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:26:18.803 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:26:18.804 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:26:18.804 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:26:18.805 +10:00 [DBG] Rendering check session result
2020-07-15 18:26:18.810 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:26:18.811 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:26:18.815 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****OpQw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****mQ3g"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000001C",
  "TimeStamp": "2020-07-15T08:26:18Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:26:18.817 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "ba18b30ee2cb45d18b7b6f891f806545",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:26:19.296 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:19.298 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:19.298 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:19.298 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:19.299 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:19.299 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:19.300 +10:00 [DBG] Start discovery request
2020-07-15 18:26:19.306 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:26:19.307 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:19.307 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:19.311 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:26:19.312 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:26:19.313 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:26:19.313 +10:00 [DBG] Start discovery request
2020-07-15 18:26:19.343 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:26:19.344 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:26:19.345 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:26:19.345 +10:00 [DBG] Rendering check session result
2020-07-15 18:26:19.372 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:26:19.374 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:19.375 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:19.375 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:26:19.376 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:26:19.376 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:26:19.377 +10:00 [DBG] Start key discovery request
2020-07-15 18:26:19.422 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:26:19.424 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:19.425 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:19.427 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:26:19.428 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:26:19.428 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:26:19.429 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:26:19.430 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:26:19.430 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:26:19.431 +10:00 [DBG] Start userinfo request
2020-07-15 18:26:19.431 +10:00 [DBG] Bearer token found in header
2020-07-15 18:26:19.435 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:19.439 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:26:19.442 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:26:19.442 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801578,
    "exp": 1594801758,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:26:19.444 +10:00 [DBG] Creating userinfo response
2020-07-15 18:26:19.444 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:19.445 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:19.445 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:26:19.446 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:26:19.449 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:26:19.450 +10:00 [DBG] End userinfo request
2020-07-15 18:28:19.550 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:28:19.557 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:28:19.559 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:28:19.562 +10:00 [DBG] Start authorize request
2020-07-15 18:28:19.563 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:28:19.565 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:28:19.566 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:19.576 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:28:19.578 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "64acfc77e49744be8dcb0ea253798953",
  "Nonce": "2480813e0ad64f1d9dd753f1985ce51b",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "64acfc77e49744be8dcb0ea253798953",
    "nonce": "2480813e0ad64f1d9dd753f1985ce51b",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDE1NzgsImV4cCI6MTU5NDgwMTg3OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI4YmQ2ZWU0YTYxM2Y0YjcwOWRjMDY0ZTgwMGU5YTg0NyIsImlhdCI6MTU5NDgwMTU3OCwiYXRfaGFzaCI6IkV0VU92bkN5OHdTRU83V3dxSzFsS0EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.g3Le2QdidNeapBPAOuJTgCD8JfKNVTl7f5fdIkdIRUkrE1RAXXkHsVljWSv1atYrO9LGWlyqhAUxROVu97R3GhO2d-XVw_2p47bTJz7cZURgRr8U-YzlbKoQeO9cDPdz-az66SjOzXT3XxZ783nFouZCwBP95FqEXVzQw6UOEKQo0usECMH_iVmSyUNGyLCyj1LTwfyBwhbqYGN3AtPpCAZjyzJyqcQ-LG9F2t2-ENY0bPOCKd3FYCuJv9fNr7usCOesHVFn_dFuV9K97W5adgB6pSr1XsuV9PaqGRCXSmhc3jpXVkwLCsuylF8gzkgiXUT1qSP8kS8dSOrmD_OpQw"
  }
}
2020-07-15 18:28:19.600 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:28:19.600 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:28:19.601 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:28:19.607 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:28:19.627 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:28:19.629 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:28:19.643 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****qLvQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****0fkA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000001E",
  "TimeStamp": "2020-07-15T08:28:19Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:28:19.649 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "64acfc77e49744be8dcb0ea253798953",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:28:20.307 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:28:20.309 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:20.309 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:20.310 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:28:20.311 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:28:20.311 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:28:20.312 +10:00 [DBG] Start discovery request
2020-07-15 18:28:20.347 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:28:20.348 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:20.349 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:20.351 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:28:20.352 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:20.352 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:20.353 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:28:20.353 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:28:20.354 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:28:20.354 +10:00 [DBG] Start userinfo request
2020-07-15 18:28:20.354 +10:00 [DBG] Bearer token found in header
2020-07-15 18:28:20.358 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:20.359 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:20.362 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:28:20.363 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801699,
    "exp": 1594801879,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:28:20.365 +10:00 [DBG] Creating userinfo response
2020-07-15 18:28:20.366 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:20.366 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:20.367 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:28:20.367 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:20.371 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:28:20.371 +10:00 [DBG] End userinfo request
2020-07-15 18:28:23.410 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:28:23.411 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:23.412 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:23.412 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:28:23.413 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:28:23.413 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:28:23.414 +10:00 [DBG] Start discovery request
2020-07-15 18:28:23.427 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:28:23.427 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:23.428 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:23.428 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:28:23.429 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:28:23.429 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:28:23.430 +10:00 [DBG] Start discovery request
2020-07-15 18:28:23.480 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:28:23.482 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:28:23.483 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:28:23.483 +10:00 [DBG] Start authorize request
2020-07-15 18:28:23.483 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:28:23.484 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:28:23.484 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:28:23.484 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:28:23.485 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:28:23.485 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:23.485 +10:00 [DBG] Rendering check session result
2020-07-15 18:28:23.486 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:28:23.486 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "70f7f8f57a124afa96adccb0c93a9bfd",
  "Nonce": "c8dfc0c26545449ba68f1c0eda23cb1c",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "70f7f8f57a124afa96adccb0c93a9bfd",
    "nonce": "c8dfc0c26545449ba68f1c0eda23cb1c"
  }
}
2020-07-15 18:28:23.492 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:28:23.492 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:28:23.496 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:28:23.496 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:28:23.503 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:28:23.503 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:28:23.510 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****i3CA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****FH4g"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:0000001F",
  "TimeStamp": "2020-07-15T08:28:23Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:28:23.515 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "70f7f8f57a124afa96adccb0c93a9bfd",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:28:23.922 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:28:23.926 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:23.932 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:23.937 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:28:23.939 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:28:23.940 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:28:23.942 +10:00 [DBG] Start discovery request
2020-07-15 18:28:23.947 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:28:23.948 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:23.948 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:23.949 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:28:23.954 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:28:23.954 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:28:23.955 +10:00 [DBG] Start discovery request
2020-07-15 18:28:23.965 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:28:23.966 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:28:23.966 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:28:23.967 +10:00 [DBG] Rendering check session result
2020-07-15 18:28:23.968 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:28:23.969 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:23.969 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:23.970 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:28:23.971 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:28:23.971 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:28:23.972 +10:00 [DBG] Start key discovery request
2020-07-15 18:28:24.021 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:28:24.023 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:28:24.024 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:28:24.024 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:28:24.025 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:28:24.026 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:28:24.027 +10:00 [DBG] Start userinfo request
2020-07-15 18:28:24.027 +10:00 [DBG] Bearer token found in header
2020-07-15 18:28:24.030 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:24.031 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:28:24.034 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:28:24.035 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801703,
    "exp": 1594801883,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:28:24.038 +10:00 [DBG] Creating userinfo response
2020-07-15 18:28:24.039 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:24.039 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:24.039 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:28:24.040 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:28:24.043 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:28:24.044 +10:00 [DBG] End userinfo request
2020-07-15 18:30:24.126 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:30:24.130 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:30:24.130 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:30:24.131 +10:00 [DBG] Start authorize request
2020-07-15 18:30:24.132 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:30:24.132 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:30:24.133 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:30:24.134 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:30:24.134 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "8ba3c676dd904da98079d5311cb43ba8",
  "Nonce": "bb6c1f7030134b1fa339a96af0612a81",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "8ba3c676dd904da98079d5311cb43ba8",
    "nonce": "bb6c1f7030134b1fa339a96af0612a81",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDE3MDMsImV4cCI6MTU5NDgwMjAwMywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJjOGRmYzBjMjY1NDU0NDliYTY4ZjFjMGVkYTIzY2IxYyIsImlhdCI6MTU5NDgwMTcwMywiYXRfaGFzaCI6IlhfdTBSQkFfVUxSQkpYWmg2VTQtSlEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Q3Hmi5jXsfXzV2DWLI7PJ3qZAIcdh6Che-NJmdfPxxyh6Wbq4Y30L2ktVmmUAxEEQpdWKR8cd2NuyM5sCiWa9hKAZ9gAqShgCTicSvEEEKNMZjA89y-FwCUd7K9JlNOHOef_jin8Rq2kKOaiZEQy9yvRKEeUqFquCYl2OQRR7jnINnULLnwXPn08KqsxUyTob75wgnv82sLdbFwhDU3D6Wz0t8twVqHaGrFqnVpLLS-ABfz0-6pIdaPzaCxYroqnWw8z24Cp9jfFz0IYz1yuCEKfq-zakl_8uBcaQILxsTxQ_eS5IaC6MuICTkLQIHj9WnDLfKrAzg_tRml3w-i3CA"
  }
}
2020-07-15 18:30:24.144 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:30:24.145 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:30:24.145 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:30:24.146 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:30:24.159 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:30:24.160 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:30:24.167 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****appQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****sJSA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UL:00000021",
  "TimeStamp": "2020-07-15T08:30:24Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:30:24.170 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "8ba3c676dd904da98079d5311cb43ba8",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:30:24.885 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:30:24.886 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:30:24.887 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:30:24.887 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:30:24.888 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:30:24.888 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:30:24.888 +10:00 [DBG] Start discovery request
2020-07-15 18:30:24.923 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:30:24.924 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:30:24.925 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:30:24.927 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:30:24.927 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:30:24.928 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:30:24.928 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:30:24.929 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:30:24.929 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:30:24.930 +10:00 [DBG] Start userinfo request
2020-07-15 18:30:24.930 +10:00 [DBG] Bearer token found in header
2020-07-15 18:30:24.933 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:30:24.933 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:30:24.939 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:30:24.940 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801824,
    "exp": 1594802004,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:30:24.941 +10:00 [DBG] Creating userinfo response
2020-07-15 18:30:24.942 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:30:24.942 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:30:24.943 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:30:24.943 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:30:24.948 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:30:24.949 +10:00 [DBG] End userinfo request
2020-07-15 18:32:25.338 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:32:25.341 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:32:25.342 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:32:25.343 +10:00 [DBG] Start authorize request
2020-07-15 18:32:25.344 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:32:25.345 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:32:25.345 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:32:25.346 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:32:25.347 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "4546841d813e49249c3c962900807e0a",
  "Nonce": "137902f841ed4101ac285a3d988411bb",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "4546841d813e49249c3c962900807e0a",
    "nonce": "137902f841ed4101ac285a3d988411bb",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDE4MjQsImV4cCI6MTU5NDgwMjEyNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJiYjZjMWY3MDMwMTM0YjFmYTMzOWE5NmFmMDYxMmE4MSIsImlhdCI6MTU5NDgwMTgyNCwiYXRfaGFzaCI6InV6ZGxpYmRCTUdQVzRGTUhWdDIzQVEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.XL6mck_ujv2h7HmyRDFxZzF6ptORZeOKkcDGkc22c9IXjJYMUsoysdROZ78ho-CyBJgP_TWRcDf7sEHo4Xoj1WNjpS9qp74jkDffSdITstR-4ztAdHYGYSwPpXemzwxcPmWGEH3Xu4dr9U5kXaEjT6Bnz-ATAhqx_X8AdNEmi1TkJLaG8RNzi9lSiImeRDMW2VSTdHWKes5oytXYS9dMtHZ9HNuJQfjKAPSPVBj_di5gTqionPkTTgaARtzmvRox6m1ThSWGb-adP2rIDJR_y9XO_7LlFQsAXUlCGF6MzlS8Y_jad6vVRzeLnWhko6EnP6Db_4ceQ3M25eIkGbappQ"
  }
}
2020-07-15 18:32:25.356 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:32:25.360 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:32:25.361 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:32:25.361 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:32:25.374 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:32:25.376 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:32:25.383 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****_Ctw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****jKaA"
    }
  ],
  "ActivityId": "0HM18HR2OV7UQ:00000001",
  "TimeStamp": "2020-07-15T08:32:25Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:32:25.385 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "4546841d813e49249c3c962900807e0a",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:32:26.548 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:32:26.551 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:32:26.552 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:32:26.553 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:32:26.555 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:32:26.556 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:32:26.558 +10:00 [DBG] Start discovery request
2020-07-15 18:32:26.619 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:32:26.622 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:32:26.623 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:32:26.628 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:32:26.629 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:32:26.629 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:32:26.630 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:32:26.631 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:32:26.632 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:32:26.640 +10:00 [DBG] Start userinfo request
2020-07-15 18:32:26.641 +10:00 [DBG] Bearer token found in header
2020-07-15 18:32:26.645 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:32:26.646 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:32:26.649 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:32:26.650 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594801945,
    "exp": 1594802125,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:32:26.654 +10:00 [DBG] Creating userinfo response
2020-07-15 18:32:26.654 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:32:26.654 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:32:26.655 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:32:26.655 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:32:26.659 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:32:26.659 +10:00 [DBG] End userinfo request
2020-07-15 18:34:27.347 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:34:27.350 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:34:27.351 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:34:27.352 +10:00 [DBG] Start authorize request
2020-07-15 18:34:27.353 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:34:27.353 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:34:27.354 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:34:27.355 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:34:27.356 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "dd0cdbd3f19e4216a0d971b3fc457886",
  "Nonce": "181a8f70be534a7daa2c9d9e939a70df",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "dd0cdbd3f19e4216a0d971b3fc457886",
    "nonce": "181a8f70be534a7daa2c9d9e939a70df",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDE5NDUsImV4cCI6MTU5NDgwMjI0NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIxMzc5MDJmODQxZWQ0MTAxYWMyODVhM2Q5ODg0MTFiYiIsImlhdCI6MTU5NDgwMTk0NSwiYXRfaGFzaCI6Ing4SzY2TWRSSUpBYmRjNk90ck1TZFEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.qrr_YJaanHh6lzwSpzUNr9ckZt_6N0KlSUgQQQlAcLDd4W7fkQtbq3oJRhEb_lvOO1Onx0xGjWOJ6hYn-YTMMpiLNogfQpfALZ5sXHDcgadx58tuMdGaFfg2cz-HEToFII9d_VpVhk7et0mz63THrwCo6qXkWN_N_jIrmnvtFWlXM_pWQhVVLYyoxGhm2gp1LenbmuxhTRIr2cZXh7XkCAzjCRnT50Pb5ZzST5IQuXdqMxO2KpMBSEVWvu0sIxsoL40ktsvYNJ1c38cjijI8Q8lbvU38j1TmRV8Fnzw04P2dw-Qqi45jhCO9AVNIV656Wv8HuhFAzVz62dA3F4_Ctw"
  }
}
2020-07-15 18:34:27.365 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:34:27.367 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:34:27.368 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:34:27.368 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:34:27.381 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:34:27.382 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:34:27.390 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****AmKg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7AfQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7US:00000001",
  "TimeStamp": "2020-07-15T08:34:27Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:34:27.392 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "dd0cdbd3f19e4216a0d971b3fc457886",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:34:28.490 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:34:28.493 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:34:28.494 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:34:28.495 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:34:28.496 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:34:28.497 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:34:28.498 +10:00 [DBG] Start discovery request
2020-07-15 18:34:28.574 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:34:28.576 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:34:28.577 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:34:28.582 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:34:28.583 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:34:28.584 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:34:28.585 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:34:28.586 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:34:28.592 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:34:28.592 +10:00 [DBG] Start userinfo request
2020-07-15 18:34:28.593 +10:00 [DBG] Bearer token found in header
2020-07-15 18:34:28.598 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:34:28.599 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:34:28.604 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:34:28.605 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802067,
    "exp": 1594802247,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:34:28.607 +10:00 [DBG] Creating userinfo response
2020-07-15 18:34:28.608 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:34:28.609 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:34:28.610 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:34:28.611 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:34:28.617 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:34:28.621 +10:00 [DBG] End userinfo request
2020-07-15 18:36:28.700 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:36:28.703 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:36:28.705 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:36:28.706 +10:00 [DBG] Start authorize request
2020-07-15 18:36:28.707 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:36:28.707 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:36:28.708 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:36:28.709 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:36:28.711 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "50a2f672d27e49d8a3be52c114fc5fb6",
  "Nonce": "b82e52e851174084926d5c3072bbb274",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "50a2f672d27e49d8a3be52c114fc5fb6",
    "nonce": "b82e52e851174084926d5c3072bbb274",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDIwNjcsImV4cCI6MTU5NDgwMjM2NywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIxODFhOGY3MGJlNTM0YTdkYWEyYzlkOWU5MzlhNzBkZiIsImlhdCI6MTU5NDgwMjA2NywiYXRfaGFzaCI6IjdyMFFCNUFNTnl6SXlfRjdKcHZ3UWciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.UDAd-iWx5lJOF3XIEJjX3-g2EWqX5GUBpY1-BI2REu8PuUgwRrTeT9hCymc_8sXD_IGyPxMDZ2hmKWU1TZ9LugOmaz2EODI7w69uDfh5s-64G-tqSrSF0JPa80q43EESJltTeZaf7AX2xGuW3whkYJupo7cyUxnCCxR1A__KsbPn_IaEOnntsHNFKxfcyvYuDQINrow7v0Pm_GA0TEXhY8xKBNd58oBC3XUgY72tX_Ubsx9vLNGFNiHJtyibU-OhlyBIqJlRk0FKKZ0VDaAcSto7l_iSv-7RQE1Wq8ERh58r2WF9lV7lMRwKUhA6Ro_3dkWCj0h3dZOFlHkzRNAmKg"
  }
}
2020-07-15 18:36:28.721 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:36:28.723 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:36:28.724 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:36:28.724 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:36:28.735 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:36:28.738 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:36:28.743 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****8vmg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****pFqA"
    }
  ],
  "ActivityId": "0HM18HR2OV7US:00000002",
  "TimeStamp": "2020-07-15T08:36:28Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:36:28.745 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "50a2f672d27e49d8a3be52c114fc5fb6",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:36:29.545 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:36:29.547 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:36:29.547 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:36:29.548 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:36:29.549 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:36:29.549 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:36:29.550 +10:00 [DBG] Start discovery request
2020-07-15 18:36:29.585 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:36:29.587 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:36:29.587 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:36:29.590 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:36:29.590 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:36:29.590 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:36:29.591 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:36:29.592 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:36:29.592 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:36:29.593 +10:00 [DBG] Start userinfo request
2020-07-15 18:36:29.593 +10:00 [DBG] Bearer token found in header
2020-07-15 18:36:29.596 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:36:29.597 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:36:29.600 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:36:29.600 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802188,
    "exp": 1594802368,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:36:29.601 +10:00 [DBG] Creating userinfo response
2020-07-15 18:36:29.603 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:36:29.604 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:36:29.604 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:36:29.605 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:36:29.608 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:36:29.608 +10:00 [DBG] End userinfo request
2020-07-15 18:38:29.664 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:38:29.667 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:38:29.668 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:38:29.668 +10:00 [DBG] Start authorize request
2020-07-15 18:38:29.669 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:38:29.670 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:38:29.671 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:38:29.672 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:38:29.673 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "db48996206de41e5bb75ac7b9ab4db89",
  "Nonce": "7abff9eb0f6f4974b033d24fd087204d",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "db48996206de41e5bb75ac7b9ab4db89",
    "nonce": "7abff9eb0f6f4974b033d24fd087204d",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDIxODgsImV4cCI6MTU5NDgwMjQ4OCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJiODJlNTJlODUxMTc0MDg0OTI2ZDVjMzA3MmJiYjI3NCIsImlhdCI6MTU5NDgwMjE4OCwiYXRfaGFzaCI6InN1b2VISnRQMDBLaUdjcVI4TTFERlEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.fgnAn_-7QAsFQ_pWPs2JWLIlk0FLjYspnHucg4aflYVKp6TF0DsB4r1qaCkMIuNZG2hEJ0tCNT2gjh03XgwLqEnYB6iRA02XOjBaVR51UZPRQMyIYF1H3HUmK9N8iMAI4cJZA6cYIV-T9Y0BLQna9AaPjnrC3j5dqanyaEHZ2IektefdPlQs9z9Qo72my1ThchL7sZLj9ARyiiDwSnM8hZMJwUAJzlHKY6Nqg_WsbGVWXp7Brc4AqdT2Hm954Zy8qfXzRswqcdCkpMS3Y7n-va-pBAdx16VbDubz7o58x1jKjCU-DwoQE5FvuQegk6kHlHvaU3T77epOndBBtF8vmg"
  }
}
2020-07-15 18:38:29.682 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:38:29.685 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:38:29.686 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:38:29.687 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:38:29.699 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:38:29.701 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:38:29.708 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Ix_Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dtQg"
    }
  ],
  "ActivityId": "0HM18HR2OV7UU:00000001",
  "TimeStamp": "2020-07-15T08:38:29Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:38:29.714 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "db48996206de41e5bb75ac7b9ab4db89",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:38:30.591 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:38:30.593 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:38:30.593 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:38:30.594 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:38:30.594 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:38:30.595 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:38:30.595 +10:00 [DBG] Start discovery request
2020-07-15 18:38:30.622 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:38:30.624 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:38:30.624 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:38:30.626 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:38:30.627 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:38:30.627 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:38:30.628 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:38:30.628 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:38:30.629 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:38:30.629 +10:00 [DBG] Start userinfo request
2020-07-15 18:38:30.629 +10:00 [DBG] Bearer token found in header
2020-07-15 18:38:30.633 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:38:30.633 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:38:30.639 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:38:30.639 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802309,
    "exp": 1594802489,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:38:30.640 +10:00 [DBG] Creating userinfo response
2020-07-15 18:38:30.641 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:38:30.641 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:38:30.642 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:38:30.642 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:38:30.645 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:38:30.646 +10:00 [DBG] End userinfo request
2020-07-15 18:40:30.687 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:40:30.690 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:40:30.691 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:40:30.692 +10:00 [DBG] Start authorize request
2020-07-15 18:40:30.692 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:40:30.693 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:40:30.694 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:40:30.695 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:40:30.696 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b0b717a65f954e76bcee74ca12e5da59",
  "Nonce": "ca080c34264149f1a9c0e681c48c1148",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b0b717a65f954e76bcee74ca12e5da59",
    "nonce": "ca080c34264149f1a9c0e681c48c1148",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDIzMDksImV4cCI6MTU5NDgwMjYwOSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3YWJmZjllYjBmNmY0OTc0YjAzM2QyNGZkMDg3MjA0ZCIsImlhdCI6MTU5NDgwMjMwOSwiYXRfaGFzaCI6ImJiZU5YczhfSEJKVkF6ZUVZb3lqOWciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Kob6e0sXo_0LeR8ukqLPW2YGlByoMVTHQNlqn6N1Y4Hbra5HJ4q41Xrs3l2BOba_J73g3_1ZZo8_7Q_ZPmWtNyiXv7tuZKwbtvKix1V06fssG47q45gCuwBvwpgWNVpV1yy9BNFDHviTUOYJ9u5Kha4IJxDsd3fjGf4eBKMnevQxuK3-GfQ1qktrR5Q6J_wRkhxe2j4t47ktJ44SjuuO2Xdpj2swHxRZL1ZtF9XwqMDUmTKUiHM3Y-IQQ6iBXuHix3Kg_Ml-MGD845f5y6u5w48QeoI_e8xJVxzEzu59EiIosLMLdLtnmeUoIsZTXUBrEIhrbU4VHt_iznwDqWIx_Q"
  }
}
2020-07-15 18:40:30.705 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:40:30.708 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:40:30.709 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:40:30.709 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:40:30.722 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:40:30.723 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:40:30.730 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7UuQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****FYSQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7UU:00000002",
  "TimeStamp": "2020-07-15T08:40:30Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:40:30.734 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "b0b717a65f954e76bcee74ca12e5da59",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:40:31.548 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:40:31.550 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:40:31.551 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:40:31.551 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:40:31.552 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:40:31.552 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:40:31.553 +10:00 [DBG] Start discovery request
2020-07-15 18:40:31.588 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:40:31.589 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:40:31.590 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:40:31.592 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:40:31.593 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:40:31.593 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:40:31.594 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:40:31.594 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:40:31.595 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:40:31.595 +10:00 [DBG] Start userinfo request
2020-07-15 18:40:31.596 +10:00 [DBG] Bearer token found in header
2020-07-15 18:40:31.598 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:40:31.602 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:40:31.605 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:40:31.606 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802430,
    "exp": 1594802610,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:40:31.607 +10:00 [DBG] Creating userinfo response
2020-07-15 18:40:31.607 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:40:31.608 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:40:31.608 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:40:31.609 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:40:31.612 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:40:31.615 +10:00 [DBG] End userinfo request
2020-07-15 18:42:32.353 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:42:32.356 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:42:32.357 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:42:32.357 +10:00 [DBG] Start authorize request
2020-07-15 18:42:32.358 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:42:32.358 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:42:32.359 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:42:32.360 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:42:32.360 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "28df1309a7234ae2853163b997e58710",
  "Nonce": "483fd7d06ce94c42ac6b864951479712",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "28df1309a7234ae2853163b997e58710",
    "nonce": "483fd7d06ce94c42ac6b864951479712",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDI0MzAsImV4cCI6MTU5NDgwMjczMCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJjYTA4MGMzNDI2NDE0OWYxYTljMGU2ODFjNDhjMTE0OCIsImlhdCI6MTU5NDgwMjQzMCwiYXRfaGFzaCI6IkhKZ01QN0Iya3VhZF9WSll3Z2tCbnciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.XujOreSErNLwOyQ_2qXcHpBsBD9xCqGuCYUfZek8Z_E3p3Og8ZhaxvWkO8IaO6mYysQMvMtM53Zzn2y5p3D3t0C07i7s6zhXsLqiqg3gbmHjPhoisJk-s1OpmaeulSVpv3loIsCuUGW2PUuLqqcFYVwJO03LEJYsEnSaj2qDhFY2ZvvQpwsQSFiSI7nhYlB4wLze7ZqiW6gXubR9fWCFtVbqhb4Lg5qcR6egMIp5_zkhmYbG2Z02q7HKyVgPBKda0r7LnRSSBPrd8C7I8ouVecx1YqLylG5cFmxjG3OKOlgqoMECjrO8wb5BUAvtlNDkUddzUGhR8chEB6Cd5k7UuQ"
  }
}
2020-07-15 18:42:32.369 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:42:32.369 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:42:32.374 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:42:32.374 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:42:32.384 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:42:32.385 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:42:32.391 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aqqw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-HAw"
    }
  ],
  "ActivityId": "0HM18HR2OV7UV:00000001",
  "TimeStamp": "2020-07-15T08:42:32Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:42:32.396 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "28df1309a7234ae2853163b997e58710",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:42:33.508 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:42:33.511 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:42:33.512 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:42:33.513 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:42:33.514 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:42:33.515 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:42:33.515 +10:00 [DBG] Start discovery request
2020-07-15 18:42:33.567 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:42:33.570 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:42:33.571 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:42:33.575 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:42:33.576 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:42:33.577 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:42:33.577 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:42:33.578 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:42:33.579 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:42:33.580 +10:00 [DBG] Start userinfo request
2020-07-15 18:42:33.580 +10:00 [DBG] Bearer token found in header
2020-07-15 18:42:33.585 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:42:33.586 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:42:33.591 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:42:33.600 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802552,
    "exp": 1594802732,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:42:33.602 +10:00 [DBG] Creating userinfo response
2020-07-15 18:42:33.603 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:42:33.604 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:42:33.605 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:42:33.605 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:42:33.612 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:42:33.613 +10:00 [DBG] End userinfo request
2020-07-15 18:44:34.341 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:44:34.343 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:44:34.344 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:44:34.345 +10:00 [DBG] Start authorize request
2020-07-15 18:44:34.346 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:44:34.346 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:44:34.347 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:44:34.349 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:44:34.349 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3f09166ea6e844f2a054bac024936494",
  "Nonce": "517eafba8e2242ad960041b5d22bcf2f",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3f09166ea6e844f2a054bac024936494",
    "nonce": "517eafba8e2242ad960041b5d22bcf2f",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDI1NTIsImV4cCI6MTU5NDgwMjg1MiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI0ODNmZDdkMDZjZTk0YzQyYWM2Yjg2NDk1MTQ3OTcxMiIsImlhdCI6MTU5NDgwMjU1MiwiYXRfaGFzaCI6IkJua3N2Z2p0Q1ZxT0k2QzNsRFBDRUEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.VD6sayUFHW5zKEYPnwOiYtc2hEovkJDiQ2mlyqDNW8KS07SPsKuZdR7V1aV1AGoy6orfVfPA9Oyi6YZFuOlrkWidSOlzHya2k_aw-OTqJKPyZWATwECedFX1AY7dboKvbi9aPVI6bZRKUymYJ9gCi7HZjG2zm01J3OsiyeZCptZT40XQ3cxmIWSDI2Lb600FV3eBBRMdF5LuuPAHng3AZqZeKG_ttG3jhLix5z__T_GNRUMLHq_vV3GZOtfWEU4KBWxG2PSt0TjD5607IA9sZO6XxNRnPoCMBhaFFD5g90L0bKvaDC2cWdlYzdCqtmbpwf0bGqp614N2_IDLj3aqqw"
  }
}
2020-07-15 18:44:34.358 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:44:34.358 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:44:34.359 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:44:34.359 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:44:34.371 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:44:34.373 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:44:34.380 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****R-iA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****yQnQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7V1:00000001",
  "TimeStamp": "2020-07-15T08:44:34Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:44:34.382 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "3f09166ea6e844f2a054bac024936494",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:44:35.707 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:44:35.710 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:44:35.711 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:44:35.712 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:44:35.713 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:44:35.714 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:44:35.715 +10:00 [DBG] Start discovery request
2020-07-15 18:44:35.782 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:44:35.784 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:44:35.785 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:44:35.788 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:44:35.789 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:44:35.790 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:44:35.791 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:44:35.792 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:44:35.793 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:44:35.794 +10:00 [DBG] Start userinfo request
2020-07-15 18:44:35.799 +10:00 [DBG] Bearer token found in header
2020-07-15 18:44:35.839 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:44:35.840 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:44:35.845 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:44:35.846 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802674,
    "exp": 1594802854,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:44:35.848 +10:00 [DBG] Creating userinfo response
2020-07-15 18:44:35.849 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:44:35.855 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:44:35.855 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:44:35.856 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:44:35.862 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:44:35.863 +10:00 [DBG] End userinfo request
2020-07-15 18:46:06.709 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:46:06.711 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:06.711 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:06.712 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:46:06.713 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:46:06.714 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:46:06.714 +10:00 [DBG] Start discovery request
2020-07-15 18:46:06.717 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:46:06.717 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:06.718 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:06.718 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:46:06.719 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:46:06.720 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:46:06.720 +10:00 [DBG] Start discovery request
2020-07-15 18:46:06.752 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:46:06.752 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:46:06.753 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:46:06.753 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:46:06.754 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:46:06.755 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:46:06.755 +10:00 [DBG] Start authorize request
2020-07-15 18:46:06.755 +10:00 [DBG] Rendering check session result
2020-07-15 18:46:06.756 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:46:06.757 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:46:06.757 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:46:06.758 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:46:06.759 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "a0dd17df3fd64675900abdce80826f19",
  "Nonce": "3fcc9eb2fc7c4078b7eb024ebd68df2f",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "a0dd17df3fd64675900abdce80826f19",
    "nonce": "3fcc9eb2fc7c4078b7eb024ebd68df2f"
  }
}
2020-07-15 18:46:06.760 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:46:06.761 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:46:06.761 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:46:06.761 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:46:06.768 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:46:06.769 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:46:06.774 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****gY5g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****LuuA"
    }
  ],
  "ActivityId": "0HM18HR2OV7V1:00000002",
  "TimeStamp": "2020-07-15T08:46:06Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:46:06.775 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "a0dd17df3fd64675900abdce80826f19",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:46:07.164 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:46:07.166 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:07.166 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:07.167 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:46:07.167 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:46:07.167 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:46:07.168 +10:00 [DBG] Start discovery request
2020-07-15 18:46:07.178 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:46:07.178 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:07.181 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:07.181 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:46:07.182 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:46:07.183 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:46:07.183 +10:00 [DBG] Start discovery request
2020-07-15 18:46:07.221 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:46:07.223 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:46:07.223 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:46:07.224 +10:00 [DBG] Rendering check session result
2020-07-15 18:46:07.224 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:46:07.225 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:07.226 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:07.226 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:46:07.228 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:46:07.229 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:46:07.229 +10:00 [DBG] Start key discovery request
2020-07-15 18:46:07.268 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:46:07.295 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:07.295 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:07.297 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:46:07.298 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:46:07.298 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:46:07.299 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:46:07.299 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:46:07.300 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:46:07.300 +10:00 [DBG] Start userinfo request
2020-07-15 18:46:07.300 +10:00 [DBG] Bearer token found in header
2020-07-15 18:46:07.303 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:46:07.303 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:46:07.307 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:46:07.308 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802766,
    "exp": 1594802946,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:46:07.309 +10:00 [DBG] Creating userinfo response
2020-07-15 18:46:07.310 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:46:07.310 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:46:07.311 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:46:07.311 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:46:07.315 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:46:07.316 +10:00 [DBG] End userinfo request
2020-07-15 18:48:07.369 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:48:07.371 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:48:07.371 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:48:07.373 +10:00 [DBG] Start authorize request
2020-07-15 18:48:07.373 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:48:07.373 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:48:07.374 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:48:07.375 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:48:07.376 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "6e3a6c5b59b64d1cba9703ca67e147cc",
  "Nonce": "28c18af3f7df497bb18b653b95cc35b0",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "6e3a6c5b59b64d1cba9703ca67e147cc",
    "nonce": "28c18af3f7df497bb18b653b95cc35b0",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDI3NjYsImV4cCI6MTU5NDgwMzA2NiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIzZmNjOWViMmZjN2M0MDc4YjdlYjAyNGViZDY4ZGYyZiIsImlhdCI6MTU5NDgwMjc2NiwiYXRfaGFzaCI6InF5ZEQtUk02YjVjNHBDenBoVXc5b1EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.q32TorebwxElQTx-p3pI-Nxq7hgtbKsVRQAnRm9vNdY5NBUbtd7rQ-zk-SIKIbi0LQknotB3qVbAMu6ZzW1GSmjPj_SJS1A2uOCEHH9T8BEYf9eh-N8dVaE_hpajY9iFDLQII243psaRreBa9E2dDIiE8VyvZHxsYEFPaB9ERmG0FQVATa26-Cdnw80178hA00aM4_EMNiwVDou9O_lMQa6MSLkAcdDNKHrFTKFJmwwtXW860u1rvTgBFR-y9QBmTIcm6YLC6sytl4hJZ0Qb-oLl5rdEPKjJWeVxxuZKS5NSAZilhx52f8VNBWLkAVKwFcCUFOSTvPv-fSzPrTgY5g"
  }
}
2020-07-15 18:48:07.381 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:48:07.382 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:48:07.382 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:48:07.383 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:48:07.391 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:48:07.391 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:48:07.399 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****IBig"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****kRDg"
    }
  ],
  "ActivityId": "0HM18HR2OV7V3:00000002",
  "TimeStamp": "2020-07-15T08:48:07Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:48:07.400 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "6e3a6c5b59b64d1cba9703ca67e147cc",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:49:45.951 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:49:45.952 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:45.953 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:45.954 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:49:45.955 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:49:45.955 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:49:45.956 +10:00 [DBG] Start discovery request
2020-07-15 18:49:45.959 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:49:45.959 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:45.960 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:45.960 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:49:45.961 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:49:45.961 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:49:45.962 +10:00 [DBG] Start discovery request
2020-07-15 18:49:46.024 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:49:46.026 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:49:46.026 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:49:46.026 +10:00 [DBG] Start authorize request
2020-07-15 18:49:46.027 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:49:46.027 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:49:46.027 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:49:46.028 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:49:46.029 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "0b2743809fcf409ea2f54e2a02a6fa9b",
  "Nonce": "716ecda4e20146648b842a53d6abec01",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "0b2743809fcf409ea2f54e2a02a6fa9b",
    "nonce": "716ecda4e20146648b842a53d6abec01"
  }
}
2020-07-15 18:49:46.041 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:49:46.042 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:49:46.042 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:49:46.043 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:49:46.050 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:49:46.051 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:49:46.052 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:49:46.054 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:49:46.055 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:49:46.055 +10:00 [DBG] Rendering check session result
2020-07-15 18:49:46.060 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UrnA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-ZcQ"
    }
  ],
  "ActivityId": "0HM18HR2OV7V3:00000003",
  "TimeStamp": "2020-07-15T08:49:46Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:49:46.061 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "0b2743809fcf409ea2f54e2a02a6fa9b",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:49:49.043 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:49:49.045 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:49.045 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:49.046 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:49:49.046 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:49:49.047 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:49:49.047 +10:00 [DBG] Start discovery request
2020-07-15 18:49:49.061 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:49:49.061 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:49.062 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:49.062 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:49:49.063 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:49:49.063 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:49:49.064 +10:00 [DBG] Start discovery request
2020-07-15 18:49:49.110 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 18:49:49.110 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 18:49:49.111 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 18:49:49.112 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:49.113 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 18:49:49.113 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:49.114 +10:00 [DBG] Rendering check session result
2020-07-15 18:49:49.114 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 18:49:49.115 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 18:49:49.115 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 18:49:49.116 +10:00 [DBG] Start key discovery request
2020-07-15 18:49:49.158 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:49:49.160 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:49.160 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:49.163 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:49:49.164 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:49:49.166 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:49:49.167 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:49:49.168 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:49:49.168 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:49:49.169 +10:00 [DBG] Start userinfo request
2020-07-15 18:49:49.169 +10:00 [DBG] Bearer token found in header
2020-07-15 18:49:49.173 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:49:49.177 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:49:49.180 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:49:49.180 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594802986,
    "exp": 1594803166,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:49:49.182 +10:00 [DBG] Creating userinfo response
2020-07-15 18:49:49.182 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:49:49.183 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:49:49.183 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:49:49.184 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:49:49.188 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:49:49.190 +10:00 [DBG] End userinfo request
2020-07-15 18:51:49.302 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 18:51:49.305 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 18:51:49.306 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 18:51:49.307 +10:00 [DBG] Start authorize request
2020-07-15 18:51:49.308 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:51:49.308 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 18:51:49.309 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:51:49.311 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 18:51:49.312 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b94ab3b77b1e461eb34e3e28cdd44053",
  "Nonce": "26adbdf999ee4f7aa5a3cab42fbadcd2",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b94ab3b77b1e461eb34e3e28cdd44053",
    "nonce": "26adbdf999ee4f7aa5a3cab42fbadcd2",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDI5ODYsImV4cCI6MTU5NDgwMzI4NiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3MTZlY2RhNGUyMDE0NjY0OGI4NDJhNTNkNmFiZWMwMSIsImlhdCI6MTU5NDgwMjk4NiwiYXRfaGFzaCI6ImFCUGtHaTI3aWIwdzU3Wk5HVm82bXciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.q5lI6EeWPH2fAkScgJtMh0SfNDqYdS14koRoma9hSUcIeAT8BtP1l0T079fWGz6bBOhCHfBnIuIIdYqWkvj29PdpvsLN_2St6BIbEmfc7VogUe27DHaWdgQ24psFJUqrQXq3Fxbvnspa_ULMoflKT6VqRRPauigvqbO9foPQXSsMdVUckdpOd31EMqbD0XKDnYfvG4sKiH7QKyWGVIxpJoVchfvZh0BmK_l6j-xdjSn0zSeyiV82kAmp5qVR6DIUCE89MjM1Nse_8lyMK_M89IX8BQMkcAQPvqQwIuXNwJAlDhk3unZmq0cXHAA4nqpNJYL3Qfd1TFR94xo1SsUrnA"
  }
}
2020-07-15 18:51:49.329 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 18:51:49.330 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 18:51:49.330 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 18:51:49.331 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 18:51:49.346 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 18:51:49.347 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 18:51:49.354 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****8K7Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****1gCw"
    }
  ],
  "ActivityId": "0HM18HR2OV7V3:00000005",
  "TimeStamp": "2020-07-15T08:51:49Z",
  "ProcessId": 9320,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 18:51:49.356 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "b94ab3b77b1e461eb34e3e28cdd44053",
  "Scope": "openid profile email restapi"
}
2020-07-15 18:51:50.139 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 18:51:50.141 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:51:50.141 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:51:50.142 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 18:51:50.142 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 18:51:50.143 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 18:51:50.143 +10:00 [DBG] Start discovery request
2020-07-15 18:51:50.185 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:51:50.187 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:51:50.188 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:51:50.190 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 18:51:50.191 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 18:51:50.191 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 18:51:50.192 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 18:51:50.192 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 18:51:50.193 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 18:51:50.194 +10:00 [DBG] Start userinfo request
2020-07-15 18:51:50.194 +10:00 [DBG] Bearer token found in header
2020-07-15 18:51:50.198 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:51:50.200 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 18:51:50.204 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 18:51:50.204 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594803109,
    "exp": 1594803289,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 18:51:50.205 +10:00 [DBG] Creating userinfo response
2020-07-15 18:51:50.206 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:51:50.206 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:51:50.207 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 18:51:50.207 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 18:51:50.213 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 18:51:50.216 +10:00 [DBG] End userinfo request
2020-07-15 19:07:25.677 +10:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-07-15 19:07:25.758 +10:00 [DBG] Using Identity.Application as default scheme for authentication
2020-07-15 19:07:25.764 +10:00 [DBG] Using Identity.External as default scheme for sign-in
2020-07-15 19:07:25.764 +10:00 [DBG] Using Identity.External as default scheme for sign-out
2020-07-15 19:07:25.764 +10:00 [DBG] Using Identity.Application as default scheme for challenge
2020-07-15 19:07:25.765 +10:00 [DBG] Using Identity.Application as default scheme for forbid
2020-07-15 20:41:10.184 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:41:10.235 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:41:10.239 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:41:10.450 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:41:10.674 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:41:10.678 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:41:10.687 +10:00 [DBG] Start discovery request
2020-07-15 20:41:13.501 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:41:13.506 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:41:13.509 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:41:13.514 +10:00 [DBG] Rendering check session result
2020-07-15 20:41:27.617 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:41:27.621 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:41:27.624 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:41:27.626 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:41:27.628 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:41:27.633 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:41:27.636 +10:00 [DBG] Start discovery request
2020-07-15 20:41:27.778 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:41:27.782 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:41:27.785 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:41:27.787 +10:00 [DBG] Rendering check session result
2020-07-15 20:41:33.837 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:41:33.841 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:41:33.844 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:41:33.847 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:41:33.848 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:41:33.852 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:41:33.855 +10:00 [DBG] Start discovery request
2020-07-15 20:41:34.033 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:41:34.037 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:41:34.040 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:41:34.043 +10:00 [DBG] Rendering check session result
2020-07-15 20:41:40.159 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:41:40.161 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:41:40.164 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:41:40.165 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:41:40.167 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:41:40.168 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:41:40.172 +10:00 [DBG] Start discovery request
2020-07-15 20:41:40.271 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:41:40.274 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:41:40.277 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:41:40.279 +10:00 [DBG] Rendering check session result
2020-07-15 20:42:08.454 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:42:08.456 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:08.459 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:08.460 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:42:08.462 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:42:08.463 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:42:08.464 +10:00 [DBG] Start discovery request
2020-07-15 20:42:08.537 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:42:08.542 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:42:08.546 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:42:08.548 +10:00 [DBG] Rendering check session result
2020-07-15 20:42:13.004 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:42:13.040 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:42:13.049 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:42:13.070 +10:00 [DBG] Start authorize request
2020-07-15 20:42:13.107 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:42:13.136 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:42:13.181 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:42:13.323 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:42:13.349 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "c8396004b04f4fc6ac9ca88a8e1a05f9",
  "Nonce": "1b06d863fc6d485a8c7d2653d9a1fb1d",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "c8396004b04f4fc6ac9ca88a8e1a05f9",
    "nonce": "1b06d863fc6d485a8c7d2653d9a1fb1d"
  }
}
2020-07-15 20:42:13.418 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:42:13.435 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:42:13.456 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:42:13.457 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:42:13.640 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:42:13.643 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:42:13.743 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uMvw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****xNwA"
    }
  ],
  "ActivityId": "0HM18LEB1BCIE:00000003",
  "TimeStamp": "2020-07-15T10:42:13Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:42:13.757 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "c8396004b04f4fc6ac9ca88a8e1a05f9",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:42:14.272 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:42:14.274 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:14.277 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:14.278 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:42:14.279 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:42:14.280 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:42:14.281 +10:00 [DBG] Start discovery request
2020-07-15 20:42:14.285 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:42:14.286 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:14.287 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:14.288 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:42:14.293 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:42:14.295 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:42:14.296 +10:00 [DBG] Start discovery request
2020-07-15 20:42:14.308 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:42:14.309 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:42:14.318 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:42:14.320 +10:00 [DBG] Rendering check session result
2020-07-15 20:42:14.333 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 20:42:14.335 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:14.337 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:14.339 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 20:42:14.343 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 20:42:14.344 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 20:42:14.353 +10:00 [DBG] Start key discovery request
2020-07-15 20:42:14.411 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:42:14.413 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:14.416 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:14.419 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:42:14.420 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:14.422 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:14.423 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:42:14.425 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:42:14.428 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:42:14.439 +10:00 [DBG] Start userinfo request
2020-07-15 20:42:14.443 +10:00 [DBG] Bearer token found in header
2020-07-15 20:42:14.528 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:42:14.540 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:42:14.546 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:42:14.554 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594809733,
    "exp": 1594809913,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:42:14.569 +10:00 [DBG] Creating userinfo response
2020-07-15 20:42:14.578 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:42:14.584 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:42:14.589 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:42:14.590 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:42:14.596 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:42:14.600 +10:00 [DBG] End userinfo request
2020-07-15 20:42:15.588 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:42:15.592 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:42:15.596 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:42:15.598 +10:00 [DBG] Start discovery request
2020-07-15 20:42:15.756 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 20:42:15.760 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 20:42:15.763 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 20:42:15.765 +10:00 [DBG] Start key discovery request
2020-07-15 20:42:54.189 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:42:54.194 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:42:54.196 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:42:54.198 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:42:54.200 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:42:54.201 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:42:54.203 +10:00 [DBG] Start discovery request
2020-07-15 20:42:54.319 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:42:54.321 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:42:54.324 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:42:54.326 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:10.242 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:10.247 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:10.250 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:10.252 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:10.255 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:10.262 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:10.265 +10:00 [DBG] Start discovery request
2020-07-15 20:43:10.411 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:43:10.413 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:43:10.417 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:43:10.418 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:20.528 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:20.532 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:20.535 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:20.538 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:20.546 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:20.548 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:20.551 +10:00 [DBG] Start discovery request
2020-07-15 20:43:20.666 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:43:20.672 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:43:20.676 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:43:20.679 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:30.221 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:30.225 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:30.229 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:30.230 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:30.233 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:30.236 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:30.243 +10:00 [DBG] Start discovery request
2020-07-15 20:43:30.362 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:43:30.369 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:43:30.373 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:43:30.377 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:40.732 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:40.734 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:40.737 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:40.738 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:40.739 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:40.740 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:40.742 +10:00 [DBG] Start discovery request
2020-07-15 20:43:47.515 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:43:47.518 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:43:47.521 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:43:47.522 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:50.808 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:43:50.809 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:43:50.812 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:43:50.815 +10:00 [DBG] Start authorize request
2020-07-15 20:43:50.816 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:43:50.817 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:43:50.818 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:43:50.819 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:43:50.821 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "19bb04f1042b41ea9efe04a2aa66a3a8",
  "Nonce": "51c23fed20d64b65bea59e65bc94aff5",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "19bb04f1042b41ea9efe04a2aa66a3a8",
    "nonce": "51c23fed20d64b65bea59e65bc94aff5"
  }
}
2020-07-15 20:43:50.829 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:43:50.830 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:43:50.831 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:43:50.832 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:43:50.842 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:43:50.845 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:43:50.852 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7ABQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Bn2g"
    }
  ],
  "ActivityId": "0HM18LEB1BCIE:0000000A",
  "TimeStamp": "2020-07-15T10:43:50Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:43:50.861 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "19bb04f1042b41ea9efe04a2aa66a3a8",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:43:51.214 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:51.216 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:51.219 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:51.220 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:51.221 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:51.222 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:51.223 +10:00 [DBG] Start discovery request
2020-07-15 20:43:51.228 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:43:51.231 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:51.233 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:51.234 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:43:51.235 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:43:51.236 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:43:51.237 +10:00 [DBG] Start discovery request
2020-07-15 20:43:51.264 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 20:43:51.266 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 20:43:51.268 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:51.270 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 20:43:51.271 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:51.273 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 20:43:51.273 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 20:43:51.275 +10:00 [DBG] Rendering check session result
2020-07-15 20:43:51.280 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 20:43:51.282 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 20:43:51.289 +10:00 [DBG] Start key discovery request
2020-07-15 20:43:51.336 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:43:51.338 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:51.342 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:51.346 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:43:51.348 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:43:51.349 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:43:51.350 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:43:51.354 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:43:51.356 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:43:51.357 +10:00 [DBG] Start userinfo request
2020-07-15 20:43:51.358 +10:00 [DBG] Bearer token found in header
2020-07-15 20:43:51.363 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:43:51.364 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:43:51.369 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:43:51.371 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594809830,
    "exp": 1594810010,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:43:51.373 +10:00 [DBG] Creating userinfo response
2020-07-15 20:43:51.374 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:43:51.375 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:43:51.377 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:43:51.378 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:43:51.383 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:43:51.384 +10:00 [DBG] End userinfo request
2020-07-15 20:45:51.456 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:45:51.460 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:45:51.464 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:45:51.466 +10:00 [DBG] Start authorize request
2020-07-15 20:45:51.467 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:45:51.468 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:45:51.470 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:45:51.476 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:45:51.480 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b34ee38784024bb3a8c43832afaa844f",
  "Nonce": "ff295838a63b43d5981c90a529f37b53",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b34ee38784024bb3a8c43832afaa844f",
    "nonce": "ff295838a63b43d5981c90a529f37b53",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDk4MzAsImV4cCI6MTU5NDgxMDEzMCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI1MWMyM2ZlZDIwZDY0YjY1YmVhNTllNjViYzk0YWZmNSIsImlhdCI6MTU5NDgwOTgzMCwiYXRfaGFzaCI6ImMwbllBZ0RzUGlEN1dNd2Rvb0E2ZGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.kFZDFejuCaDDRJ_qDuQRgH0HsHtCVXxadT7oUi3fsGylkHVl_Co1dvRSGWTzeaAlLLYF7c-6W65sXqvpjzH4VUvCmNNLdDKVXYPz75PuBO_80TvCTAY2pH0hwl0t5eyr9PKX1VlLnXykDhrMawQ3mN_xCzcpBPQdYJv4-rtL0yk6ZOfNiNNl5uCwXTbJ8u4DZFQDMev2OS8uXaKTYQbarkQKIjkcg9XtfdZejEeoTq5QePMO75_5dXxrY0176QmFJ3R1Y1p7vr1Hlz2C9gf0wuXkbkEGgbGh3Ea88QxNT8HhhsMVCx67fWpRVcCkuiMQKqFFyVgjXmB-J41NAr7ABQ"
  }
}
2020-07-15 20:45:51.501 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:45:51.502 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:45:51.503 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:45:51.506 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:45:51.524 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:45:51.526 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:45:51.536 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Am8A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****HR1w"
    }
  ],
  "ActivityId": "0HM18LEB1BCIE:0000000C",
  "TimeStamp": "2020-07-15T10:45:51Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:45:51.543 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "b34ee38784024bb3a8c43832afaa844f",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:45:52.239 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:45:52.241 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:45:52.244 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:45:52.244 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:45:52.246 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:45:52.247 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:45:52.248 +10:00 [DBG] Start discovery request
2020-07-15 20:45:52.272 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:45:52.274 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:45:52.277 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:45:52.279 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:45:52.280 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:45:52.282 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:45:52.282 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:45:52.284 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:45:52.284 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:45:52.285 +10:00 [DBG] Start userinfo request
2020-07-15 20:45:52.286 +10:00 [DBG] Bearer token found in header
2020-07-15 20:45:52.296 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:45:52.298 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:45:52.303 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:45:52.304 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594809951,
    "exp": 1594810131,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:45:52.312 +10:00 [DBG] Creating userinfo response
2020-07-15 20:45:52.313 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:45:52.315 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:45:52.317 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:45:52.319 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:45:52.331 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:45:52.332 +10:00 [DBG] End userinfo request
2020-07-15 20:47:52.384 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:47:52.387 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:47:52.391 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:47:52.393 +10:00 [DBG] Start authorize request
2020-07-15 20:47:52.394 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:47:52.396 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:47:52.397 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:47:52.403 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:47:52.406 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1bf4eac7fbc4406383194532f39cb41e",
  "Nonce": "eff9c1ec2a0c480f954eed398c648eda",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1bf4eac7fbc4406383194532f39cb41e",
    "nonce": "eff9c1ec2a0c480f954eed398c648eda",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MDk5NTEsImV4cCI6MTU5NDgxMDI1MSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJmZjI5NTgzOGE2M2I0M2Q1OTgxYzkwYTUyOWYzN2I1MyIsImlhdCI6MTU5NDgwOTk1MSwiYXRfaGFzaCI6Im5WTm9FYWsxRktfSDhrTWpWXzg3WmciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.PdWLMcVTrcYwYo50c10k2Wmz1_YdqFHyikb083vvHFNC_utkvrZdikhhBKPNSQ2u3zqntvDLvPiPpzR1nto0KMeFv_bcrVcfMVqgt6HqvUkNwEXg9q-25RHW3KFJq_IZsYfv2ManbHehbkuEq4sMJO_bMXv8PKgrsvqk1cNgPmSEB0pFlySgmaBIBVLc98bmeU8U6tm92oUGdFaF2-GmdUPAJP0Z0QBwlT-cqs52tPb--dqcmWB9bnAJNmKI9AHBUiLdF92mcZC8C2DwzPc5Dl6bn5Cprp8e9v6kC8qwStqi4NX-src-tI-TVOh6InlzNIH9SBXEaV4lfXrk6WAm8A"
  }
}
2020-07-15 20:47:52.427 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:47:52.428 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:47:52.429 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:47:52.434 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:47:52.446 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:47:52.449 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:47:52.459 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rZqQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****S7zA"
    }
  ],
  "ActivityId": "0HM18LEB1BCII:00000001",
  "TimeStamp": "2020-07-15T10:47:52Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:47:52.465 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "1bf4eac7fbc4406383194532f39cb41e",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:47:53.153 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:47:53.155 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:47:53.158 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:47:53.159 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:47:53.160 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:47:53.162 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:47:53.163 +10:00 [DBG] Start discovery request
2020-07-15 20:47:53.182 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:47:53.186 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:47:53.187 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:47:53.190 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:47:53.191 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:47:53.193 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:47:53.194 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:47:53.196 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:47:53.200 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:47:53.201 +10:00 [DBG] Start userinfo request
2020-07-15 20:47:53.202 +10:00 [DBG] Bearer token found in header
2020-07-15 20:47:53.206 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:47:53.207 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:47:53.215 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:47:53.216 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594810072,
    "exp": 1594810252,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:47:53.219 +10:00 [DBG] Creating userinfo response
2020-07-15 20:47:53.220 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:47:53.221 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:47:53.222 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:47:53.223 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:47:53.228 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:47:53.229 +10:00 [DBG] End userinfo request
2020-07-15 20:49:53.262 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:49:53.268 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:49:53.271 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:49:53.273 +10:00 [DBG] Start authorize request
2020-07-15 20:49:53.274 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:49:53.279 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:49:53.282 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:49:53.284 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:49:53.286 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "7203d34e1739462d84f9e4a611e1f11d",
  "Nonce": "0b6d8391b8214abb93a6d86bd0275f1a",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "7203d34e1739462d84f9e4a611e1f11d",
    "nonce": "0b6d8391b8214abb93a6d86bd0275f1a",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTAwNzIsImV4cCI6MTU5NDgxMDM3MiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJlZmY5YzFlYzJhMGM0ODBmOTU0ZWVkMzk4YzY0OGVkYSIsImlhdCI6MTU5NDgxMDA3MiwiYXRfaGFzaCI6Ikh0WF9HTlI2QnBKUm5RTTkyRndveVEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.a8QXrJ6ZwCVOJTkr-Rvbtg5msu17DdaC82-EdkYIVmPYg2PCGm72rRV5IaOk3ZAAKMLvDdbZNK96Y1czTVcrZRb4SG5DlaGpFT-NgzkkFUWkOMR_uIAtx1pABZm5J2fJzQs96HuLhDyM1XRr0QatfuzDMKWssk-r2R7ONU3QZRSIPnzvgXmgzQejP9ba1Oq2s7ZFZbc8_A53UWVc4whxk625L3FY1lWEqfIqrYTIyEalfSu4JHkVN2EXAqnLpKMfWKp-6hV_mHpYA7vRO3zDbUqO2_nk63sgZYTW1D_xdsVnZ9V7pUcG_bGWEtzkUvnk0P0rlUvjqmeG9C3UsFrZqQ"
  }
}
2020-07-15 20:49:53.304 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:49:53.305 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:49:53.306 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:49:53.307 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:49:53.325 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:49:53.327 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:49:53.337 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7Qfg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****nhnA"
    }
  ],
  "ActivityId": "0HM18LEB1BCII:00000002",
  "TimeStamp": "2020-07-15T10:49:53Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:49:53.347 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "7203d34e1739462d84f9e4a611e1f11d",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:49:53.984 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:49:53.986 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:49:54.011 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:49:54.394 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:49:54.401 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:49:54.408 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:49:54.414 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:49:54.422 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:49:54.427 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:49:54.427 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:49:54.429 +10:00 [DBG] Start discovery request
2020-07-15 20:49:54.431 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:49:54.440 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:49:54.441 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:49:54.443 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:49:54.444 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:49:54.450 +10:00 [DBG] Start userinfo request
2020-07-15 20:49:54.452 +10:00 [DBG] Bearer token found in header
2020-07-15 20:49:54.457 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:49:54.462 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:49:54.471 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:49:54.473 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594810193,
    "exp": 1594810373,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:49:54.481 +10:00 [DBG] Creating userinfo response
2020-07-15 20:49:54.483 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:49:54.485 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:49:54.492 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:49:54.495 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:49:54.502 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:49:54.504 +10:00 [DBG] End userinfo request
2020-07-15 20:51:54.543 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:51:54.554 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:51:54.797 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:51:54.800 +10:00 [DBG] Start authorize request
2020-07-15 20:51:54.802 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:51:54.804 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:51:54.806 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:51:54.814 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:51:54.818 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "2ee6d4555fa247459f323c6fe8be86c6",
  "Nonce": "1178acc17bb84a46bf191e7f87bca639",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "2ee6d4555fa247459f323c6fe8be86c6",
    "nonce": "1178acc17bb84a46bf191e7f87bca639",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTAxOTMsImV4cCI6MTU5NDgxMDQ5MywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIwYjZkODM5MWI4MjE0YWJiOTNhNmQ4NmJkMDI3NWYxYSIsImlhdCI6MTU5NDgxMDE5MywiYXRfaGFzaCI6InBtS1E2NFJ3bjF3Y0wzVmFxMjU0R1EiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.X9hXERehs08IQJe28hIg_5ClAxQOh3DtM4nGgw5lA0keYdK2rKzvxbjg0eCG_XkAVj1XTXkFRWfUT0f9oH8MDmDGn34LGLis0T6zZn3hQTw2WuVV5vd5j5VHtK6x8wrVLNbOEA2IWFDZnmhS9CaAO1nRyFrd_pRO7JxJhOU6z7LHCOHv1GU-myoBIAISIiiz0idPF-LF2AOlZG4PUeXLcFfeylYgeTU0falFzx5HuBKZ3KRhGgJpLoRli-pf2RqrWgzH9giYRG5IHolkmnf3sv_OCCv66hbAZ_gUFbyAkmG6pFKSvevATJc6hVEIG3luC2jnKVD-fdnGRPrfY-7Qfg"
  }
}
2020-07-15 20:51:54.839 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:51:54.840 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:51:54.841 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:51:54.843 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:51:54.862 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:51:54.864 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:51:54.874 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****fyTg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****0OjQ"
    }
  ],
  "ActivityId": "0HM18LEB1BCIK:00000001",
  "TimeStamp": "2020-07-15T10:51:54Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:51:54.885 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "2ee6d4555fa247459f323c6fe8be86c6",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:51:55.636 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:51:55.638 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:51:55.659 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:51:55.921 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:51:55.926 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:51:55.929 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:51:55.939 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:51:55.944 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:51:55.948 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:51:55.951 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:51:55.953 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:51:55.955 +10:00 [DBG] Start discovery request
2020-07-15 20:51:55.957 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:51:55.960 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:51:55.965 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:51:55.967 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:51:55.971 +10:00 [DBG] Start userinfo request
2020-07-15 20:51:55.973 +10:00 [DBG] Bearer token found in header
2020-07-15 20:51:55.978 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:51:55.980 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:51:55.987 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:51:55.989 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594810314,
    "exp": 1594810494,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:51:55.998 +10:00 [DBG] Creating userinfo response
2020-07-15 20:51:55.999 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:51:56.004 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:51:56.006 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:51:56.013 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:51:56.021 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:51:56.023 +10:00 [DBG] End userinfo request
2020-07-15 20:53:56.075 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 20:53:56.079 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 20:53:56.082 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 20:53:56.085 +10:00 [DBG] Start authorize request
2020-07-15 20:53:56.087 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:53:56.089 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 20:53:56.090 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:53:56.095 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 20:53:56.101 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "693925619c8a4b4c9456ac47635fbfc4",
  "Nonce": "2835f5193e064a238f8e5e5a708e7e80",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "693925619c8a4b4c9456ac47635fbfc4",
    "nonce": "2835f5193e064a238f8e5e5a708e7e80",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTAzMTQsImV4cCI6MTU5NDgxMDYxNCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIxMTc4YWNjMTdiYjg0YTQ2YmYxOTFlN2Y4N2JjYTYzOSIsImlhdCI6MTU5NDgxMDMxNCwiYXRfaGFzaCI6Ii1RN0h4NjhPbzR1TDlOMVdwVjdVaEEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.LHuuUJbfRs4-01X49IAa5bWF6bIWyUrcc_m4bbZd2qe-DjxNb0Ejk7MG1LfcO9bz8YLJB0tiSloFj-dDMZmFp9PqNM0MeKJuHTQNASc8OMBY8IYP4YjGMBEoFH6aHtrQsyhGtJdtX3s37Px481-YhS05ax2FE9tokyiSDHY9N72md51tBRnezPPaFlQayGvyJYsg_GrXCfpyppVyhsbPwU6JKkR42-UinRelQaKPTiTvLMiz0LFJ9kaQFh3iIG9pUHTG8sgBLMnagjTOeOrVHCEhupYNfCdqhGGA1rP31tE2HIkhi4p-UKBUvaA6RCS2v3U3T8JEHzKLTz4SL0fyTg"
  }
}
2020-07-15 20:53:56.111 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 20:53:56.111 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 20:53:56.112 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 20:53:56.113 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 20:53:56.120 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 20:53:56.124 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 20:53:56.130 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****xOcw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****x3LQ"
    }
  ],
  "ActivityId": "0HM18LEB1BCIK:00000002",
  "TimeStamp": "2020-07-15T10:53:56Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 20:53:56.134 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "693925619c8a4b4c9456ac47635fbfc4",
  "Scope": "openid profile email restapi"
}
2020-07-15 20:53:58.144 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 20:53:58.146 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:53:58.170 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:53:58.567 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:53:58.572 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:53:58.576 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 20:53:58.584 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:53:58.590 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 20:53:58.598 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 20:53:58.599 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 20:53:58.608 +10:00 [DBG] Start discovery request
2020-07-15 20:53:58.613 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 20:53:58.624 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 20:53:58.627 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 20:53:58.629 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 20:53:58.632 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 20:53:58.639 +10:00 [DBG] Start userinfo request
2020-07-15 20:53:58.642 +10:00 [DBG] Bearer token found in header
2020-07-15 20:53:58.649 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:53:58.654 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 20:53:58.662 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 20:53:58.664 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594810436,
    "exp": 1594810616,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 20:53:58.673 +10:00 [DBG] Creating userinfo response
2020-07-15 20:53:58.676 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:53:58.678 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:53:58.680 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 20:53:58.682 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 20:53:58.694 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 20:53:58.696 +10:00 [DBG] End userinfo request
2020-07-15 21:28:52.495 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:28:52.498 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:28:52.501 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:28:52.502 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:28:52.504 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:28:52.506 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:28:52.507 +10:00 [DBG] Start discovery request
2020-07-15 21:28:52.633 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 21:28:52.636 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 21:28:52.639 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 21:28:52.642 +10:00 [DBG] Rendering check session result
2020-07-15 21:31:35.725 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:31:35.727 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:31:35.730 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:31:35.731 +10:00 [DBG] Start authorize request
2020-07-15 21:31:35.732 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:31:35.735 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:31:35.738 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:31:35.740 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:31:35.741 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "b23e7e7f37174b6fba50f5a606513eff",
  "Nonce": "2da2c01bf55949c6bdd1a255b3dfd063",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "b23e7e7f37174b6fba50f5a606513eff",
    "nonce": "2da2c01bf55949c6bdd1a255b3dfd063"
  }
}
2020-07-15 21:31:35.747 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:31:35.748 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:31:35.749 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:31:35.750 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:31:35.757 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:31:35.759 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:31:35.765 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****1UAA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****SsYg"
    }
  ],
  "ActivityId": "0HM18LEB1BCIR:00000001",
  "TimeStamp": "2020-07-15T11:31:35Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:31:35.768 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "b23e7e7f37174b6fba50f5a606513eff",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:31:36.347 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:31:36.349 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:31:36.352 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:31:36.352 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:31:36.354 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:31:36.355 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:31:36.356 +10:00 [DBG] Start discovery request
2020-07-15 21:31:36.359 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:31:36.361 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:31:36.362 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:31:36.363 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:31:36.364 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:31:36.366 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:31:36.367 +10:00 [DBG] Start discovery request
2020-07-15 21:31:36.415 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 21:31:36.417 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:31:36.419 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:31:36.420 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 21:31:36.421 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 21:31:36.422 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 21:31:36.423 +10:00 [DBG] Start key discovery request
2020-07-15 21:31:36.430 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 21:31:36.431 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 21:31:36.432 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 21:31:36.433 +10:00 [DBG] Rendering check session result
2020-07-15 21:31:36.474 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:31:36.475 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:31:36.478 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:31:36.480 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:31:36.481 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:31:36.488 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:31:36.492 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:31:36.494 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:31:36.495 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:31:36.496 +10:00 [DBG] Start userinfo request
2020-07-15 21:31:36.497 +10:00 [DBG] Bearer token found in header
2020-07-15 21:31:36.500 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:31:36.503 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:31:36.506 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:31:36.508 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594812695,
    "exp": 1594812875,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:31:36.510 +10:00 [DBG] Creating userinfo response
2020-07-15 21:31:36.514 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:31:36.515 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:31:36.517 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:31:36.518 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:31:36.523 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:31:36.524 +10:00 [DBG] End userinfo request
2020-07-15 21:33:37.309 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:33:37.312 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:33:37.314 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:33:37.316 +10:00 [DBG] Start authorize request
2020-07-15 21:33:37.317 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:33:37.318 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:33:37.319 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:33:37.322 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:33:37.324 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "5d54d25f85424c53b8a3b92d69e8c1df",
  "Nonce": "bc785d15bd1c461ab26411a2fb3b6926",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "5d54d25f85424c53b8a3b92d69e8c1df",
    "nonce": "bc785d15bd1c461ab26411a2fb3b6926",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTI2OTUsImV4cCI6MTU5NDgxMjk5NSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIyZGEyYzAxYmY1NTk0OWM2YmRkMWEyNTViM2RmZDA2MyIsImlhdCI6MTU5NDgxMjY5NSwiYXRfaGFzaCI6InpZams1VEprci1uT05uSjdmNjE3aXciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.WeVOVvXSYwxnip4ZSt6xuhD75K2Ui6IboeqMS_WDGq6L1R2xPL4jZ-l-NilbU5bydLfguq8yaobIS_tt_0kzUYKrLxpWjO3wo7HTZi6rtbjGPpB7QRa3X7Z3n3ZkySJaMXsPMQOLZugGsX2l5fyvEbnA5fI9PKqSIchD4hn1-I2F-Fd6ZukSB7ZPXVIiNKaoVxBX0t6iKQsZCGafO_gBriFtUj_L94czsEYr_sIv0fMq16ghQ3l3VJYxPO5KN8Vmq2ps6l4SbuX32_yAYgxd5yhwK_L1dZLiktj4WFornbnL1uG2F5zQccI-yYPzMMW1g3fEkRi4HGIali0GNc1UAA"
  }
}
2020-07-15 21:33:37.331 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:33:37.331 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:33:37.332 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:33:37.333 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:33:37.338 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:33:37.339 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:33:37.345 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****f1zg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****yQNw"
    }
  ],
  "ActivityId": "0HM18LEB1BCIR:00000003",
  "TimeStamp": "2020-07-15T11:33:37Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:33:37.348 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "5d54d25f85424c53b8a3b92d69e8c1df",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:33:38.015 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:33:38.017 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:33:38.020 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:33:38.021 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:33:38.022 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:33:38.022 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:33:38.024 +10:00 [DBG] Start discovery request
2020-07-15 21:33:38.046 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:33:38.048 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:33:38.051 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:33:38.053 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:33:38.054 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:33:38.055 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:33:38.056 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:33:38.058 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:33:38.060 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:33:38.061 +10:00 [DBG] Start userinfo request
2020-07-15 21:33:38.061 +10:00 [DBG] Bearer token found in header
2020-07-15 21:33:38.064 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:33:38.065 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:33:38.067 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:33:38.069 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594812817,
    "exp": 1594812997,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:33:38.071 +10:00 [DBG] Creating userinfo response
2020-07-15 21:33:38.071 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:33:38.072 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:33:38.073 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:33:38.074 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:33:38.078 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:33:38.079 +10:00 [DBG] End userinfo request
2020-07-15 21:35:38.290 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:35:38.291 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:35:38.295 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:35:38.296 +10:00 [DBG] Start authorize request
2020-07-15 21:35:38.297 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:35:38.298 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:35:38.299 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:35:38.300 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:35:38.303 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "05e43cfc312c409b8c58423b43350573",
  "Nonce": "30a56fddf87241b8bdf4dbd74be270ed",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "05e43cfc312c409b8c58423b43350573",
    "nonce": "30a56fddf87241b8bdf4dbd74be270ed",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTI4MTcsImV4cCI6MTU5NDgxMzExNywiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJiYzc4NWQxNWJkMWM0NjFhYjI2NDExYTJmYjNiNjkyNiIsImlhdCI6MTU5NDgxMjgxNywiYXRfaGFzaCI6IjIxSk5aMzZKT2ZFSURPbDMzNUU2ZXciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.SSah0mWUZQzNqbxHyQVazlpWN0BScnZptMHhQEywnhxkcv8yRT0GDA-if0-7nJb5djEJNgYQoK9oJUQrIcjdVxIjXuHLNxM2tBSd7wUhdcbphjWCeDhZfQ4_xRGfV2_7vU3SxG4XRvVt7tmiH0d7zNUFMiVJ56fojZnMz8V9YNRghxiMKZV64dOLNsGnTLBeeS_5j9MAUq98bAVunaJrsbwFyAIm1O6Bf-bU5y05DkMI-gshqjMjD-Jug3aP6ET2K3FShJlgpqOAAV3pM8zt-JzPVeoziIei0M8rA1ojiCwfQII-ju4YD9xkZhvj6VDyJEp5oUuAT7hUuOo43nf1zg"
  }
}
2020-07-15 21:35:38.312 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:35:38.313 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:35:38.314 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:35:38.315 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:35:38.324 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:35:38.325 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:35:38.332 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****VO-g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****jJ_g"
    }
  ],
  "ActivityId": "0HM18LEB1BCIR:00000004",
  "TimeStamp": "2020-07-15T11:35:38Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:35:38.337 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "05e43cfc312c409b8c58423b43350573",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:35:39.086 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:35:39.089 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:35:39.091 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:35:39.092 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:35:39.093 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:35:39.095 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:35:39.096 +10:00 [DBG] Start discovery request
2020-07-15 21:35:39.127 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:35:39.129 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:35:39.132 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:35:39.134 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:35:39.135 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:35:39.136 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:35:39.137 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:35:39.141 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:35:39.142 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:35:39.143 +10:00 [DBG] Start userinfo request
2020-07-15 21:35:39.144 +10:00 [DBG] Bearer token found in header
2020-07-15 21:35:39.146 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:35:39.147 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:35:39.150 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:35:39.152 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594812938,
    "exp": 1594813118,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:35:39.154 +10:00 [DBG] Creating userinfo response
2020-07-15 21:35:39.154 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:35:39.155 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:35:39.156 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:35:39.157 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:35:39.162 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:35:39.163 +10:00 [DBG] End userinfo request
2020-07-15 21:37:39.288 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:37:39.290 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:37:39.292 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:37:39.293 +10:00 [DBG] Start authorize request
2020-07-15 21:37:39.294 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:37:39.295 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:37:39.295 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:37:39.296 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:37:39.297 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "6f0835e5b66e46a0a33017ed2895d312",
  "Nonce": "72fdb416a941435081c54827f59e70d8",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "6f0835e5b66e46a0a33017ed2895d312",
    "nonce": "72fdb416a941435081c54827f59e70d8",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTI5MzgsImV4cCI6MTU5NDgxMzIzOCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIzMGE1NmZkZGY4NzI0MWI4YmRmNGRiZDc0YmUyNzBlZCIsImlhdCI6MTU5NDgxMjkzOCwiYXRfaGFzaCI6IkFYMnBwMVY5VnBHQ3Q0a2FCZnF2TGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.HOFmtXif4E1Dulifr5pGYye5oTTqTgOXuSJREVrdTOgKbsDoStUuFQp33iAXV0U7PXeb6phURjojYi6EUYIXrK42L2iVwSsB7LavhmlhS9_3P4_ad_r8ma5Gz3rlnOZq6BFtoODbQV0Q0LgESh5Lfjuv-uPlTdT4DTuIRrRwYdYYjoq20izf-Rl04LVsK8L-HH5lREqUzYKQ1fYKAtAnvLWHZ3TyH_sKjpItUubwjDYoWR9006u--y8vBxRD_WHIhWqc_nQKtWIe-LKAJv3faTcY9qkD8n--ggwHClvztg7AqTmd285fauRy5Ez5MEUaasKGDmnPAltsQH3tETVO-g"
  }
}
2020-07-15 21:37:39.307 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:37:39.307 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:37:39.308 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:37:39.308 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:37:39.315 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:37:39.316 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:37:39.320 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****I_Vw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ahQw"
    }
  ],
  "ActivityId": "0HM18LEB1BCIU:00000001",
  "TimeStamp": "2020-07-15T11:37:39Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:37:39.325 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "6f0835e5b66e46a0a33017ed2895d312",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:37:39.913 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:37:39.914 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:37:39.918 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:37:39.919 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:37:39.920 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:37:39.921 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:37:39.922 +10:00 [DBG] Start discovery request
2020-07-15 21:37:39.944 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:37:39.944 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:37:39.947 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:37:39.952 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:37:39.953 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:37:39.955 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:37:39.957 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:37:39.960 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:37:39.961 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:37:39.962 +10:00 [DBG] Start userinfo request
2020-07-15 21:37:39.962 +10:00 [DBG] Bearer token found in header
2020-07-15 21:37:39.966 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:37:39.968 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:37:39.971 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:37:39.972 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813059,
    "exp": 1594813239,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:37:39.974 +10:00 [DBG] Creating userinfo response
2020-07-15 21:37:39.975 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:37:39.977 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:37:39.979 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:37:39.980 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:37:39.984 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:37:39.985 +10:00 [DBG] End userinfo request
2020-07-15 21:39:40.301 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:39:40.304 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:39:40.305 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:39:40.307 +10:00 [DBG] Start authorize request
2020-07-15 21:39:40.307 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:39:40.309 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:39:40.310 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:39:40.310 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:39:40.313 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "26aacb0d38de48538325db7b97e1acf7",
  "Nonce": "d76970bb6649488bbeb5a83626ed36a1",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "26aacb0d38de48538325db7b97e1acf7",
    "nonce": "d76970bb6649488bbeb5a83626ed36a1",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTMwNTksImV4cCI6MTU5NDgxMzM1OSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI3MmZkYjQxNmE5NDE0MzUwODFjNTQ4MjdmNTllNzBkOCIsImlhdCI6MTU5NDgxMzA1OSwiYXRfaGFzaCI6ImV5ckJYbEhyUkMwZ3NWYjNYWnRfZGciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.eO0KYx7EzoVpJE_ygdxm_4in7CRp01Jhu5t_UQR-uNSFFivVu0erl687i-gRdLZsVs301Ks_HQj343AjPKRcpC2NYQBPtPqGpSeDWSRpBfSD_mdWP3bYtC9f_JpLacRgN4kI-4qRA4D1Exw5kZbBhZVF09D-46zWVrZttt5W_KOVcv7df-tPL_KVCE7Iu_SV8Xmb45FcECrC9pOZmsqyDpM7OGuo6YgwbOEkHED_deBkIR7YMRLwOAOWKOlqsUaw_bA7wP0IlggIu6zBJkW9Fvsqwbk8ShoqSyQXGP-uanzC8A1b1tJTczSJFKdfTO1xvNWqE_ydGkfsSSFyiHI_Vw"
  }
}
2020-07-15 21:39:40.318 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:39:40.318 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:39:40.319 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:39:40.319 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:39:40.325 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:39:40.326 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:39:40.331 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****E0Jg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****od0A"
    }
  ],
  "ActivityId": "0HM18LEB1BCIU:00000002",
  "TimeStamp": "2020-07-15T11:39:40Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:39:40.336 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "26aacb0d38de48538325db7b97e1acf7",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:39:40.936 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:39:40.938 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:39:40.940 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:39:40.941 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:39:40.943 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:39:40.944 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:39:40.945 +10:00 [DBG] Start discovery request
2020-07-15 21:39:40.961 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:39:40.962 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:39:40.964 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:39:40.966 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:39:40.968 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:39:40.970 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:39:40.971 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:39:40.972 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:39:40.973 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:39:40.975 +10:00 [DBG] Start userinfo request
2020-07-15 21:39:40.975 +10:00 [DBG] Bearer token found in header
2020-07-15 21:39:40.978 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:39:40.979 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:39:40.982 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:39:40.983 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813180,
    "exp": 1594813360,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:39:40.985 +10:00 [DBG] Creating userinfo response
2020-07-15 21:39:40.985 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:39:40.987 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:39:40.989 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:39:40.991 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:39:40.994 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:39:40.995 +10:00 [DBG] End userinfo request
2020-07-15 21:41:41.299 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:41:41.301 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:41:41.304 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:41:41.305 +10:00 [DBG] Start authorize request
2020-07-15 21:41:41.306 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:41:41.306 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:41:41.307 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:41:41.308 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:41:41.309 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "72e270ecbdc245ffbc198a08683c90c3",
  "Nonce": "5a3b1ddf41ff4bc0aabe22cc84cb7103",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "72e270ecbdc245ffbc198a08683c90c3",
    "nonce": "5a3b1ddf41ff4bc0aabe22cc84cb7103",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTMxODAsImV4cCI6MTU5NDgxMzQ4MCwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiJkNzY5NzBiYjY2NDk0ODhiYmViNWE4MzYyNmVkMzZhMSIsImlhdCI6MTU5NDgxMzE4MCwiYXRfaGFzaCI6ImtZRFFnSTROYkZIZXB2Yms3WExIVEEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.AxlzVitzLf_XrHSFrDaW-h2jp1iWFWE9X4ge3HiplFSkorLksZqjQqan5AG4GwEflv_M5PZiPmgqaS-JoQ6q2K9UX_x6Wb9u85UHXTsX0k5DtFO4nZiuJUZ8eDa6T6xQiDekrWVinboUEFz4wv2508aQMx6D04er7Y18mELk4nsCVoZrsiF3ip6gc18EyJE8QKNcQQjOhcP-ub3D1yk4j-siewZA3hrYRh3ZfG_6-HvJ3Q-qm7Hv9tRLfGknAx8yXX3E5dxQlUQJzBy6uh2OYGPR1RYRZRw9W_gErV8Df35Tt4euCsiq4r-BCJ8RzQNCGctRI_urZftDEvVmrcE0Jg"
  }
}
2020-07-15 21:41:41.318 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:41:41.319 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:41:41.319 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:41:41.320 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:41:41.328 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:41:41.329 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:41:41.332 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****y-5w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****amnQ"
    }
  ],
  "ActivityId": "0HM18LEB1BCIU:00000003",
  "TimeStamp": "2020-07-15T11:41:41Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:41:41.337 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "72e270ecbdc245ffbc198a08683c90c3",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:41:41.933 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:41:41.935 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:41:41.937 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:41:41.938 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:41:41.939 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:41:41.940 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:41:41.941 +10:00 [DBG] Start discovery request
2020-07-15 21:41:41.981 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:41:41.983 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:41:41.986 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:41:41.989 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:41:41.989 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:41:41.990 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:41:41.991 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:41:41.992 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:41:41.995 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:41:41.996 +10:00 [DBG] Start userinfo request
2020-07-15 21:41:41.996 +10:00 [DBG] Bearer token found in header
2020-07-15 21:41:41.998 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:41:41.999 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:41:42.002 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:41:42.002 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813301,
    "exp": 1594813481,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:41:42.006 +10:00 [DBG] Creating userinfo response
2020-07-15 21:41:42.007 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:41:42.008 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:41:42.009 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:41:42.009 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:41:42.012 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:41:42.013 +10:00 [DBG] End userinfo request
2020-07-15 21:43:42.315 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:43:42.317 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:43:42.320 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:43:42.321 +10:00 [DBG] Start authorize request
2020-07-15 21:43:42.321 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:43:42.322 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:43:42.323 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:43:42.324 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:43:42.325 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "3f60e583c3414904b7c8b8e64eb86bc2",
  "Nonce": "30f6b167310b4686949a2b01664c7cb0",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "3f60e583c3414904b7c8b8e64eb86bc2",
    "nonce": "30f6b167310b4686949a2b01664c7cb0",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTMzMDEsImV4cCI6MTU5NDgxMzYwMSwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiI1YTNiMWRkZjQxZmY0YmMwYWFiZTIyY2M4NGNiNzEwMyIsImlhdCI6MTU5NDgxMzMwMSwiYXRfaGFzaCI6IkdFSHNzWk5mblk5Y2pMTGVBNnZiRlEiLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.Vkv71k_XdBgxdCkTVZ4AZDGwDvaFg1aaTtontfbC55gfHnPQUWZbiFC2mEO4jKtofD1KMqoV3EBNxwXqExiph5pbRKwfZYKAVmRYPMVaizuJ5H2JNwMc-x3iAsdPh6NtmXCChvK4AlcZ6zS5bEihAq3fsBFVi-WdTV0R5veUA0lQcUgaOz96oy0iRPSTeAjjo4AkpTWXrogXAsuVmz7YqhWqGdiMy6FcC5ApKtO_eFDv-M4KsP1kUtg9k_x64hsXCBjFX20XamBX4qM6cCmweAECtuWKrV7EYzTrZFlgFTde-YIWWz5XC6GLRv906zF1tHAvZ_-CbsI0itMDnJy-5w"
  }
}
2020-07-15 21:43:42.333 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:43:42.334 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:43:42.335 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:43:42.335 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:43:42.341 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:43:42.342 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:43:42.346 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****WesA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****720w"
    }
  ],
  "ActivityId": "0HM18LEB1BCJ0:00000001",
  "TimeStamp": "2020-07-15T11:43:42Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:43:42.351 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "3f60e583c3414904b7c8b8e64eb86bc2",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:43:43.037 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:43:43.038 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:43:43.041 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:43:43.042 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:43:43.043 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:43:43.044 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:43:43.045 +10:00 [DBG] Start discovery request
2020-07-15 21:43:43.068 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:43:43.070 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:43:43.073 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:43:43.075 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:43:43.076 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:43:43.077 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:43:43.080 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:43:43.081 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:43:43.082 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:43:43.083 +10:00 [DBG] Start userinfo request
2020-07-15 21:43:43.084 +10:00 [DBG] Bearer token found in header
2020-07-15 21:43:43.086 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:43:43.086 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:43:43.089 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:43:43.091 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813422,
    "exp": 1594813602,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:43:43.093 +10:00 [DBG] Creating userinfo response
2020-07-15 21:43:43.094 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:43:43.095 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:43:43.096 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:43:43.097 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:43:43.101 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:43:43.102 +10:00 [DBG] End userinfo request
2020-07-15 21:45:43.295 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:45:43.299 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:45:43.303 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:45:43.304 +10:00 [DBG] Start authorize request
2020-07-15 21:45:43.305 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:45:43.305 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:45:43.306 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:45:43.309 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:45:43.310 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "ed411052140a417791fead3e09ca2ea4",
  "Nonce": "7cce55ae935d4c2e9d98d6ac9712e9b4",
  "PromptMode": "none",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/redirect-silentrenew",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "ed411052140a417791fead3e09ca2ea4",
    "nonce": "7cce55ae935d4c2e9d98d6ac9712e9b4",
    "prompt": "none",
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc4NjJjMTdjN2QwZWRkNjgyNzQ0OTNmNGNhZGYyNDE2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTQ4MTM0MjIsImV4cCI6MTU5NDgxMzcyMiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6NTAwMSIsImF1ZCI6ImJsb2ctY2xpZW50Iiwibm9uY2UiOiIzMGY2YjE2NzMxMGI0Njg2OTQ5YTJiMDE2NjRjN2NiMCIsImlhdCI6MTU5NDgxMzQyMiwiYXRfaGFzaCI6Ik1UNFByN3hZdjJjR2w0OTBtZU9PcnciLCJzaWQiOiI4ZTFlZjFiYThmMWZkNTRmZTkyYjFhNzMwZTM0NGFmNCIsInN1YiI6ImM5YzkxNzhlLTRiMzMtNDg0ZS1hY2FjLWZmY2RiMDUyOTlkYiIsImF1dGhfdGltZSI6MTU5NDc5NzMxNSwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.MsvHuwGfTEv1qpQVjpa2Jp2iAFDCSfzb7oKy_jowi-gappRQwHlgpFsqEwWZ-X5ljlpx989nyQ8gTjgDxEgQrcsMaiTGlTBX5HpJCu0W2YuCErX5UQti-1GZSjasQvzwKM6sjw5voPWpOq9CMewVuvMSI3uprJl1Lho0V4btmBxs0GuCRUWIOiefnCMLTrsuMkRKOAl1pyQ4B4bK7N1A1Z0ixJbQxyOZvUy524OjBHzWyWcs4eZQbMzynpEtVBcS9P6LlWeOOJpnwHh7BbDYrZ90oyO-FuO_3c7xzViQrIgVIdd6qxdCduLBkb9HBwlHZjHLCGUL8mzfJNXrRjWesA"
  }
}
2020-07-15 21:45:43.317 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:45:43.318 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:45:43.319 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:45:43.320 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:45:43.326 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:45:43.327 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:45:43.332 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****WeuA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****WbWw"
    }
  ],
  "ActivityId": "0HM18LEB1BCJ0:00000002",
  "TimeStamp": "2020-07-15T11:45:43Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:45:43.335 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/redirect-silentrenew",
  "State": "ed411052140a417791fead3e09ca2ea4",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:45:44.066 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:45:44.068 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:45:44.072 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:45:44.072 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:45:44.073 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:45:44.074 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:45:44.075 +10:00 [DBG] Start discovery request
2020-07-15 21:45:44.095 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:45:44.097 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:45:44.099 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:45:44.102 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:45:44.103 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:45:44.104 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:45:44.104 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:45:44.107 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:45:44.108 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:45:44.110 +10:00 [DBG] Start userinfo request
2020-07-15 21:45:44.110 +10:00 [DBG] Bearer token found in header
2020-07-15 21:45:44.112 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:45:44.113 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:45:44.116 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:45:44.118 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813543,
    "exp": 1594813723,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:45:44.119 +10:00 [DBG] Creating userinfo response
2020-07-15 21:45:44.120 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:45:44.121 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:45:44.122 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:45:44.123 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:45:44.126 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:45:44.128 +10:00 [DBG] End userinfo request
2020-07-15 21:47:16.913 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:47:16.915 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:16.918 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:16.919 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:47:16.920 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:47:16.921 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:47:16.922 +10:00 [DBG] Start discovery request
2020-07-15 21:47:17.018 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 21:47:17.020 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 21:47:17.023 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 21:47:17.024 +10:00 [DBG] Rendering check session result
2020-07-15 21:47:24.404 +10:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-07-15 21:47:24.406 +10:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-07-15 21:47:24.409 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-07-15 21:47:24.410 +10:00 [DBG] Start authorize request
2020-07-15 21:47:24.411 +10:00 [DBG] User in authorize request: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:47:24.412 +10:00 [DBG] Start authorize request protocol validation
2020-07-15 21:47:24.414 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:47:24.417 +10:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-07-15 21:47:24.418 +10:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:4200/signin-oidc",
    "http://localhost:4200/redirect-silentrenew"
  ],
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile email restapi",
  "State": "1d7316a334ff4e7384a160fd592537cd",
  "Nonce": "864efc5b19f54765880b2561ab5d96cf",
  "SessionId": "8e1ef1ba8f1fd54fe92b1a730e344af4",
  "Raw": {
    "client_id": "blog-client",
    "redirect_uri": "http://localhost:4200/signin-oidc",
    "response_type": "id_token token",
    "scope": "openid profile email restapi",
    "state": "1d7316a334ff4e7384a160fd592537cd",
    "nonce": "864efc5b19f54765880b2561ab5d96cf"
  }
}
2020-07-15 21:47:24.424 +10:00 [DBG] Client is configured to not require consent, no consent is required
2020-07-15 21:47:24.426 +10:00 [DBG] Creating Implicit Flow response.
2020-07-15 21:47:24.426 +10:00 [DBG] Getting claims for access token for client: blog-client
2020-07-15 21:47:24.427 +10:00 [DBG] Getting claims for access token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db
2020-07-15 21:47:24.434 +10:00 [DBG] Getting claims for identity token for subject: c9c9178e-4b33-484e-acac-ffcdb05299db and client: blog-client
2020-07-15 21:47:24.436 +10:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-07-15 21:47:24.441 +10:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "blog-client",
  "ClientName": "Blog Client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "Scopes": "openid profile email restapi",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zfIA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Ts0g"
    }
  ],
  "ActivityId": "0HM18LEB1BCJ0:00000004",
  "TimeStamp": "2020-07-15T11:47:24Z",
  "ProcessId": 10936,
  "LocalIpAddress": "::1:5001",
  "RemoteIpAddress": "::1"
}
2020-07-15 21:47:24.444 +10:00 [INF] Authorize endpoint response
{
  "SubjectId": "c9c9178e-4b33-484e-acac-ffcdb05299db",
  "ClientId": "blog-client",
  "RedirectUri": "http://localhost:4200/signin-oidc",
  "State": "1d7316a334ff4e7384a160fd592537cd",
  "Scope": "openid profile email restapi"
}
2020-07-15 21:47:25.218 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:47:25.220 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:25.222 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:25.223 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:47:25.225 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:47:25.226 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:47:25.227 +10:00 [DBG] Start discovery request
2020-07-15 21:47:25.234 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2020-07-15 21:47:25.236 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:25.237 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:25.239 +10:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-07-15 21:47:25.240 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-07-15 21:47:25.241 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-07-15 21:47:25.246 +10:00 [DBG] Start discovery request
2020-07-15 21:47:25.258 +10:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-07-15 21:47:25.259 +10:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-07-15 21:47:25.262 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-07-15 21:47:25.263 +10:00 [DBG] Rendering check session result
2020-07-15 21:47:25.273 +10:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2020-07-15 21:47:25.274 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:25.277 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:25.281 +10:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-07-15 21:47:25.283 +10:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-07-15 21:47:25.285 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-07-15 21:47:25.286 +10:00 [DBG] Start key discovery request
2020-07-15 21:47:25.334 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:47:25.337 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:25.339 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:25.343 +10:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2020-07-15 21:47:25.344 +10:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2020-07-15 21:47:25.348 +10:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2020-07-15 21:47:25.349 +10:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-07-15 21:47:25.351 +10:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-07-15 21:47:25.352 +10:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-07-15 21:47:25.353 +10:00 [DBG] Start userinfo request
2020-07-15 21:47:25.354 +10:00 [DBG] Bearer token found in header
2020-07-15 21:47:25.358 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:47:25.359 +10:00 [DBG] client configuration validation for client blog-client succeeded.
2020-07-15 21:47:25.362 +10:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-07-15 21:47:25.363 +10:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1594813644,
    "exp": 1594813824,
    "iss": "https://localhost:5001",
    "aud": [
      "https://localhost:5001/resources",
      "restapi"
    ],
    "client_id": "blog-client",
    "sub": "c9c9178e-4b33-484e-acac-ffcdb05299db",
    "auth_time": 1594797315,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "email",
      "restapi"
    ],
    "amr": "pwd"
  }
}
2020-07-15 21:47:25.366 +10:00 [DBG] Creating userinfo response
2020-07-15 21:47:25.366 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:47:25.370 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:47:25.371 +10:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at email email_verified
2020-07-15 21:47:25.373 +10:00 [DBG] Scopes in access token: openid profile email restapi
2020-07-15 21:47:25.377 +10:00 [INF] Profile service returned to the following claim types: sub name given_name family_name email email_verified website preferred_username
2020-07-15 21:47:25.380 +10:00 [DBG] End userinfo request
